# ACW for ExpandCalculator.Android
# ACW for FormsViewGroup
-keep class com.xamarin.forms.platform.android.FormsViewGroup
-keepclassmembers class com.xamarin.forms.platform.android.FormsViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

-keep class com.xamarin.formsviewgroup.BuildConfig
-keepclassmembers class com.xamarin.formsviewgroup.BuildConfig {
   <init>(...);
}

# ACW for Plugin.MaterialDesignControls.Android
# ACW for Plugin.SimpleAudioPlayer
# ACW for SegmentedControl.FormsPlugin.Android
# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getActivityResultRegistry(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addOnConfigurationChangedListener(...);
   *** addOnContextAvailableListener(...);
   *** addOnMultiWindowModeChangedListener(...);
   *** addOnNewIntentListener(...);
   *** addOnPictureInPictureModeChangedListener(...);
   *** addOnTrimMemoryListener(...);
   *** invalidateMenu(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** peekAvailableContext(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** removeMenuProvider(...);
   *** removeOnConfigurationChangedListener(...);
   *** removeOnContextAvailableListener(...);
   *** removeOnMultiWindowModeChangedListener(...);
   *** removeOnNewIntentListener(...);
   *** removeOnPictureInPictureModeChangedListener(...);
   *** removeOnTrimMemoryListener(...);
}

-keep class androidx.activity.ComponentDialog
-keepclassmembers class androidx.activity.ComponentDialog {
   <init>(...);
   <init>(...);
   *** getLifecycle(...);
   *** getOnBackPressedDispatcher(...);
}

-keep class androidx.activity.OnBackPressedDispatcherOwner
-keepclassmembers class androidx.activity.OnBackPressedDispatcherOwner {
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

-keep class androidx.activity.contextaware.ContextAware
-keepclassmembers class androidx.activity.contextaware.ContextAware {
}

-keep class androidx.activity.contextaware.OnContextAvailableListener
-keepclassmembers class androidx.activity.contextaware.OnContextAvailableListener {
}

-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor
-keepclassmembers class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor {
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   <init>(...);
   *** getContract(...);
   *** launch(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   *** getContract(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   <init>(...);
   *** dispatchResult(...);
   *** dispatchResult(...);
   *** onLaunch(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** register(...);
   *** register(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   *** onLaunch(...);
}

-keep class androidx.activity.result.ActivityResultCallback
-keepclassmembers class androidx.activity.result.ActivityResultCallback {
}

-keep class androidx.activity.result.ActivityResultCaller
-keepclassmembers class androidx.activity.result.ActivityResultCaller {
}

-keep class androidx.activity.result.ActivityResultRegistryOwner
-keepclassmembers class androidx.activity.result.ActivityResultRegistryOwner {
}

-keep class androidx.activity.result.contract.ActivityResultContract$SynchronousResult
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract$SynchronousResult {
   <init>(...);
   *** getValue(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   <init>(...);
   *** createIntent(...);
   *** getSynchronousResult(...);
   *** parseResult(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   *** createIntent(...);
   *** parseResult(...);
}

# ACW for Xamarin.AndroidX.Annotation
# ACW for Xamarin.AndroidX.Annotation.Experimental
-keep class androidx.annotation.OptIn
-keepclassmembers class androidx.annotation.OptIn {
}

-keep class androidx.annotation.RequiresOptIn$Level
-keepclassmembers class androidx.annotation.RequiresOptIn$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.RequiresOptIn
-keepclassmembers class androidx.annotation.RequiresOptIn {
}

-keep class androidx.annotation.experimental.Experimental$Level
-keepclassmembers class androidx.annotation.experimental.Experimental$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.experimental.Experimental
-keepclassmembers class androidx.annotation.experimental.Experimental {
}

-keep class androidx.annotation.experimental.UseExperimental
-keepclassmembers class androidx.annotation.experimental.UseExperimental {
}

# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.graphics.drawable.DrawableWrapperCompat
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapperCompat {
   <init>(...);
   *** getDrawable(...);
   *** setDrawable(...);
   *** getOpacity(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.AlertDialog$Builder
-keepclassmembers class androidx.appcompat.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class androidx.appcompat.app.AlertDialog
-keepclassmembers class androidx.appcompat.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onLocalesChanged(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getApplicationLocales(...);
   *** setApplicationLocales(...);
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getContextForDelegate(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDialog
-keepclassmembers class androidx.appcompat.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$LayoutParams
-keepclassmembers class androidx.appcompat.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBackInvokedCallbackEnabled(...);
   *** setBackInvokedCallbackEnabled(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** invalidateMenu(...);
   *** onLayout(...);
   *** removeMenuProvider(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatAutoCompleteTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatButton
-keepclassmembers class androidx.appcompat.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatEditText
-keepclassmembers class androidx.appcompat.widget.AppCompatEditText {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** onReceiveContent(...);
}

-keep class androidx.appcompat.widget.AppCompatImageButton
-keepclassmembers class androidx.appcompat.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatImageView
-keepclassmembers class androidx.appcompat.widget.AppCompatImageView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatRadioButton
-keepclassmembers class androidx.appcompat.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** getTextMetricsParamsCompat(...);
   *** setTextMetricsParamsCompat(...);
   *** setPrecomputedText(...);
   *** setTextFuture(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.EmojiCompatConfigurationView
-keepclassmembers class androidx.appcompat.widget.EmojiCompatConfigurationView {
}

-keep class androidx.appcompat.widget.LinearLayoutCompat
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.widget.SearchView$OnCloseListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnCloseListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnCloseListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnCloseListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView$OnQueryTextListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnQueryTextListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnQueryTextListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnQueryTextListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView$OnSuggestionListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnSuggestionListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnSuggestionListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnSuggestionListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView
-keepclassmembers class androidx.appcompat.widget.SearchView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isIconified(...);
   *** setIconified(...);
   *** getImeOptions(...);
   *** setImeOptions(...);
   *** getInputType(...);
   *** setInputType(...);
   *** isIconfiedByDefault(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getQuery(...);
   *** getQueryHint(...);
   *** setQueryHint(...);
   *** isQueryRefinementEnabled(...);
   *** setQueryRefinementEnabled(...);
   *** isSubmitButtonEnabled(...);
   *** setSubmitButtonEnabled(...);
   *** getSuggestionsAdapter(...);
   *** setSuggestionsAdapter(...);
   *** onActionViewCollapsed(...);
   *** onActionViewExpanded(...);
   *** onQueryRefine(...);
   *** setAppSearchData(...);
   *** setIconifiedByDefault(...);
   *** setOnCloseListener(...);
   *** setOnQueryTextFocusChangeListener(...);
   *** setOnQueryTextListener(...);
   *** setOnSearchClickListener(...);
   *** setOnSuggestionListener(...);
   *** setQuery(...);
   *** setSearchableInfo(...);
}

-keep class androidx.appcompat.widget.SwitchCompat
-keepclassmembers class androidx.appcompat.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbPosition(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setEnforceSwitchWidth(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.CollapsibleActionView
-keepclassmembers class androidx.appcompat.view.CollapsibleActionView {
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView$ItemView
-keepclassmembers class androidx.appcompat.view.menu.MenuView$ItemView {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Common
-keep class androidx.arch.core.util.Function
-keepclassmembers class androidx.arch.core.util.Function {
}

-keep class androidx.arch.core.internal.FastSafeIterableMap
-keepclassmembers class androidx.arch.core.internal.FastSafeIterableMap {
   <init>(...);
   *** ceil(...);
   *** contains(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$Entry
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$Entry {
   *** getKey(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions {
   *** hasNext(...);
   *** next(...);
   *** remove(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
   *** hasNext(...);
   *** next(...);
   *** remove(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
   *** remove(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$SupportRemove
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$SupportRemove {
   <init>(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$SupportRemove
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$SupportRemove {
}

-keep class androidx.arch.core.internal.SafeIterableMap
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap {
   <init>(...);
   *** descendingIterator(...);
   *** eldest(...);
   *** get(...);
   *** iterator(...);
   *** iteratorWithAdditions(...);
   *** newest(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Runtime
-keep class androidx.arch.core.executor.ArchTaskExecutor
-keepclassmembers class androidx.arch.core.executor.ArchTaskExecutor {
   *** getIOThreadExecutor(...);
   *** getInstance(...);
   *** isMainThread(...);
   *** getMainThreadExecutor(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
   *** setDelegate(...);
}

-keep class androidx.arch.core.executor.DefaultTaskExecutor
-keepclassmembers class androidx.arch.core.executor.DefaultTaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** executeOnMainThread(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

# ACW for Xamarin.AndroidX.AsyncLayoutInflater
-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener {
}

-keep class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor
-keepclassmembers class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor {
}

-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.AndroidX.Browser
-keep class androidx.browser.customtabs.CustomTabColorSchemeParams
-keepclassmembers class androidx.browser.customtabs.CustomTabColorSchemeParams {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$Builder {
   <init>(...);
   <init>(...);
   *** addDefaultShareMenuItem(...);
   *** addMenuItem(...);
   *** addToolbarItem(...);
   *** build(...);
   *** enableUrlBarHiding(...);
   *** setActionButton(...);
   *** setActionButton(...);
   *** setCloseButtonIcon(...);
   *** setColorScheme(...);
   *** setColorSchemeParams(...);
   *** setDefaultColorSchemeParams(...);
   *** setDefaultShareMenuItemEnabled(...);
   *** setExitAnimations(...);
   *** setInstantAppsEnabled(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setPendingSession(...);
   *** setSecondaryToolbarColor(...);
   *** setSecondaryToolbarViews(...);
   *** setSession(...);
   *** setShareState(...);
   *** setShowTitle(...);
   *** setStartAnimations(...);
   *** setToolbarColor(...);
   *** setUrlBarHidingEnabled(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent {
   *** getMaxToolbarItems(...);
   *** getColorSchemeParams(...);
   *** launchUrl(...);
   *** setAlwaysUseBrowserUI(...);
   *** shouldAlwaysUseBrowserUI(...);
}

-keep class androidx.browser.customtabs.CustomTabsSession$PendingSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession$PendingSession {
}

-keep class androidx.browser.customtabs.CustomTabsSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession {
   *** createMockSessionForTesting(...);
   *** mayLaunchUrl(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** setActionButton(...);
   *** setSecondaryToolbarViews(...);
   *** setToolbarItem(...);
   *** validateRelationship(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.AndroidX.Collection
-keep class androidx.collection.ArrayMap
-keepclassmembers class androidx.collection.ArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsAll(...);
   *** entrySet(...);
   *** keySet(...);
   *** putAll(...);
   *** removeAll(...);
   *** retainAll(...);
   *** values(...);
}

-keep class androidx.collection.ArraySet
-keepclassmembers class androidx.collection.ArraySet {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** ensureCapacity(...);
   *** indexOf(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAt(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
   *** valueAt(...);
}

-keep class androidx.collection.CircularArray
-keepclassmembers class androidx.collection.CircularArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.CircularIntArray
-keepclassmembers class androidx.collection.CircularIntArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.LongSparseArray
-keepclassmembers class androidx.collection.LongSparseArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.LruCache
-keepclassmembers class androidx.collection.LruCache {
   <init>(...);
   *** create(...);
   *** createCount(...);
   *** entryRemoved(...);
   *** evictAll(...);
   *** evictionCount(...);
   *** get(...);
   *** hitCount(...);
   *** maxSize(...);
   *** missCount(...);
   *** put(...);
   *** putCount(...);
   *** remove(...);
   *** resize(...);
   *** size(...);
   *** sizeOf(...);
   *** snapshot(...);
   *** toString(...);
   *** trimToSize(...);
}

-keep class androidx.collection.SimpleArrayMap
-keepclassmembers class androidx.collection.SimpleArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** ensureCapacity(...);
   *** get(...);
   *** getOrDefault(...);
   *** indexOfKey(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.Concurrent.Futures
-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
   <init>(...);
   *** isCancelled(...);
   *** isDone(...);
   *** addListener(...);
   *** afterDone(...);
   *** cancel(...);
   *** get(...);
   *** get(...);
   *** interruptTask(...);
   *** pendingToString(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
   *** wasInterrupted(...);
}

-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Completer
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Completer {
   *** addCancellationListener(...);
   *** set(...);
   *** setCancelled(...);
   *** setException(...);
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter {
   *** getFuture(...);
}

-keep class androidx.concurrent.futures.DirectExecutor
-keepclassmembers class androidx.concurrent.futures.DirectExecutor {
   *** execute(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.concurrent.futures.ResolvableFuture
-keepclassmembers class androidx.concurrent.futures.ResolvableFuture {
   *** create(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
}

# ACW for Xamarin.AndroidX.ConstraintLayout.Core
-keep class androidx.constraintlayout.core.ArrayLinkedVariables
-keepclassmembers class androidx.constraintlayout.core.ArrayLinkedVariables {
   *** getCurrentSize(...);
   *** getHead(...);
   *** add(...);
   *** clear(...);
   *** contains(...);
   *** display(...);
   *** divideByAmount(...);
   *** get(...);
   *** getId(...);
   *** getNextIndice(...);
   *** getValue(...);
   *** getVariable(...);
   *** getVariableValue(...);
   *** indexOf(...);
   *** invert(...);
   *** put(...);
   *** remove(...);
   *** sizeInBytes(...);
   *** use(...);
}

-keep class androidx.constraintlayout.core.ArrayRow$ArrayRowVariables
-keepclassmembers class androidx.constraintlayout.core.ArrayRow$ArrayRowVariables {
}

-keep class androidx.constraintlayout.core.ArrayRow
-keepclassmembers class androidx.constraintlayout.core.ArrayRow {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** getKey(...);
   *** addError(...);
   *** addError(...);
   *** clear(...);
   *** createRowDimensionRatio(...);
   *** createRowEqualDimension(...);
   *** createRowEqualMatchDimensions(...);
   *** createRowEquals(...);
   *** createRowEquals(...);
   *** createRowGreaterThan(...);
   *** createRowGreaterThan(...);
   *** createRowLowerThan(...);
   *** createRowWithAngle(...);
   *** getPivotCandidate(...);
   *** pickPivot(...);
   *** reset(...);
   *** updateFromFinalVariable(...);
   *** updateFromRow(...);
   *** updateFromSynonymVariable(...);
   *** updateFromSystem(...);
}

-keep class androidx.constraintlayout.core.Cache
-keepclassmembers class androidx.constraintlayout.core.Cache {
   <init>(...);
}

-keep class androidx.constraintlayout.core.GoalRow
-keepclassmembers class androidx.constraintlayout.core.GoalRow {
   <init>(...);
}

-keep class androidx.constraintlayout.core.LinearSystem
-keepclassmembers class androidx.constraintlayout.core.LinearSystem {
   <init>(...);
   *** getCache(...);
   *** getMemoryUsed(...);
   *** getMetrics(...);
   *** getNumEquations(...);
   *** getNumVariables(...);
   *** addCenterPoint(...);
   *** addCentering(...);
   *** addConstraint(...);
   *** addEquality(...);
   *** addEquality(...);
   *** addGreaterBarrier(...);
   *** addGreaterThan(...);
   *** addLowerBarrier(...);
   *** addLowerThan(...);
   *** addRatio(...);
   *** addSynonym(...);
   *** createErrorVariable(...);
   *** createExtraVariable(...);
   *** createObjectVariable(...);
   *** createRow(...);
   *** createRowDimensionPercent(...);
   *** createSlackVariable(...);
   *** displayReadableRows(...);
   *** displayVariablesReadableRows(...);
   *** fillMetrics(...);
   *** getObjectVariableValue(...);
   *** minimize(...);
   *** removeRow(...);
   *** reset(...);
}

-keep class androidx.constraintlayout.core.Metrics
-keepclassmembers class androidx.constraintlayout.core.Metrics {
   <init>(...);
   *** reset(...);
}

-keep class androidx.constraintlayout.core.PriorityGoalRow
-keepclassmembers class androidx.constraintlayout.core.PriorityGoalRow {
   <init>(...);
}

-keep class androidx.constraintlayout.core.SolverVariable$Type
-keepclassmembers class androidx.constraintlayout.core.SolverVariable$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.SolverVariable
-keepclassmembers class androidx.constraintlayout.core.SolverVariable {
   <init>(...);
   <init>(...);
   *** getName(...);
   *** setName(...);
   *** addToRow(...);
   *** compareTo(...);
   *** removeFromRow(...);
   *** reset(...);
   *** setFinalValue(...);
   *** setSynonym(...);
   *** setType(...);
   *** updateReferencesWithNewDefinition(...);
}

-keep class androidx.constraintlayout.core.SolverVariableValues
-keepclassmembers class androidx.constraintlayout.core.SolverVariableValues {
   *** getCurrentSize(...);
   *** add(...);
   *** clear(...);
   *** contains(...);
   *** display(...);
   *** divideByAmount(...);
   *** get(...);
   *** getVariable(...);
   *** getVariableValue(...);
   *** indexOf(...);
   *** invert(...);
   *** put(...);
   *** remove(...);
   *** sizeInBytes(...);
   *** use(...);
}

-keep class androidx.constraintlayout.core.widgets.Barrier
-keepclassmembers class androidx.constraintlayout.core.widgets.Barrier {
   <init>(...);
   <init>(...);
   *** getAllowsGoneWidget(...);
   *** setAllowsGoneWidget(...);
   *** getBarrierType(...);
   *** setBarrierType(...);
   *** getMargin(...);
   *** setMargin(...);
   *** getOrientation(...);
   *** allSolved(...);
   *** allowsGoneWidget(...);
   *** markWidgets(...);
}

-keep class androidx.constraintlayout.core.widgets.Chain
-keepclassmembers class androidx.constraintlayout.core.widgets.Chain {
   <init>(...);
   *** applyChainConstraints(...);
}

-keep class androidx.constraintlayout.core.widgets.ChainHead
-keepclassmembers class androidx.constraintlayout.core.widgets.ChainHead {
   <init>(...);
   *** getFirst(...);
   *** getFirstMatchConstraintWidget(...);
   *** getFirstVisibleWidget(...);
   *** getHead(...);
   *** getLast(...);
   *** getLastMatchConstraintWidget(...);
   *** getLastVisibleWidget(...);
   *** getTotalWeight(...);
   *** define(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintAnchor$Type
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintAnchor$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintAnchor
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintAnchor {
   <init>(...);
   *** getDependents(...);
   *** getFinalValue(...);
   *** setFinalValue(...);
   *** hasCenteredDependents(...);
   *** hasDependents(...);
   *** hasFinalValue(...);
   *** isConnected(...);
   *** isSideAnchor(...);
   *** isVerticalAnchor(...);
   *** getMargin(...);
   *** setMargin(...);
   *** getOpposite(...);
   *** getOwner(...);
   *** getSolverVariable(...);
   *** getTarget(...);
   *** connect(...);
   *** connect(...);
   *** copyFrom(...);
   *** findDependents(...);
   *** getType(...);
   *** isConnectionAllowed(...);
   *** isConnectionAllowed(...);
   *** isSimilarDimensionConnection(...);
   *** isValidConnection(...);
   *** reset(...);
   *** resetFinalResolution(...);
   *** resetSolverVariable(...);
   *** setGoneMargin(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidget
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidget {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchors(...);
   *** getBaselineDistance(...);
   *** setBaselineDistance(...);
   *** getBottom(...);
   *** getCompanionWidget(...);
   *** setCompanionWidget(...);
   *** getContainerItemSkip(...);
   *** setContainerItemSkip(...);
   *** getDebugName(...);
   *** setDebugName(...);
   *** getDimensionRatio(...);
   *** getDimensionRatioSide(...);
   *** hasBaseline(...);
   *** setHasBaseline(...);
   *** hasDependencies(...);
   *** hasDimensionOverride(...);
   *** getHeight(...);
   *** setHeight(...);
   *** isHeightWrapContent(...);
   *** setHeightWrapContent(...);
   *** getHorizontalBiasPercent(...);
   *** setHorizontalBiasPercent(...);
   *** getHorizontalChainControlWidget(...);
   *** getHorizontalChainStyle(...);
   *** setHorizontalChainStyle(...);
   *** getHorizontalDimensionBehaviour(...);
   *** setHorizontalDimensionBehaviour(...);
   *** getHorizontalMargin(...);
   *** isInPlaceholder(...);
   *** setInPlaceholder(...);
   *** isInVirtualLayout(...);
   *** setInVirtualLayout(...);
   *** isHorizontalSolvingPassDone(...);
   *** isInHorizontalChain(...);
   *** isInVerticalChain(...);
   *** isResolvedHorizontally(...);
   *** isResolvedVertically(...);
   *** isRoot(...);
   *** isSpreadHeight(...);
   *** isSpreadWidth(...);
   *** isVerticalSolvingPassDone(...);
   *** getLastHorizontalMeasureSpec(...);
   *** getLastVerticalMeasureSpec(...);
   *** getLeft(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** isMeasureRequested(...);
   *** setMeasureRequested(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getOptimizerWrapHeight(...);
   *** getOptimizerWrapWidth(...);
   *** getParent(...);
   *** setParent(...);
   *** getRight(...);
   *** getRootX(...);
   *** getRootY(...);
   *** getTop(...);
   *** getType(...);
   *** setType(...);
   *** getVerticalBiasPercent(...);
   *** setVerticalBiasPercent(...);
   *** getVerticalChainControlWidget(...);
   *** getVerticalChainStyle(...);
   *** setVerticalChainStyle(...);
   *** getVerticalDimensionBehaviour(...);
   *** setVerticalDimensionBehaviour(...);
   *** getVerticalMargin(...);
   *** getVisibility(...);
   *** setVisibility(...);
   *** getWidth(...);
   *** setWidth(...);
   *** isWidthWrapContent(...);
   *** setWidthWrapContent(...);
   *** getWrapBehaviorInParent(...);
   *** setWrapBehaviorInParent(...);
   *** addChildrenToSolverByDependency(...);
   *** addToSolver(...);
   *** allowedInBarrier(...);
   *** connect(...);
   *** connect(...);
   *** connect(...);
   *** connectCircularConstraint(...);
   *** copy(...);
   *** createObjectVariables(...);
   *** ensureMeasureRequested(...);
   *** ensureWidgetRuns(...);
   *** getAnchor(...);
   *** getBiasPercent(...);
   *** getDimensionBehaviour(...);
   *** getLength(...);
   *** getNextChainMember(...);
   *** getPreviousChainMember(...);
   *** getRun(...);
   *** getX(...);
   *** getY(...);
   *** getHasBaseline(...);
   *** hasDanglingDimension(...);
   *** hasResolvedTargets(...);
   *** immediateConnect(...);
   *** isInBarrier(...);
   *** markHorizontalSolvingPassDone(...);
   *** markVerticalSolvingPassDone(...);
   *** oppositeDimensionDependsOn(...);
   *** oppositeDimensionsTied(...);
   *** reset(...);
   *** resetAllConstraints(...);
   *** resetAnchor(...);
   *** resetAnchors(...);
   *** resetFinalResolution(...);
   *** resetSolverVariables(...);
   *** resetSolvingPassFlag(...);
   *** serialize(...);
   *** setDebugSolverName(...);
   *** setDimension(...);
   *** setDimensionRatio(...);
   *** setDimensionRatio(...);
   *** setFinalBaseline(...);
   *** setFinalFrame(...);
   *** setFinalHorizontal(...);
   *** setFinalLeft(...);
   *** setFinalTop(...);
   *** setFinalVertical(...);
   *** setFrame(...);
   *** setFrame(...);
   *** setGoneMargin(...);
   *** setHorizontalDimension(...);
   *** setHorizontalMatchStyle(...);
   *** setHorizontalWeight(...);
   *** setInBarrier(...);
   *** setLastMeasureSpec(...);
   *** setLength(...);
   *** setOffset(...);
   *** setOrigin(...);
   *** setVerticalDimension(...);
   *** setVerticalMatchStyle(...);
   *** setVerticalWeight(...);
   *** setX(...);
   *** setY(...);
   *** setupDimensionRatio(...);
   *** updateFromRuns(...);
   *** updateFromSolver(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidgetContainer
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidgetContainer {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getHorizontalGuidelines(...);
   *** isHeightMeasuredTooSmall(...);
   *** isWidthMeasuredTooSmall(...);
   *** getMeasurer(...);
   *** setMeasurer(...);
   *** getOptimizationLevel(...);
   *** setOptimizationLevel(...);
   *** isRtl(...);
   *** setRtl(...);
   *** getSystem(...);
   *** getVerticalGuidelines(...);
   *** addChildrenToSolver(...);
   *** addHorizontalWrapMaxVariable(...);
   *** addHorizontalWrapMinVariable(...);
   *** defineTerminalWidgets(...);
   *** directMeasure(...);
   *** directMeasureSetup(...);
   *** directMeasureWithOrientation(...);
   *** fillMetrics(...);
   *** handlesInternalConstraints(...);
   *** invalidateGraph(...);
   *** invalidateMeasures(...);
   *** measure(...);
   *** measure(...);
   *** optimizeFor(...);
   *** setPadding(...);
   *** setPass(...);
   *** updateChildrenFromSolver(...);
   *** updateHierarchy(...);
}

-keep class androidx.constraintlayout.core.widgets.Flow
-keepclassmembers class androidx.constraintlayout.core.widgets.Flow {
   <init>(...);
   *** setFirstHorizontalBias(...);
   *** setFirstHorizontalStyle(...);
   *** setFirstVerticalBias(...);
   *** setFirstVerticalStyle(...);
   *** setHorizontalAlign(...);
   *** setHorizontalBias(...);
   *** setHorizontalGap(...);
   *** setHorizontalStyle(...);
   *** setLastHorizontalBias(...);
   *** setLastHorizontalStyle(...);
   *** setLastVerticalBias(...);
   *** setLastVerticalStyle(...);
   *** setMaxElementsWrap(...);
   *** setOrientation(...);
   *** setVerticalAlign(...);
   *** setVerticalBias(...);
   *** setVerticalGap(...);
   *** setVerticalStyle(...);
   *** setWrapMode(...);
}

-keep class androidx.constraintlayout.core.widgets.Guideline
-keepclassmembers class androidx.constraintlayout.core.widgets.Guideline {
   <init>(...);
   *** getAnchor(...);
   *** isPercent(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRelativeBegin(...);
   *** getRelativeBehaviour(...);
   *** getRelativeEnd(...);
   *** getRelativePercent(...);
   *** cyclePosition(...);
   *** setFinalValue(...);
   *** setGuideBegin(...);
   *** setGuideEnd(...);
   *** setGuidePercent(...);
   *** setGuidePercent(...);
   *** setMinimumPosition(...);
}

-keep class androidx.constraintlayout.core.widgets.HelperWidget
-keepclassmembers class androidx.constraintlayout.core.widgets.HelperWidget {
   <init>(...);
   *** add(...);
   *** addDependents(...);
   *** findGroupInDependents(...);
   *** removeAllIds(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.core.widgets.Helper
-keepclassmembers class androidx.constraintlayout.core.widgets.Helper {
}

-keep class androidx.constraintlayout.core.widgets.Optimizer
-keepclassmembers class androidx.constraintlayout.core.widgets.Optimizer {
   <init>(...);
   *** enabled(...);
}

-keep class androidx.constraintlayout.core.widgets.Rectangle
-keepclassmembers class androidx.constraintlayout.core.widgets.Rectangle {
   <init>(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** contains(...);
   *** setBounds(...);
}

-keep class androidx.constraintlayout.core.widgets.VirtualLayout
-keepclassmembers class androidx.constraintlayout.core.widgets.VirtualLayout {
   <init>(...);
   *** getMeasuredHeight(...);
   *** getMeasuredWidth(...);
   *** getPaddingBottom(...);
   *** setPaddingBottom(...);
   *** getPaddingLeft(...);
   *** setPaddingLeft(...);
   *** getPaddingRight(...);
   *** setPaddingRight(...);
   *** getPaddingTop(...);
   *** setPaddingTop(...);
   *** applyRtl(...);
   *** captureWidgets(...);
   *** contains(...);
   *** measure(...);
   *** measure(...);
   *** measureChildren(...);
   *** needSolverPass(...);
   *** needsCallbackFromSolver(...);
   *** setMeasure(...);
   *** setPadding(...);
   *** setPaddingEnd(...);
   *** setPaddingStart(...);
}

-keep class androidx.constraintlayout.core.widgets.WidgetContainer
-keepclassmembers class androidx.constraintlayout.core.widgets.WidgetContainer {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getChildren(...);
   *** getRootConstraintContainer(...);
   *** add(...);
   *** add(...);
   *** layout(...);
   *** remove(...);
   *** removeAllChildren(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure {
   <init>(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer {
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure {
   <init>(...);
   *** solverMeasure(...);
   *** updateHierarchy(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.ChainRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.ChainRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.DependencyGraph
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.DependencyGraph {
   <init>(...);
   *** buildGraph(...);
   *** buildGraph(...);
   *** defineTerminalWidgets(...);
   *** directMeasure(...);
   *** directMeasureSetup(...);
   *** directMeasureWithOrientation(...);
   *** invalidateGraph(...);
   *** invalidateMeasures(...);
   *** measureWidgets(...);
   *** setMeasurer(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.DependencyNode
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.DependencyNode {
   <init>(...);
   *** addDependency(...);
   *** clear(...);
   *** name(...);
   *** resolve(...);
   *** update(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.Direct
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.Direct {
   <init>(...);
   *** ls(...);
   *** solveChain(...);
   *** solvingPass(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.Grouping
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.Grouping {
   <init>(...);
   *** findDependents(...);
   *** simpleSolvingPass(...);
   *** validInGroup(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.Dependency
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.Dependency {
}

-keep class androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetGroup
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetGroup {
   <init>(...);
   *** isAuthoritative(...);
   *** setAuthoritative(...);
   *** getId(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** add(...);
   *** apply(...);
   *** cleanup(...);
   *** clear(...);
   *** intersectWith(...);
   *** measureWrap(...);
   *** moveTo(...);
   *** size(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun {
   <init>(...);
   *** isCenterConnection(...);
   *** isDimensionResolved(...);
   *** isResolved(...);
   *** getWrapDimension(...);
   *** addTarget(...);
   *** getLimitedDimension(...);
   *** getTarget(...);
   *** getTarget(...);
   *** update(...);
   *** updateRunCenter(...);
   *** updateRunEnd(...);
   *** updateRunStart(...);
   *** wrapSize(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun {
}

-keep class androidx.constraintlayout.core.state.ConstraintReference$ConstraintReferenceFactory
-keepclassmembers class androidx.constraintlayout.core.state.ConstraintReference$ConstraintReferenceFactory {
}

-keep class androidx.constraintlayout.core.state.ConstraintReference
-keepclassmembers class androidx.constraintlayout.core.state.ConstraintReference {
   <init>(...);
   *** getAlpha(...);
   *** getConstraintWidget(...);
   *** setConstraintWidget(...);
   *** getFacade(...);
   *** setFacade(...);
   *** getHeight(...);
   *** getHorizontalChainStyle(...);
   *** setHorizontalChainStyle(...);
   *** getKey(...);
   *** setKey(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getRotationZ(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getTag(...);
   *** setTag(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getView(...);
   *** setView(...);
   *** getWidth(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** alpha(...);
   *** apply(...);
   *** baseline(...);
   *** baselineToBaseline(...);
   *** bias(...);
   *** bottom(...);
   *** bottomToBottom(...);
   *** bottomToTop(...);
   *** centerHorizontally(...);
   *** centerVertically(...);
   *** circularConstraint(...);
   *** clear(...);
   *** clearHorizontal(...);
   *** clearVertical(...);
   *** createConstraintWidget(...);
   *** end(...);
   *** endToEnd(...);
   *** endToStart(...);
   *** getVerticalChainStyle(...);
   *** height(...);
   *** horizontalBias(...);
   *** left(...);
   *** leftToLeft(...);
   *** leftToRight(...);
   *** margin(...);
   *** margin(...);
   *** marginGone(...);
   *** pivotX(...);
   *** pivotY(...);
   *** right(...);
   *** rightToLeft(...);
   *** rightToRight(...);
   *** rotationX(...);
   *** rotationY(...);
   *** rotationZ(...);
   *** scaleX(...);
   *** scaleY(...);
   *** setHeight(...);
   *** setVerticalChainStyle(...);
   *** setWidth(...);
   *** start(...);
   *** startToEnd(...);
   *** startToStart(...);
   *** top(...);
   *** topToBottom(...);
   *** topToTop(...);
   *** translationX(...);
   *** translationY(...);
   *** translationZ(...);
   *** validate(...);
   *** verticalBias(...);
   *** visibility(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.state.Dimension$Type
-keepclassmembers class androidx.constraintlayout.core.state.Dimension$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.Dimension
-keepclassmembers class androidx.constraintlayout.core.state.Dimension {
   *** Fixed(...);
   *** Fixed(...);
   *** Parent(...);
   *** Percent(...);
   *** Ratio(...);
   *** Spread(...);
   *** Suggested(...);
   *** Suggested(...);
   *** Wrap(...);
   *** apply(...);
   *** equalsFixedValue(...);
   *** fixed(...);
   *** fixed(...);
   *** max(...);
   *** max(...);
   *** min(...);
   *** min(...);
   *** percent(...);
   *** ratio(...);
   *** suggested(...);
   *** suggested(...);
}

-keep class androidx.constraintlayout.core.state.HelperReference
-keepclassmembers class androidx.constraintlayout.core.state.HelperReference {
   <init>(...);
   *** getHelperWidget(...);
   *** setHelperWidget(...);
   *** getType(...);
   *** add(...);
}

-keep class androidx.constraintlayout.core.state.Reference
-keepclassmembers class androidx.constraintlayout.core.state.Reference {
}

-keep class androidx.constraintlayout.core.state.RegistryCallback
-keepclassmembers class androidx.constraintlayout.core.state.RegistryCallback {
}

-keep class androidx.constraintlayout.core.state.Registry
-keepclassmembers class androidx.constraintlayout.core.state.Registry {
   <init>(...);
   *** getInstance(...);
   *** getLayoutList(...);
   *** currentContent(...);
   *** currentLayoutInformation(...);
   *** getLastModified(...);
   *** register(...);
   *** setDrawDebug(...);
   *** setLayoutInformationMode(...);
   *** unregister(...);
   *** updateContent(...);
   *** updateDimensions(...);
   *** updateProgress(...);
}

-keep class androidx.constraintlayout.core.state.State$Chain
-keepclassmembers class androidx.constraintlayout.core.state.State$Chain {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State$Constraint
-keepclassmembers class androidx.constraintlayout.core.state.State$Constraint {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State$Direction
-keepclassmembers class androidx.constraintlayout.core.state.State$Direction {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State$Helper
-keepclassmembers class androidx.constraintlayout.core.state.State$Helper {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State
-keepclassmembers class androidx.constraintlayout.core.state.State {
   <init>(...);
   *** apply(...);
   *** barrier(...);
   *** centerHorizontally(...);
   *** centerVertically(...);
   *** constraints(...);
   *** convertDimension(...);
   *** createConstraintReference(...);
   *** directMapping(...);
   *** getIdsForTag(...);
   *** guideline(...);
   *** height(...);
   *** helper(...);
   *** horizontalChain(...);
   *** horizontalChain(...);
   *** horizontalGuideline(...);
   *** map(...);
   *** reset(...);
   *** sameFixedHeight(...);
   *** sameFixedWidth(...);
   *** setHeight(...);
   *** setTag(...);
   *** setWidth(...);
   *** verticalChain(...);
   *** verticalChain(...);
   *** verticalGuideline(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.state.Transition
-keepclassmembers class androidx.constraintlayout.core.state.Transition {
   <init>(...);
   *** hasPositionKeyframes(...);
   *** isEmpty(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** addKeyAttribute(...);
   *** addKeyCycle(...);
   *** addKeyPosition(...);
   *** addKeyPosition(...);
   *** clear(...);
   *** contains(...);
   *** fillKeyPositions(...);
   *** findNextPosition(...);
   *** findPreviousPosition(...);
   *** getEnd(...);
   *** getEnd(...);
   *** getInterpolated(...);
   *** getInterpolated(...);
   *** getKeyFrames(...);
   *** getMotion(...);
   *** getNumberKeyPositions(...);
   *** getPath(...);
   *** getStart(...);
   *** getStart(...);
   *** interpolate(...);
   *** setTransitionProperties(...);
   *** updateFrom(...);
}

-keep class androidx.constraintlayout.core.state.WidgetFrame
-keepclassmembers class androidx.constraintlayout.core.state.WidgetFrame {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCustomAttributeNames(...);
   *** isDefaultTransform(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** centerX(...);
   *** centerY(...);
   *** getCustomAttribute(...);
   *** getCustomColor(...);
   *** getCustomFloat(...);
   *** height(...);
   *** interpolate(...);
   *** serialize(...);
   *** serialize(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setValue(...);
   *** update(...);
   *** update(...);
   *** updateAttributes(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.state.helpers.AlignVerticallyReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.AlignVerticallyReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.state.helpers.BarrierReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.BarrierReference {
   <init>(...);
   *** setBarrierDirection(...);
}

-keep class androidx.constraintlayout.core.state.helpers.ChainReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.ChainReference {
   <init>(...);
   *** getBias(...);
   *** getStyle(...);
   *** style(...);
}

-keep class androidx.constraintlayout.core.state.helpers.GuidelineReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.GuidelineReference {
   <init>(...);
   *** getConstraintWidget(...);
   *** setConstraintWidget(...);
   *** getFacade(...);
   *** getKey(...);
   *** setKey(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** apply(...);
   *** end(...);
   *** percent(...);
   *** start(...);
}

-keep class androidx.constraintlayout.core.state.helpers.HorizontalChainReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.HorizontalChainReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.state.helpers.Facade
-keepclassmembers class androidx.constraintlayout.core.state.helpers.Facade {
}

-keep class androidx.constraintlayout.core.state.helpers.VerticalChainReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.VerticalChainReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.parser.CLArray
-keepclassmembers class androidx.constraintlayout.core.parser.CLArray {
   <init>(...);
   *** allocate(...);
}

-keep class androidx.constraintlayout.core.parser.CLContainer
-keepclassmembers class androidx.constraintlayout.core.parser.CLContainer {
   <init>(...);
   *** add(...);
   *** allocate(...);
   *** get(...);
   *** get(...);
   *** getArray(...);
   *** getArray(...);
   *** getArrayOrNull(...);
   *** getBoolean(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getFloat(...);
   *** getFloatOrNaN(...);
   *** getInt(...);
   *** getInt(...);
   *** getObject(...);
   *** getObject(...);
   *** getObjectOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getString(...);
   *** getString(...);
   *** getStringOrNull(...);
   *** getStringOrNull(...);
   *** has(...);
   *** names(...);
   *** put(...);
   *** putNumber(...);
   *** remove(...);
   *** size(...);
}

-keep class androidx.constraintlayout.core.parser.CLElement
-keepclassmembers class androidx.constraintlayout.core.parser.CLElement {
   <init>(...);
   *** getContainer(...);
   *** getDebugName(...);
   *** getEnd(...);
   *** setEnd(...);
   *** getFloat(...);
   *** getInt(...);
   *** isDone(...);
   *** isStarted(...);
   *** getLine(...);
   *** setLine(...);
   *** getStart(...);
   *** setStart(...);
   *** getStrClass(...);
   *** addIndent(...);
   *** content(...);
   *** notStarted(...);
   *** setContainer(...);
   *** toFormattedJSON(...);
   *** toJSON(...);
}

-keep class androidx.constraintlayout.core.parser.CLKey
-keepclassmembers class androidx.constraintlayout.core.parser.CLKey {
   <init>(...);
   *** getName(...);
   *** getValue(...);
   *** allocate(...);
   *** allocate(...);
   *** set(...);
}

-keep class androidx.constraintlayout.core.parser.CLNumber
-keepclassmembers class androidx.constraintlayout.core.parser.CLNumber {
   <init>(...);
   <init>(...);
   *** isInt(...);
   *** allocate(...);
   *** putValue(...);
}

-keep class androidx.constraintlayout.core.parser.CLObject
-keepclassmembers class androidx.constraintlayout.core.parser.CLObject {
   <init>(...);
   *** allocate(...);
   *** iterator(...);
   *** toFormattedJSON(...);
   *** toFormattedJSON(...);
   *** toJSON(...);
}

-keep class androidx.constraintlayout.core.parser.CLParser
-keepclassmembers class androidx.constraintlayout.core.parser.CLParser {
   <init>(...);
   *** parse(...);
   *** parse(...);
}

-keep class androidx.constraintlayout.core.parser.CLParsingException
-keepclassmembers class androidx.constraintlayout.core.parser.CLParsingException {
   <init>(...);
   *** reason(...);
   *** toString(...);
}

-keep class androidx.constraintlayout.core.parser.CLString
-keepclassmembers class androidx.constraintlayout.core.parser.CLString {
   <init>(...);
   *** allocate(...);
}

-keep class androidx.constraintlayout.core.parser.CLToken
-keepclassmembers class androidx.constraintlayout.core.parser.CLToken {
   <init>(...);
   *** getBoolean(...);
   *** isNull(...);
   *** getType(...);
   *** allocate(...);
   *** validate(...);
}

-keep class androidx.constraintlayout.core.motion.CustomAttribute$AttributeType
-keepclassmembers class androidx.constraintlayout.core.motion.CustomAttribute$AttributeType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.motion.CustomAttribute
-keepclassmembers class androidx.constraintlayout.core.motion.CustomAttribute {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isContinuous(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** applyCustom(...);
   *** diff(...);
   *** extractAttributes(...);
   *** getValuesToInterpolate(...);
   *** hsvToRgb(...);
   *** numberOfInterpolatedValues(...);
   *** setAttributes(...);
   *** setColorValue(...);
   *** setFloatValue(...);
   *** setIntValue(...);
   *** setInterpolatedValue(...);
   *** setStringValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.core.motion.CustomVariable
-keepclassmembers class androidx.constraintlayout.core.motion.CustomVariable {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBooleanValue(...);
   *** setBooleanValue(...);
   *** getColorValue(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
   *** getIntegerValue(...);
   *** isContinuous(...);
   *** getName(...);
   *** getStringValue(...);
   *** setStringValue(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** applyToWidget(...);
   *** colorString(...);
   *** copy(...);
   *** diff(...);
   *** getInterpolatedColor(...);
   *** getValuesToInterpolate(...);
   *** hsvToRgb(...);
   *** numberOfInterpolatedValues(...);
   *** rgbaTocColor(...);
   *** setIntValue(...);
   *** setInterpolatedValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.core.motion.Motion
-keepclassmembers class androidx.constraintlayout.core.motion.Motion {
   <init>(...);
   *** getAnimateRelativeTo(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** getDrawPath(...);
   *** setDrawPath(...);
   *** getFinalHeight(...);
   *** getFinalWidth(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** getStartHeight(...);
   *** getStartWidth(...);
   *** getStartX(...);
   *** getStartY(...);
   *** getTransformPivotTarget(...);
   *** setTransformPivotTarget(...);
   *** getView(...);
   *** setView(...);
   *** addKey(...);
   *** buildKeyFrames(...);
   *** buildPath(...);
   *** buildRect(...);
   *** getCenter(...);
   *** getKeyFrame(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePositions(...);
   *** interpolate(...);
   *** setEnd(...);
   *** setPathMotionArc(...);
   *** setStart(...);
   *** setStartState(...);
   *** setup(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.core.motion.MotionPaths
-keepclassmembers class androidx.constraintlayout.core.motion.MotionPaths {
   <init>(...);
   <init>(...);
   *** applyParameters(...);
   *** compareTo(...);
   *** configureRelativeTo(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.core.motion.MotionWidget$Motion
-keepclassmembers class androidx.constraintlayout.core.motion.MotionWidget$Motion {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.MotionWidget$PropertySet
-keepclassmembers class androidx.constraintlayout.core.motion.MotionWidget$PropertySet {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.MotionWidget
-keepclassmembers class androidx.constraintlayout.core.motion.MotionWidget {
   <init>(...);
   <init>(...);
   *** getAlpha(...);
   *** getBottom(...);
   *** getCustomAttributeNames(...);
   *** getHeight(...);
   *** getLeft(...);
   *** getName(...);
   *** getParent(...);
   *** getPivotX(...);
   *** setPivotX(...);
   *** getPivotY(...);
   *** setPivotY(...);
   *** getRight(...);
   *** getRotationX(...);
   *** setRotationX(...);
   *** getRotationY(...);
   *** setRotationY(...);
   *** getRotationZ(...);
   *** setRotationZ(...);
   *** getScaleX(...);
   *** setScaleX(...);
   *** getScaleY(...);
   *** setScaleY(...);
   *** getTop(...);
   *** getTranslationX(...);
   *** setTranslationX(...);
   *** getTranslationY(...);
   *** setTranslationY(...);
   *** getTranslationZ(...);
   *** setTranslationZ(...);
   *** getVisibility(...);
   *** setVisibility(...);
   *** getWidgetFrame(...);
   *** getWidth(...);
   *** findViewById(...);
   *** getCustomAttribute(...);
   *** getId(...);
   *** getValueAttributes(...);
   *** getX(...);
   *** getY(...);
   *** layout(...);
   *** setBounds(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValueAttributes(...);
   *** setValueMotion(...);
   *** setValueMotion(...);
   *** setValueMotion(...);
}

-keep class androidx.constraintlayout.core.motion.utils.ArcCurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.ArcCurveFit {
   <init>(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.CurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.CurveFit {
   <init>(...);
   *** get(...);
   *** getArc(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.CurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.CurveFit {
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Easing
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Easing {
   <init>(...);
   *** get(...);
   *** getDiff(...);
   *** getInterpolator(...);
}

-keep class androidx.constraintlayout.core.motion.utils.FloatRect
-keepclassmembers class androidx.constraintlayout.core.motion.utils.FloatRect {
   <init>(...);
   *** centerX(...);
   *** centerY(...);
}

-keep class androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic
-keepclassmembers class androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic {
   <init>(...);
   *** eval(...);
   *** vel(...);
}

-keep class androidx.constraintlayout.core.motion.utils.HyperSpline
-keepclassmembers class androidx.constraintlayout.core.motion.utils.HyperSpline {
   <init>(...);
   <init>(...);
   *** approxLength(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getVelocity(...);
   *** setup(...);
}

-keep class androidx.constraintlayout.core.motion.utils.DifferentialInterpolator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.DifferentialInterpolator {
}

-keep class androidx.constraintlayout.core.motion.utils.StopEngine
-keepclassmembers class androidx.constraintlayout.core.motion.utils.StopEngine {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Attributes
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Attributes {
   *** getId(...);
   *** getType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Attributes
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Attributes {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Attributes
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Attributes {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Custom
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Custom {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Custom
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Custom {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Custom
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Custom {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Cycle
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Cycle {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Cycle
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Cycle {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Cycle
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Cycle {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Motion
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Motion {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Motion
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Motion {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Motion
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Motion {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Position
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Position {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Position
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Position {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Position
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Position {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Trigger
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Trigger {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Trigger
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Trigger {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Trigger
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Trigger {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues {
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCache
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCache {
   <init>(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet {
   <init>(...);
   *** setPathRotate(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator {
   <init>(...);
   *** getCurveFit(...);
   *** get(...);
   *** getSlope(...);
   *** makeWidgetCycle(...);
   *** setCustom(...);
   *** setPoint(...);
   *** setPoint(...);
   *** setProperty(...);
   *** setType(...);
   *** setup(...);
   *** variesByPath(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator {
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray {
   <init>(...);
   *** append(...);
   *** clear(...);
   *** dump(...);
   *** keyAt(...);
   *** remove(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar {
   <init>(...);
   *** append(...);
   *** clear(...);
   *** dump(...);
   *** keyAt(...);
   *** remove(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.utils.LinearCurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.LinearCurveFit {
   <init>(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.MonotonicCurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.MonotonicCurveFit {
   <init>(...);
   *** buildWave(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Oscillator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Oscillator {
   <init>(...);
   *** addPoint(...);
   *** getSlope(...);
   *** getValue(...);
   *** normalize(...);
   *** setType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Rect
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Rect {
   <init>(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Schlick
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Schlick {
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet {
   <init>(...);
   *** getCurveFit(...);
   *** get(...);
   *** getSlope(...);
   *** makeCustomSpline(...);
   *** makeCustomSplineSet(...);
   *** makeSpline(...);
   *** setPoint(...);
   *** setProperty(...);
   *** setType(...);
   *** setup(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet {
}

-keep class androidx.constraintlayout.core.motion.utils.SpringStopEngine
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SpringStopEngine {
   <init>(...);
   *** getAcceleration(...);
   *** isStopped(...);
   *** getVelocity(...);
   *** debug(...);
   *** getInterpolation(...);
   *** getVelocity(...);
   *** springConfig(...);
}

-keep class androidx.constraintlayout.core.motion.utils.StepCurve
-keepclassmembers class androidx.constraintlayout.core.motion.utils.StepCurve {
}

-keep class androidx.constraintlayout.core.motion.utils.StopLogicEngine
-keepclassmembers class androidx.constraintlayout.core.motion.utils.StopLogicEngine {
   <init>(...);
   *** isStopped(...);
   *** getVelocity(...);
   *** config(...);
   *** debug(...);
   *** getInterpolation(...);
   *** getVelocity(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomVarSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomVarSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$Sort
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$Sort {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet {
   <init>(...);
   *** getCurveFit(...);
   *** calcWave(...);
   *** setPoint(...);
   *** setStartTime(...);
   *** setType(...);
   *** setup(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedBundle
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedBundle {
   <init>(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIfNotNull(...);
   *** applyDelta(...);
   *** clear(...);
   *** getInteger(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Utils
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Utils {
   <init>(...);
   *** getInterpolatedColor(...);
   *** log(...);
   *** log(...);
   *** logStack(...);
   *** loge(...);
   *** rgbaTocColor(...);
   *** socketSend(...);
}

-keep class androidx.constraintlayout.core.motion.utils.VelocityMatrix
-keepclassmembers class androidx.constraintlayout.core.motion.utils.VelocityMatrix {
   <init>(...);
   *** applyTransform(...);
   *** clear(...);
   *** setRotationVelocity(...);
   *** setRotationVelocity(...);
   *** setScaleVelocity(...);
   *** setScaleVelocity(...);
   *** setTranslationVelocity(...);
   *** setTranslationVelocity(...);
}

-keep class androidx.constraintlayout.core.motion.utils.ViewState
-keepclassmembers class androidx.constraintlayout.core.motion.utils.ViewState {
   <init>(...);
   *** getState(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.motion.parse.KeyParser
-keepclassmembers class androidx.constraintlayout.core.motion.parse.KeyParser {
   <init>(...);
   *** main(...);
   *** parseAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionConstraintSet
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionConstraintSet {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKey
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKey {
   <init>(...);
   *** getFramePosition(...);
   *** setFramePosition(...);
   *** addValues(...);
   *** clone(...);
   *** copy(...);
   *** getAttributeNames(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setInterpolation(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setViewId(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKey
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKey {
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyAttributes
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyAttributes {
   <init>(...);
   *** getCurveFit(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
   *** printAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyCycle
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyCycle {
   <init>(...);
   *** addCycleValues(...);
   *** addValues(...);
   *** clone(...);
   *** dump(...);
   *** getAttributeNames(...);
   *** getId(...);
   *** getValue(...);
   *** printAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyPosition
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyPosition {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
   *** intersects(...);
   *** positionAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyTimeCycle
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyTimeCycle {
   <init>(...);
   *** addTimeValues(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyTrigger
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyTrigger {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** conditionallyFire(...);
   *** getAttributeNames(...);
   *** getId(...);
}

# ACW for Xamarin.AndroidX.ConstraintLayout
-keep class androidx.constraintlayout.widget.Barrier
-keepclassmembers class androidx.constraintlayout.widget.Barrier {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAllowsGoneWidget(...);
   *** setAllowsGoneWidget(...);
   *** getMargin(...);
   *** setMargin(...);
   *** getType(...);
   *** setType(...);
   *** allowsGoneWidget(...);
   *** setDpMargin(...);
}

-keep class androidx.constraintlayout.widget.ConstraintAttribute$AttributeType
-keepclassmembers class androidx.constraintlayout.widget.ConstraintAttribute$AttributeType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.widget.ConstraintAttribute
-keepclassmembers class androidx.constraintlayout.widget.ConstraintAttribute {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isContinuous(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** applyCustom(...);
   *** diff(...);
   *** extractAttributes(...);
   *** getValuesToInterpolate(...);
   *** numberOfInterpolatedValues(...);
   *** parse(...);
   *** setAttributes(...);
   *** setColorValue(...);
   *** setFloatValue(...);
   *** setIntValue(...);
   *** setInterpolatedValue(...);
   *** setStringValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.widget.ConstraintHelper
-keepclassmembers class androidx.constraintlayout.widget.ConstraintHelper {
   <init>(...);
   <init>(...);
   <init>(...);
   *** addView(...);
   *** applyLayoutFeatures(...);
   *** applyLayoutFeatures(...);
   *** applyLayoutFeaturesInConstraintSet(...);
   *** containsId(...);
   *** getReferencedIds(...);
   *** getViews(...);
   *** indexFromId(...);
   *** init(...);
   *** loadParameters(...);
   *** onDraw(...);
   *** removeView(...);
   *** resolveRtl(...);
   *** setIds(...);
   *** setReferenceTags(...);
   *** setReferencedIds(...);
   *** updatePostConstraints(...);
   *** updatePostLayout(...);
   *** updatePostMeasure(...);
   *** updatePreDraw(...);
   *** updatePreLayout(...);
   *** updatePreLayout(...);
   *** validateParams(...);
}

-keep class androidx.constraintlayout.widget.ConstraintHelper
-keepclassmembers class androidx.constraintlayout.widget.ConstraintHelper {
}

-keep class androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConstraintTag(...);
   *** getConstraintWidget(...);
   *** reset(...);
   *** setWidgetDebugName(...);
   *** validate(...);
}

-keep class androidx.constraintlayout.widget.ConstraintLayout
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isRtl(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getOptimizationLevel(...);
   *** setOptimizationLevel(...);
   *** getSharedValues(...);
   *** applyConstraintsFromLayoutParams(...);
   *** fillMetrics(...);
   *** getDesignInformation(...);
   *** getViewById(...);
   *** getViewWidget(...);
   *** loadLayoutDescription(...);
   *** onLayout(...);
   *** parseLayoutDescription(...);
   *** resolveMeasuredDimension(...);
   *** resolveSystem(...);
   *** setConstraintSet(...);
   *** setDesignInformation(...);
   *** setOnConstraintsChanged(...);
   *** setSelfDimensionBehaviour(...);
   *** setState(...);
}

-keep class androidx.constraintlayout.widget.ConstraintLayoutStates
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayoutStates {
   *** needsToChange(...);
   *** setOnConstraintsChanged(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.widget.ConstraintProperties
-keepclassmembers class androidx.constraintlayout.widget.ConstraintProperties {
   <init>(...);
   *** addToHorizontalChain(...);
   *** addToHorizontalChainRTL(...);
   *** addToVerticalChain(...);
   *** alpha(...);
   *** apply(...);
   *** center(...);
   *** centerHorizontally(...);
   *** centerHorizontally(...);
   *** centerHorizontallyRtl(...);
   *** centerHorizontallyRtl(...);
   *** centerVertically(...);
   *** centerVertically(...);
   *** connect(...);
   *** constrainDefaultHeight(...);
   *** constrainDefaultWidth(...);
   *** constrainHeight(...);
   *** constrainMaxHeight(...);
   *** constrainMaxWidth(...);
   *** constrainMinHeight(...);
   *** constrainMinWidth(...);
   *** constrainWidth(...);
   *** dimensionRatio(...);
   *** elevation(...);
   *** goneMargin(...);
   *** horizontalBias(...);
   *** horizontalChainStyle(...);
   *** horizontalWeight(...);
   *** margin(...);
   *** removeConstraints(...);
   *** removeFromHorizontalChain(...);
   *** removeFromVerticalChain(...);
   *** rotation(...);
   *** rotationX(...);
   *** rotationY(...);
   *** scaleX(...);
   *** scaleY(...);
   *** transformPivot(...);
   *** transformPivotX(...);
   *** transformPivotY(...);
   *** translation(...);
   *** translationX(...);
   *** translationY(...);
   *** translationZ(...);
   *** verticalBias(...);
   *** verticalChainStyle(...);
   *** verticalWeight(...);
   *** visibility(...);
}

-keep class androidx.constraintlayout.widget.Constraints$LayoutParams
-keepclassmembers class androidx.constraintlayout.widget.Constraints$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.constraintlayout.widget.Constraints
-keepclassmembers class androidx.constraintlayout.widget.Constraints {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConstraintSet(...);
   *** onLayout(...);
}

-keep class androidx.constraintlayout.widget.ConstraintsChangedListener
-keepclassmembers class androidx.constraintlayout.widget.ConstraintsChangedListener {
   <init>(...);
   *** postLayoutChange(...);
   *** preLayoutChange(...);
}

-keep class androidx.constraintlayout.widget.ConstraintsChangedListener
-keepclassmembers class androidx.constraintlayout.widget.ConstraintsChangedListener {
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta {
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Constraint
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Constraint {
   <init>(...);
   *** applyDelta(...);
   *** applyTo(...);
   *** clone(...);
   *** printDelta(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Layout
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Layout {
   <init>(...);
   *** copyFrom(...);
   *** dump(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Motion
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Motion {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$PropertySet
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$PropertySet {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Transform
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Transform {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet {
   <init>(...);
   *** getCustomAttributeSet(...);
   *** isForceId(...);
   *** setForceId(...);
   *** addColorAttributes(...);
   *** addFloatAttributes(...);
   *** addIntAttributes(...);
   *** addStringAttributes(...);
   *** addToHorizontalChain(...);
   *** addToHorizontalChainRTL(...);
   *** addToVerticalChain(...);
   *** applyCustomAttributes(...);
   *** applyDeltaFrom(...);
   *** applyTo(...);
   *** applyToHelper(...);
   *** applyToLayoutParams(...);
   *** applyToWithoutCustom(...);
   *** buildDelta(...);
   *** center(...);
   *** centerHorizontally(...);
   *** centerHorizontally(...);
   *** centerHorizontallyRtl(...);
   *** centerHorizontallyRtl(...);
   *** centerVertically(...);
   *** centerVertically(...);
   *** clear(...);
   *** clear(...);
   *** clone(...);
   *** clone(...);
   *** clone(...);
   *** clone(...);
   *** connect(...);
   *** connect(...);
   *** constrainCircle(...);
   *** constrainDefaultHeight(...);
   *** constrainDefaultWidth(...);
   *** constrainHeight(...);
   *** constrainMaxHeight(...);
   *** constrainMaxWidth(...);
   *** constrainMinHeight(...);
   *** constrainMinWidth(...);
   *** constrainPercentHeight(...);
   *** constrainPercentWidth(...);
   *** constrainWidth(...);
   *** constrainedHeight(...);
   *** constrainedWidth(...);
   *** create(...);
   *** createBarrier(...);
   *** createHorizontalChain(...);
   *** createHorizontalChainRtl(...);
   *** createVerticalChain(...);
   *** dump(...);
   *** getApplyElevation(...);
   *** getConstraint(...);
   *** getHeight(...);
   *** getKnownIds(...);
   *** getParameters(...);
   *** getReferencedIds(...);
   *** getVisibility(...);
   *** getVisibilityMode(...);
   *** getWidth(...);
   *** load(...);
   *** load(...);
   *** parseColorAttributes(...);
   *** parseFloatAttributes(...);
   *** parseIntAttributes(...);
   *** parseStringAttributes(...);
   *** readFallback(...);
   *** readFallback(...);
   *** removeAttribute(...);
   *** removeFromHorizontalChain(...);
   *** removeFromVerticalChain(...);
   *** setAlpha(...);
   *** setApplyElevation(...);
   *** setBarrierType(...);
   *** setColorValue(...);
   *** setDimensionRatio(...);
   *** setEditorAbsoluteX(...);
   *** setEditorAbsoluteY(...);
   *** setElevation(...);
   *** setFloatValue(...);
   *** setGoneMargin(...);
   *** setGuidelineBegin(...);
   *** setGuidelineEnd(...);
   *** setGuidelinePercent(...);
   *** setHorizontalBias(...);
   *** setHorizontalChainStyle(...);
   *** setHorizontalWeight(...);
   *** setIntValue(...);
   *** setLayoutWrapBehavior(...);
   *** setMargin(...);
   *** setReferencedIds(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setStringValue(...);
   *** setTransformPivot(...);
   *** setTransformPivotX(...);
   *** setTransformPivotY(...);
   *** setTranslation(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setValidateOnParse(...);
   *** setVerticalBias(...);
   *** setVerticalChainStyle(...);
   *** setVerticalWeight(...);
   *** setVisibility(...);
   *** setVisibilityMode(...);
   *** writeState(...);
}

-keep class androidx.constraintlayout.widget.Group
-keepclassmembers class androidx.constraintlayout.widget.Group {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onAttachedToWindow(...);
}

-keep class androidx.constraintlayout.widget.Guideline
-keepclassmembers class androidx.constraintlayout.widget.Guideline {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** setGuidelineBegin(...);
   *** setGuidelineEnd(...);
   *** setGuidelinePercent(...);
}

-keep class androidx.constraintlayout.widget.Placeholder
-keepclassmembers class androidx.constraintlayout.widget.Placeholder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContent(...);
   *** getEmptyVisibility(...);
   *** setEmptyVisibility(...);
   *** onDraw(...);
   *** setContentId(...);
   *** updatePostMeasure(...);
   *** updatePreLayout(...);
}

-keep class androidx.constraintlayout.widget.ReactiveGuide
-keepclassmembers class androidx.constraintlayout.widget.ReactiveGuide {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getApplyToConstraintSetId(...);
   *** setApplyToConstraintSetId(...);
   *** getAttributeId(...);
   *** setAttributeId(...);
   *** isAnimatingChange(...);
   *** onNewValue(...);
   *** setAnimateChange(...);
   *** setGuidelineBegin(...);
   *** setGuidelineEnd(...);
   *** setGuidelinePercent(...);
}

-keep class androidx.constraintlayout.widget.SharedValues$SharedValuesListener
-keepclassmembers class androidx.constraintlayout.widget.SharedValues$SharedValuesListener {
}

-keep class mono.androidx.constraintlayout.widget.SharedValues_SharedValuesListenerImplementor
-keepclassmembers class mono.androidx.constraintlayout.widget.SharedValues_SharedValuesListenerImplementor {
}

-keep class androidx.constraintlayout.widget.SharedValues
-keepclassmembers class androidx.constraintlayout.widget.SharedValues {
   <init>(...);
   *** addListener(...);
   *** clearListeners(...);
   *** fireNewValue(...);
   *** getValue(...);
   *** removeListener(...);
   *** removeListener(...);
}

-keep class androidx.constraintlayout.widget.StateSet
-keepclassmembers class androidx.constraintlayout.widget.StateSet {
   <init>(...);
   *** convertToConstraintSet(...);
   *** needsToChange(...);
   *** setOnConstraintsChanged(...);
   *** stateGetConstraintID(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.widget.VirtualLayout
-keepclassmembers class androidx.constraintlayout.widget.VirtualLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onAttachedToWindow(...);
   *** onMeasure(...);
}

-keep class androidx.constraintlayout.widget.VirtualLayout
-keepclassmembers class androidx.constraintlayout.widget.VirtualLayout {
}

-keep class androidx.constraintlayout.utils.widget.ImageFilterButton
-keepclassmembers class androidx.constraintlayout.utils.widget.ImageFilterButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContrast(...);
   *** setContrast(...);
   *** getCrossfade(...);
   *** setCrossfade(...);
   *** getImagePanX(...);
   *** setImagePanX(...);
   *** getImagePanY(...);
   *** setImagePanY(...);
   *** getImageRotate(...);
   *** setImageRotate(...);
   *** getImageZoom(...);
   *** setImageZoom(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
   *** getSaturation(...);
   *** setSaturation(...);
   *** getWarmth(...);
   *** setWarmth(...);
   *** setAltImageResource(...);
   *** setBrightness(...);
}

-keep class androidx.constraintlayout.utils.widget.ImageFilterView
-keepclassmembers class androidx.constraintlayout.utils.widget.ImageFilterView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBrightness(...);
   *** setBrightness(...);
   *** getContrast(...);
   *** setContrast(...);
   *** getCrossfade(...);
   *** setCrossfade(...);
   *** getImagePanX(...);
   *** setImagePanX(...);
   *** getImagePanY(...);
   *** setImagePanY(...);
   *** getImageRotate(...);
   *** setImageRotate(...);
   *** getImageZoom(...);
   *** setImageZoom(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
   *** getSaturation(...);
   *** setSaturation(...);
   *** getWarmth(...);
   *** setWarmth(...);
   *** setAltImageResource(...);
}

-keep class androidx.constraintlayout.utils.widget.MockView
-keepclassmembers class androidx.constraintlayout.utils.widget.MockView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onDraw(...);
}

-keep class androidx.constraintlayout.utils.widget.MotionButton
-keepclassmembers class androidx.constraintlayout.utils.widget.MotionButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
}

-keep class androidx.constraintlayout.utils.widget.MotionLabel
-keepclassmembers class androidx.constraintlayout.utils.widget.MotionLabel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
   *** getScaleFromTextSize(...);
   *** setScaleFromTextSize(...);
   *** getTextBackgroundPanX(...);
   *** setTextBackgroundPanX(...);
   *** getTextBackgroundPanY(...);
   *** setTextBackgroundPanY(...);
   *** getTextBackgroundRotate(...);
   *** setTextBackgroundRotate(...);
   *** getTextBackgroundZoom(...);
   *** setTextBackgroundZoom(...);
   *** getTextOutlineColor(...);
   *** setTextOutlineColor(...);
   *** getTextPanX(...);
   *** setTextPanX(...);
   *** getTextPanY(...);
   *** setTextPanY(...);
   *** getTextureHeight(...);
   *** setTextureHeight(...);
   *** getTextureWidth(...);
   *** setTextureWidth(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** layout(...);
   *** setGravity(...);
   *** setText(...);
   *** setTextFillColor(...);
   *** setTextOutlineThickness(...);
   *** setTextSize(...);
}

-keep class androidx.constraintlayout.utils.widget.MotionTelltales
-keepclassmembers class androidx.constraintlayout.utils.widget.MotionTelltales {
   <init>(...);
   <init>(...);
   <init>(...);
   *** setText(...);
}

-keep class androidx.constraintlayout.helper.widget.Carousel$Adapter
-keepclassmembers class androidx.constraintlayout.helper.widget.Carousel$Adapter {
}

-keep class androidx.constraintlayout.helper.widget.Carousel
-keepclassmembers class androidx.constraintlayout.helper.widget.Carousel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCurrentIndex(...);
   *** jumpToIndex(...);
   *** refresh(...);
   *** setAdapter(...);
   *** transitionToIndex(...);
}

-keep class androidx.constraintlayout.helper.widget.CircularFlow
-keepclassmembers class androidx.constraintlayout.helper.widget.CircularFlow {
   <init>(...);
   <init>(...);
   <init>(...);
   *** addViewToCircularFlow(...);
   *** getAngles(...);
   *** getRadius(...);
   *** isUpdatable(...);
   *** removeElementFromArray(...);
   *** removeElementFromArray(...);
   *** setDefaultAngle(...);
   *** setDefaultRadius(...);
   *** updateAngle(...);
   *** updateRadius(...);
   *** updateReference(...);
}

-keep class androidx.constraintlayout.helper.widget.Flow
-keepclassmembers class androidx.constraintlayout.helper.widget.Flow {
   <init>(...);
   <init>(...);
   <init>(...);
   *** setFirstHorizontalBias(...);
   *** setFirstHorizontalStyle(...);
   *** setFirstVerticalBias(...);
   *** setFirstVerticalStyle(...);
   *** setHorizontalAlign(...);
   *** setHorizontalBias(...);
   *** setHorizontalGap(...);
   *** setHorizontalStyle(...);
   *** setMaxElementsWrap(...);
   *** setOrientation(...);
   *** setPadding(...);
   *** setPaddingBottom(...);
   *** setPaddingLeft(...);
   *** setPaddingRight(...);
   *** setPaddingTop(...);
   *** setVerticalAlign(...);
   *** setVerticalBias(...);
   *** setVerticalGap(...);
   *** setVerticalStyle(...);
   *** setWrapMode(...);
}

-keep class androidx.constraintlayout.helper.widget.Layer
-keepclassmembers class androidx.constraintlayout.helper.widget.Layer {
   <init>(...);
   <init>(...);
   <init>(...);
   *** calcCenters(...);
}

-keep class androidx.constraintlayout.helper.widget.MotionEffect
-keepclassmembers class androidx.constraintlayout.helper.widget.MotionEffect {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.constraintlayout.motion.utils.StopLogic
-keepclassmembers class androidx.constraintlayout.motion.utils.StopLogic {
   <init>(...);
   *** isStopped(...);
   *** getVelocity(...);
   *** config(...);
   *** debug(...);
   *** getInterpolation(...);
   *** getVelocity(...);
   *** springConfig(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet {
   <init>(...);
   *** setPathRotate(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewOscillator
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewOscillator {
   <init>(...);
   *** makeSpline(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewOscillator
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewOscillator {
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline$CustomSet
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline$PathRotate
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline$PathRotate {
   <init>(...);
   *** setPathRotate(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline {
   <init>(...);
   *** makeCustomSpline(...);
   *** makeSpline(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline {
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewState
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewState {
   <init>(...);
   *** getState(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate {
   <init>(...);
   *** setPathRotate(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle {
   <init>(...);
   *** get(...);
   *** makeCustomSpline(...);
   *** makeSpline(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle {
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker {
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener {
}

-keep class mono.androidx.constraintlayout.motion.widget.MotionLayout_TransitionListenerImplementor
-keepclassmembers class mono.androidx.constraintlayout.motion.widget.MotionLayout_TransitionListenerImplementor {
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCurrentState(...);
   *** getDefinedTransitions(...);
   *** isDelayedApplicationOfInitialState(...);
   *** setDelayedApplicationOfInitialState(...);
   *** getDesignTool(...);
   *** getEndState(...);
   *** isInteractionEnabled(...);
   *** setInteractionEnabled(...);
   *** isInRotation(...);
   *** getNanoTime(...);
   *** getProgress(...);
   *** setProgress(...);
   *** getStartState(...);
   *** getTargetPosition(...);
   *** getTransitionState(...);
   *** setTransitionState(...);
   *** getTransitionTimeMs(...);
   *** getVelocity(...);
   *** applyViewTransition(...);
   *** cloneConstraintSet(...);
   *** enableTransition(...);
   *** enableViewTransition(...);
   *** fireTransitionCompleted(...);
   *** fireTrigger(...);
   *** getConstraintSet(...);
   *** getConstraintSetIds(...);
   *** getDebugMode(...);
   *** getTransition(...);
   *** getViewVelocity(...);
   *** isViewTransitionEnabled(...);
   *** jumpToState(...);
   *** obtainVelocityTracker(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** rebuildMotion(...);
   *** rebuildScene(...);
   *** removeTransitionListener(...);
   *** rotateTo(...);
   *** scheduleTransitionTo(...);
   *** setDebugMode(...);
   *** setInterpolatedProgress(...);
   *** setOnHide(...);
   *** setOnShow(...);
   *** setProgress(...);
   *** setScene(...);
   *** setTransition(...);
   *** setTransition(...);
   *** setTransition(...);
   *** setTransitionDuration(...);
   *** setTransitionListener(...);
   *** touchAnimateTo(...);
   *** touchSpringTo(...);
   *** transitionToEnd(...);
   *** transitionToEnd(...);
   *** transitionToStart(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** updateState(...);
   *** updateState(...);
   *** updateStateAnimate(...);
   *** viewTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.Debug
-keepclassmembers class androidx.constraintlayout.motion.widget.Debug {
   <init>(...);
   *** getLoc(...);
   *** getLocation(...);
   *** getLocation2(...);
   *** dumpLayoutParams(...);
   *** dumpLayoutParams(...);
   *** dumpPoc(...);
   *** getActionType(...);
   *** getCallFrom(...);
   *** getName(...);
   *** getName(...);
   *** getName(...);
   *** getState(...);
   *** getState(...);
   *** logStack(...);
   *** printStack(...);
}

-keep class androidx.constraintlayout.motion.widget.DesignTool
-keepclassmembers class androidx.constraintlayout.motion.widget.DesignTool {
   <init>(...);
   *** getEndState(...);
   *** isInTransition(...);
   *** getProgress(...);
   *** getStartState(...);
   *** getState(...);
   *** setState(...);
   *** getTransitionTimeMs(...);
   *** designAccess(...);
   *** disableAutoTransition(...);
   *** dumpConstraintSet(...);
   *** getAnimationKeyFrames(...);
   *** getAnimationPath(...);
   *** getAnimationRectangles(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePosition(...);
   *** getKeyFramePositions(...);
   *** getKeyframe(...);
   *** getKeyframe(...);
   *** getKeyframeAtLocation(...);
   *** getPositionKeyframe(...);
   *** setAttributes(...);
   *** setKeyFrame(...);
   *** setKeyFramePosition(...);
   *** setKeyframe(...);
   *** setToolPosition(...);
   *** setTransition(...);
   *** setViewDebug(...);
}

-keep class androidx.constraintlayout.motion.widget.Animatable
-keepclassmembers class androidx.constraintlayout.motion.widget.Animatable {
}

-keep class androidx.constraintlayout.motion.widget.CustomFloatAttributes
-keepclassmembers class androidx.constraintlayout.motion.widget.CustomFloatAttributes {
}

-keep class androidx.constraintlayout.motion.widget.FloatLayout
-keepclassmembers class androidx.constraintlayout.motion.widget.FloatLayout {
}

-keep class androidx.constraintlayout.motion.widget.MotionHelperInterface
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionHelperInterface {
}

-keep class androidx.constraintlayout.motion.widget.Key
-keepclassmembers class androidx.constraintlayout.motion.widget.Key {
   <init>(...);
   *** getFramePosition(...);
   *** setFramePosition(...);
   *** addValues(...);
   *** clone(...);
   *** copy(...);
   *** setInterpolation(...);
   *** setValue(...);
   *** setViewId(...);
}

-keep class androidx.constraintlayout.motion.widget.Key
-keepclassmembers class androidx.constraintlayout.motion.widget.Key {
   *** addValues(...);
   *** clone(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyAttributes
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyAttributes {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyCycle
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyCycle {
   <init>(...);
   *** addCycleValues(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getValue(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyFrames
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyFrames {
   <init>(...);
   <init>(...);
   *** getKeys(...);
   *** addAllFrames(...);
   *** addFrames(...);
   *** addKey(...);
   *** getKeyFramesForView(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyPosition
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyPosition {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** intersects(...);
   *** load(...);
   *** positionAttributes(...);
   *** setType(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyTimeCycle
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyTimeCycle {
   <init>(...);
   *** addTimeValues(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyTrigger
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyTrigger {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** conditionallyFire(...);
   *** getAttributeNames(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionController
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionController {
   *** getAnimateRelativeTo(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** getDrawPath(...);
   *** setDrawPath(...);
   *** getFinalHeight(...);
   *** getFinalWidth(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** getStartHeight(...);
   *** getStartWidth(...);
   *** getStartX(...);
   *** getStartY(...);
   *** getTransformPivotTarget(...);
   *** setTransformPivotTarget(...);
   *** getView(...);
   *** setView(...);
   *** addKey(...);
   *** getCenter(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePositions(...);
   *** setPathMotionArc(...);
   *** setStartState(...);
   *** setup(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionHelper
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionHelper {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isDecorator(...);
   *** isUseOnHide(...);
   *** isUsedOnShow(...);
   *** getProgress(...);
   *** setProgress(...);
   *** onFinishedMotionScene(...);
   *** onPostDraw(...);
   *** onPreDraw(...);
   *** onPreSetup(...);
   *** onTransitionChange(...);
   *** onTransitionCompleted(...);
   *** onTransitionStarted(...);
   *** onTransitionTrigger(...);
   *** setProgress(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionInterpolator
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionInterpolator {
   <init>(...);
   *** getVelocity(...);
   *** getInterpolation(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionInterpolator
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionInterpolator {
   *** getVelocity(...);
   *** getInterpolation(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick {
   <init>(...);
   <init>(...);
   *** addOnClickListeners(...);
   *** onClick(...);
   *** removeOnClickListeners(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene$Transition
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene$Transition {
   <init>(...);
   *** getAutoTransition(...);
   *** setAutoTransition(...);
   *** getDuration(...);
   *** setDuration(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getEndConstraintSetId(...);
   *** getId(...);
   *** getKeyFrameList(...);
   *** getLayoutDuringTransition(...);
   *** setLayoutDuringTransition(...);
   *** getOnClickList(...);
   *** getPathMotionArc(...);
   *** setPathMotionArc(...);
   *** getStagger(...);
   *** setStagger(...);
   *** getStartConstraintSetId(...);
   *** getTouchResponse(...);
   *** addKeyFrame(...);
   *** addOnClick(...);
   *** addOnClick(...);
   *** debugString(...);
   *** isTransitionFlag(...);
   *** removeOnClick(...);
   *** setEnable(...);
   *** setInterpolatorInfo(...);
   *** setOnSwipe(...);
   *** setOnTouchUp(...);
   *** setTransitionFlag(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene {
   <init>(...);
   *** getDefinedTransitions(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getInterpolator(...);
   *** getStaggered(...);
   *** addOnClickListeners(...);
   *** addTransition(...);
   *** applyViewTransition(...);
   *** bestTransitionFor(...);
   *** disableAutoTransition(...);
   *** enableViewTransition(...);
   *** gatPathMotionArc(...);
   *** getConstraintSet(...);
   *** getConstraintSetIds(...);
   *** getKeyFrames(...);
   *** getPathPercent(...);
   *** getTransitionById(...);
   *** getTransitionsWithState(...);
   *** isViewTransitionEnabled(...);
   *** lookUpConstraintId(...);
   *** lookUpConstraintName(...);
   *** onLayout(...);
   *** removeTransition(...);
   *** setConstraintSet(...);
   *** setKeyframe(...);
   *** setRtl(...);
   *** setTransition(...);
   *** stripID(...);
   *** validateLayout(...);
   *** viewTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.OnSwipe
-keepclassmembers class androidx.constraintlayout.motion.widget.OnSwipe {
   <init>(...);
   *** getAutoCompleteMode(...);
   *** setAutoCompleteMode(...);
   *** getDragDirection(...);
   *** getDragScale(...);
   *** getDragThreshold(...);
   *** getLimitBoundsTo(...);
   *** getMaxAcceleration(...);
   *** getMaxVelocity(...);
   *** getMoveWhenScrollAtTop(...);
   *** getNestedScrollFlags(...);
   *** getOnTouchUp(...);
   *** getRotationCenterId(...);
   *** getSpringBoundary(...);
   *** getSpringDamping(...);
   *** getSpringMass(...);
   *** getSpringStiffness(...);
   *** getSpringStopThreshold(...);
   *** getTouchAnchorId(...);
   *** getTouchAnchorSide(...);
   *** getTouchRegionId(...);
   *** setDragDirection(...);
   *** setDragScale(...);
   *** setDragThreshold(...);
   *** setLimitBoundsTo(...);
   *** setMaxAcceleration(...);
   *** setMaxVelocity(...);
   *** setMoveWhenScrollAtTop(...);
   *** setNestedScrollFlags(...);
   *** setOnTouchUp(...);
   *** setRotateCenter(...);
   *** setSpringBoundary(...);
   *** setSpringDamping(...);
   *** setSpringMass(...);
   *** setSpringStiffness(...);
   *** setSpringStopThreshold(...);
   *** setTouchAnchorId(...);
   *** setTouchAnchorSide(...);
   *** setTouchRegionId(...);
}

-keep class androidx.constraintlayout.motion.widget.TransitionAdapter
-keepclassmembers class androidx.constraintlayout.motion.widget.TransitionAdapter {
   <init>(...);
   *** onTransitionChange(...);
   *** onTransitionCompleted(...);
   *** onTransitionStarted(...);
   *** onTransitionTrigger(...);
}

-keep class androidx.constraintlayout.motion.widget.TransitionAdapter
-keepclassmembers class androidx.constraintlayout.motion.widget.TransitionAdapter {
}

-keep class androidx.constraintlayout.motion.widget.TransitionBuilder
-keepclassmembers class androidx.constraintlayout.motion.widget.TransitionBuilder {
   <init>(...);
   *** buildTransition(...);
   *** validate(...);
}

-keep class androidx.constraintlayout.motion.widget.ViewTransition
-keepclassmembers class androidx.constraintlayout.motion.widget.ViewTransition {
   *** getSharedValue(...);
   *** setSharedValue(...);
   *** getSharedValueCurrent(...);
   *** setSharedValueCurrent(...);
   *** getSharedValueID(...);
   *** setSharedValueID(...);
   *** getStateTransition(...);
   *** setStateTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.ViewTransitionController
-keepclassmembers class androidx.constraintlayout.motion.widget.ViewTransitionController {
   <init>(...);
   *** add(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.AndroidX.Core.Core.Ktx
-keep class androidx.core.widget.TextViewKt
-keepclassmembers class androidx.core.widget.TextViewKt {
   *** addTextChangedListener(...);
   *** doAfterTextChanged(...);
   *** doBeforeTextChanged(...);
   *** doOnTextChanged(...);
}

-keep class androidx.core.view.MenuKt
-keepclassmembers class androidx.core.view.MenuKt {
   *** contains(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** get(...);
   *** getChildren(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** iterator(...);
   *** minusAssign(...);
   *** removeItemAt(...);
}

-keep class androidx.core.view.ViewGroupKt
-keepclassmembers class androidx.core.view.ViewGroupKt {
   *** contains(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** get(...);
   *** getChildren(...);
   *** getDescendants(...);
   *** getIndices(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** iterator(...);
   *** minusAssign(...);
   *** plusAssign(...);
   *** setMargins(...);
   *** updateMargins(...);
   *** updateMarginsRelative(...);
}

-keep class androidx.core.view.ViewKt
-keepclassmembers class androidx.core.view.ViewKt {
   *** doOnAttach(...);
   *** doOnDetach(...);
   *** doOnLayout(...);
   *** doOnNextLayout(...);
   *** doOnPreDraw(...);
   *** drawToBitmap(...);
   *** getAllViews(...);
   *** getAncestors(...);
   *** getMarginBottom(...);
   *** getMarginEnd(...);
   *** getMarginLeft(...);
   *** getMarginRight(...);
   *** getMarginStart(...);
   *** getMarginTop(...);
   *** isGone(...);
   *** isInvisible(...);
   *** isVisible(...);
   *** postDelayed(...);
   *** postOnAnimationDelayed(...);
   *** setGone(...);
   *** setInvisible(...);
   *** setPadding(...);
   *** setVisible(...);
   *** updateLayoutParams(...);
   *** updatePadding(...);
   *** updatePaddingRelative(...);
}

-keep class androidx.core.util.AndroidXConsumerKt
-keepclassmembers class androidx.core.util.AndroidXConsumerKt {
   *** asAndroidXConsumer(...);
}

-keep class androidx.core.util.AtomicFileKt
-keepclassmembers class androidx.core.util.AtomicFileKt {
   *** readBytes(...);
   *** readText(...);
   *** tryWrite(...);
   *** writeBytes(...);
   *** writeText(...);
}

-keep class androidx.core.util.ConsumerKt
-keepclassmembers class androidx.core.util.ConsumerKt {
   *** asConsumer(...);
}

-keep class androidx.core.util.HalfKt
-keepclassmembers class androidx.core.util.HalfKt {
   *** toHalf(...);
   *** toHalf(...);
   *** toHalf(...);
   *** toHalf(...);
}

-keep class androidx.core.util.LongSparseArrayKt
-keepclassmembers class androidx.core.util.LongSparseArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.LruCacheKt
-keepclassmembers class androidx.core.util.LruCacheKt {
   *** lruCache(...);
}

-keep class androidx.core.util.PairKt
-keepclassmembers class androidx.core.util.PairKt {
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** toAndroidPair(...);
   *** toAndroidXPair(...);
   *** toKotlinPair(...);
   *** toKotlinPair(...);
}

-keep class androidx.core.util.RangeKt
-keepclassmembers class androidx.core.util.RangeKt {
   *** and(...);
   *** plus(...);
   *** plus(...);
   *** rangeTo(...);
   *** toClosedRange(...);
   *** toRange(...);
}

-keep class androidx.core.util.RunnableKt
-keepclassmembers class androidx.core.util.RunnableKt {
   *** asRunnable(...);
}

-keep class androidx.core.util.SizeKt
-keepclassmembers class androidx.core.util.SizeKt {
   *** component1(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component2(...);
}

-keep class androidx.core.util.SparseArrayKt
-keepclassmembers class androidx.core.util.SparseArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseBooleanArrayKt
-keepclassmembers class androidx.core.util.SparseBooleanArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseIntArrayKt
-keepclassmembers class androidx.core.util.SparseIntArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseLongArrayKt
-keepclassmembers class androidx.core.util.SparseLongArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.transition.TransitionKt
-keepclassmembers class androidx.core.transition.TransitionKt {
   *** addListener(...);
   *** doOnCancel(...);
   *** doOnEnd(...);
   *** doOnPause(...);
   *** doOnResume(...);
   *** doOnStart(...);
}

-keep class androidx.core.text.CharSequenceKt
-keepclassmembers class androidx.core.text.CharSequenceKt {
   *** isDigitsOnly(...);
   *** trimmedLength(...);
}

-keep class androidx.core.text.HtmlKt
-keepclassmembers class androidx.core.text.HtmlKt {
   *** parseAsHtml(...);
   *** toHtml(...);
}

-keep class androidx.core.text.LocaleKt
-keepclassmembers class androidx.core.text.LocaleKt {
   *** getLayoutDirection(...);
}

-keep class androidx.core.text.SpannableStringBuilderKt
-keepclassmembers class androidx.core.text.SpannableStringBuilderKt {
   *** backgroundColor(...);
   *** bold(...);
   *** buildSpannedString(...);
   *** color(...);
   *** inSpans(...);
   *** inSpans(...);
   *** italic(...);
   *** scale(...);
   *** strikeThrough(...);
   *** subscript(...);
   *** superscript(...);
   *** underline(...);
}

-keep class androidx.core.text.SpannableStringKt
-keepclassmembers class androidx.core.text.SpannableStringKt {
   *** clearSpans(...);
   *** set(...);
   *** set(...);
   *** toSpannable(...);
}

-keep class androidx.core.text.SpannedStringKt
-keepclassmembers class androidx.core.text.SpannedStringKt {
   *** toSpanned(...);
}

-keep class androidx.core.text.StringKt
-keepclassmembers class androidx.core.text.StringKt {
   *** htmlEncode(...);
}

-keep class androidx.core.os.BundleKt
-keepclassmembers class androidx.core.os.BundleKt {
   *** bundleOf(...);
   *** bundleOf(...);
}

-keep class androidx.core.os.HandlerKt
-keepclassmembers class androidx.core.os.HandlerKt {
   *** postAtTime(...);
   *** postDelayed(...);
}

-keep class androidx.core.os.OutcomeReceiverKt
-keepclassmembers class androidx.core.os.OutcomeReceiverKt {
   *** asOutcomeReceiver(...);
}

-keep class androidx.core.os.PersistableBundleKt
-keepclassmembers class androidx.core.os.PersistableBundleKt {
   *** persistableBundleOf(...);
   *** persistableBundleOf(...);
   *** toPersistableBundle(...);
}

-keep class androidx.core.os.TraceKt
-keepclassmembers class androidx.core.os.TraceKt {
   *** trace(...);
}

-keep class androidx.core.net.UriKt
-keepclassmembers class androidx.core.net.UriKt {
   *** toFile(...);
   *** toUri(...);
   *** toUri(...);
}

-keep class androidx.core.location.LocationKt
-keepclassmembers class androidx.core.location.LocationKt {
   *** component1(...);
   *** component2(...);
}

-keep class androidx.core.graphics.BitmapKt
-keepclassmembers class androidx.core.graphics.BitmapKt {
   *** applyCanvas(...);
   *** contains(...);
   *** contains(...);
   *** createBitmap(...);
   *** createBitmap(...);
   *** get(...);
   *** scale(...);
   *** set(...);
}

-keep class androidx.core.graphics.CanvasKt
-keepclassmembers class androidx.core.graphics.CanvasKt {
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withMatrix(...);
   *** withRotation(...);
   *** withSave(...);
   *** withScale(...);
   *** withSkew(...);
   *** withTranslation(...);
}

-keep class androidx.core.graphics.ColorKt
-keepclassmembers class androidx.core.graphics.ColorKt {
   *** component1(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component2(...);
   *** component3(...);
   *** component3(...);
   *** component3(...);
   *** component4(...);
   *** component4(...);
   *** component4(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** getAlpha(...);
   *** getAlpha(...);
   *** getBlue(...);
   *** getBlue(...);
   *** getColorSpace(...);
   *** getGreen(...);
   *** getGreen(...);
   *** getLuminance(...);
   *** getLuminance(...);
   *** getRed(...);
   *** getRed(...);
   *** isSrgb(...);
   *** isWideGamut(...);
   *** plus(...);
   *** toColor(...);
   *** toColor(...);
   *** toColorInt(...);
   *** toColorInt(...);
   *** toColorLong(...);
}

-keep class androidx.core.graphics.ImageDecoderKt
-keepclassmembers class androidx.core.graphics.ImageDecoderKt {
   *** decodeBitmap(...);
   *** decodeDrawable(...);
}

-keep class androidx.core.graphics.MatrixKt
-keepclassmembers class androidx.core.graphics.MatrixKt {
   *** rotationMatrix(...);
   *** scaleMatrix(...);
   *** times(...);
   *** translationMatrix(...);
   *** values(...);
}

-keep class androidx.core.graphics.PaintKt
-keepclassmembers class androidx.core.graphics.PaintKt {
   *** setBlendMode(...);
}

-keep class androidx.core.graphics.PathKt
-keepclassmembers class androidx.core.graphics.PathKt {
   *** and(...);
   *** flatten(...);
   *** minus(...);
   *** or(...);
   *** plus(...);
   *** xor(...);
}

-keep class androidx.core.graphics.PictureKt
-keepclassmembers class androidx.core.graphics.PictureKt {
   *** record(...);
}

-keep class androidx.core.graphics.PointKt
-keepclassmembers class androidx.core.graphics.PointKt {
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** toPoint(...);
   *** toPointF(...);
   *** unaryMinus(...);
   *** unaryMinus(...);
}

-keep class androidx.core.graphics.PorterDuffKt
-keepclassmembers class androidx.core.graphics.PorterDuffKt {
   *** toColorFilter(...);
   *** toXfermode(...);
}

-keep class androidx.core.graphics.RectKt
-keepclassmembers class androidx.core.graphics.RectKt {
   *** and(...);
   *** and(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component3(...);
   *** component3(...);
   *** component4(...);
   *** component4(...);
   *** contains(...);
   *** contains(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** or(...);
   *** or(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** times(...);
   *** times(...);
   *** times(...);
   *** toRect(...);
   *** toRectF(...);
   *** toRegion(...);
   *** toRegion(...);
   *** transform(...);
   *** xor(...);
   *** xor(...);
}

-keep class androidx.core.graphics.RegionKt
-keepclassmembers class androidx.core.graphics.RegionKt {
   *** and(...);
   *** and(...);
   *** contains(...);
   *** forEach(...);
   *** iterator(...);
   *** minus(...);
   *** minus(...);
   *** not(...);
   *** or(...);
   *** or(...);
   *** plus(...);
   *** plus(...);
   *** unaryMinus(...);
   *** xor(...);
   *** xor(...);
}

-keep class androidx.core.graphics.ShaderKt
-keepclassmembers class androidx.core.graphics.ShaderKt {
   *** transform(...);
}

-keep class androidx.core.graphics.drawable.BitmapDrawableKt
-keepclassmembers class androidx.core.graphics.drawable.BitmapDrawableKt {
   *** toDrawable(...);
}

-keep class androidx.core.graphics.drawable.ColorDrawableKt
-keepclassmembers class androidx.core.graphics.drawable.ColorDrawableKt {
   *** toDrawable(...);
   *** toDrawable(...);
}

-keep class androidx.core.graphics.drawable.DrawableKt
-keepclassmembers class androidx.core.graphics.drawable.DrawableKt {
   *** toBitmap(...);
   *** toBitmapOrNull(...);
   *** updateBounds(...);
}

-keep class androidx.core.graphics.drawable.IconKt
-keepclassmembers class androidx.core.graphics.drawable.IconKt {
   *** toAdaptiveIcon(...);
   *** toIcon(...);
   *** toIcon(...);
   *** toIcon(...);
}

-keep class androidx.core.database.CursorKt
-keepclassmembers class androidx.core.database.CursorKt {
   *** getBlobOrNull(...);
   *** getDoubleOrNull(...);
   *** getFloatOrNull(...);
   *** getIntOrNull(...);
   *** getLongOrNull(...);
   *** getShortOrNull(...);
   *** getStringOrNull(...);
}

-keep class androidx.core.database.sqlite.SQLiteDatabaseKt
-keepclassmembers class androidx.core.database.sqlite.SQLiteDatabaseKt {
   *** transaction(...);
}

-keep class androidx.core.content.ContentValuesKt
-keepclassmembers class androidx.core.content.ContentValuesKt {
   *** contentValuesOf(...);
}

-keep class androidx.core.content.ContextKt
-keepclassmembers class androidx.core.content.ContextKt {
   *** withStyledAttributes(...);
   *** withStyledAttributes(...);
}

-keep class androidx.core.content.SharedPreferencesKt
-keepclassmembers class androidx.core.content.SharedPreferencesKt {
   *** edit(...);
}

-keep class androidx.core.content.res.TypedArrayKt
-keepclassmembers class androidx.core.content.res.TypedArrayKt {
   *** getBooleanOrThrow(...);
   *** getColorOrThrow(...);
   *** getColorStateListOrThrow(...);
   *** getDimensionOrThrow(...);
   *** getDimensionPixelOffsetOrThrow(...);
   *** getDimensionPixelSizeOrThrow(...);
   *** getDrawableOrThrow(...);
   *** getFloatOrThrow(...);
   *** getFontOrThrow(...);
   *** getIntOrThrow(...);
   *** getIntegerOrThrow(...);
   *** getResourceIdOrThrow(...);
   *** getStringOrThrow(...);
   *** getTextArrayOrThrow(...);
   *** getTextOrThrow(...);
   *** use(...);
}

-keep class androidx.core.animation.AnimatorKt
-keepclassmembers class androidx.core.animation.AnimatorKt {
   *** addListener(...);
   *** addPauseListener(...);
   *** doOnCancel(...);
   *** doOnEnd(...);
   *** doOnPause(...);
   *** doOnRepeat(...);
   *** doOnResume(...);
   *** doOnStart(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.util.Consumer
-keepclassmembers class androidx.core.util.Consumer {
}

-keep class androidx.core.util.Predicate
-keepclassmembers class androidx.core.util.Predicate {
}

-keep class androidx.core.util.Pair
-keepclassmembers class androidx.core.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class androidx.core.os.LocaleListCompat
-keepclassmembers class androidx.core.os.LocaleListCompat {
   *** getAdjustedDefault(...);
   *** getDefault(...);
   *** getEmptyLocaleList(...);
   *** isEmpty(...);
   *** create(...);
   *** forLanguageTags(...);
   *** get(...);
   *** getFirstMatch(...);
   *** indexOf(...);
   *** matchesLanguageAndScript(...);
   *** size(...);
   *** toLanguageTags(...);
   *** unwrap(...);
   *** wrap(...);
   *** wrap(...);
}

-keep class androidx.core.internal.view.SupportMenu
-keepclassmembers class androidx.core.internal.view.SupportMenu {
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** add(...);
   *** max(...);
   *** min(...);
   *** of(...);
   *** of(...);
   *** subtract(...);
   *** toCompatInsets(...);
   *** toPlatformInsets(...);
   *** wrap(...);
}

-keep class androidx.core.graphics.drawable.DrawableCompat
-keepclassmembers class androidx.core.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getAttributionTag(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** registerReceiver(...);
   *** registerReceiver(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.content.OnConfigurationChangedProvider
-keepclassmembers class androidx.core.content.OnConfigurationChangedProvider {
}

-keep class androidx.core.content.OnTrimMemoryProvider
-keepclassmembers class androidx.core.content.OnTrimMemoryProvider {
}

-keep class androidx.core.content.LocusIdCompat
-keepclassmembers class androidx.core.content.LocusIdCompat {
   <init>(...);
   *** getId(...);
   *** toLocusId(...);
   *** toLocusIdCompat(...);
}

-keep class androidx.core.content.pm.PackageInfoCompat
-keepclassmembers class androidx.core.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
   *** getSignatures(...);
   *** hasSignatures(...);
}

-keep class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class androidx.core.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class androidx.core.app.ActivityCompat
-keepclassmembers class androidx.core.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** isLaunchedFromBubble(...);
   *** postponeEnterTransition(...);
   *** recreate(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setLocusContext(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class androidx.core.app.ActivityOptionsCompat
-keepclassmembers class androidx.core.app.ActivityOptionsCompat {
   <init>(...);
   *** getLaunchBounds(...);
   *** makeBasic(...);
   *** makeClipRevealAnimation(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeTaskLaunchBehind(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** requestUsageTimeReport(...);
   *** setLaunchBounds(...);
   *** toBundle(...);
   *** update(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** shouldDumpInternalState(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.OnMultiWindowModeChangedProvider
-keepclassmembers class androidx.core.app.OnMultiWindowModeChangedProvider {
}

-keep class androidx.core.app.OnNewIntentProvider
-keepclassmembers class androidx.core.app.OnNewIntentProvider {
}

-keep class androidx.core.app.OnPictureInPictureModeChangedProvider
-keepclassmembers class androidx.core.app.OnPictureInPictureModeChangedProvider {
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder$SupportParentable
-keepclassmembers class androidx.core.app.TaskStackBuilder$SupportParentable {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class androidx.core.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class androidx.core.widget.NestedScrollView
-keepclassmembers class androidx.core.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class androidx.core.widget.CompoundButtonCompat
-keepclassmembers class androidx.core.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class androidx.core.widget.AutoSizeableTextView
-keepclassmembers class androidx.core.widget.AutoSizeableTextView {
}

-keep class androidx.core.widget.TintableCompoundButton
-keepclassmembers class androidx.core.widget.TintableCompoundButton {
}

-keep class androidx.core.widget.TintableCompoundDrawablesView
-keepclassmembers class androidx.core.widget.TintableCompoundDrawablesView {
}

-keep class androidx.core.widget.TintableImageSourceView
-keepclassmembers class androidx.core.widget.TintableImageSourceView {
}

-keep class androidx.core.widget.TextViewCompat
-keepclassmembers class androidx.core.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawableTintList(...);
   *** getCompoundDrawableTintMode(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawableTintList(...);
   *** setCompoundDrawableTintMode(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** unwrapCustomSelectionActionModeCallback(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.ContentInfoCompat
-keepclassmembers class androidx.core.view.ContentInfoCompat {
   *** getClip(...);
   *** getExtras(...);
   *** getFlags(...);
   *** getLinkUri(...);
   *** getSource(...);
   *** partition(...);
   *** partition(...);
   *** toContentInfo(...);
   *** toContentInfoCompat(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
   *** getWaterfallInsets(...);
}

-keep class androidx.core.view.DragAndDropPermissionsCompat
-keepclassmembers class androidx.core.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class androidx.core.view.MenuHost
-keepclassmembers class androidx.core.view.MenuHost {
}

-keep class androidx.core.view.MenuProvider
-keepclassmembers class androidx.core.view.MenuProvider {
}

-keep class androidx.core.view.NestedScrollingChild
-keepclassmembers class androidx.core.view.NestedScrollingChild {
}

-keep class androidx.core.view.NestedScrollingChild2
-keepclassmembers class androidx.core.view.NestedScrollingChild2 {
}

-keep class androidx.core.view.NestedScrollingChild3
-keepclassmembers class androidx.core.view.NestedScrollingChild3 {
}

-keep class androidx.core.view.NestedScrollingParent
-keepclassmembers class androidx.core.view.NestedScrollingParent {
}

-keep class androidx.core.view.NestedScrollingParent2
-keepclassmembers class androidx.core.view.NestedScrollingParent2 {
}

-keep class androidx.core.view.NestedScrollingParent3
-keepclassmembers class androidx.core.view.NestedScrollingParent3 {
}

-keep class androidx.core.view.OnApplyWindowInsetsListener
-keepclassmembers class androidx.core.view.OnApplyWindowInsetsListener {
}

-keep class androidx.core.view.OnReceiveContentListener
-keepclassmembers class androidx.core.view.OnReceiveContentListener {
}

-keep class androidx.core.view.OnReceiveContentViewBehavior
-keepclassmembers class androidx.core.view.OnReceiveContentViewBehavior {
}

-keep class androidx.core.view.ScrollingView
-keepclassmembers class androidx.core.view.ScrollingView {
}

-keep class androidx.core.view.TintableBackgroundView
-keepclassmembers class androidx.core.view.TintableBackgroundView {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.WindowInsetsAnimationControlListenerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControlListenerCompat {
}

-keep class androidx.core.view.KeyEventDispatcher$Component
-keepclassmembers class androidx.core.view.KeyEventDispatcher$Component {
}

-keep class androidx.core.view.KeyEventDispatcher
-keepclassmembers class androidx.core.view.KeyEventDispatcher {
   *** dispatchBeforeHierarchy(...);
   *** dispatchKeyEvent(...);
}

-keep class androidx.core.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class androidx.core.view.MenuItemCompat$OnActionExpandListener {
}

-keep class androidx.core.view.MenuItemCompat
-keepclassmembers class androidx.core.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class androidx.core.view.PointerIconCompat
-keepclassmembers class androidx.core.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class androidx.core.view.ScaleGestureDetectorCompat
-keepclassmembers class androidx.core.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class androidx.core.view.ViewCompat
-keepclassmembers class androidx.core.view.ViewCompat {
   <init>(...);
   *** addAccessibilityAction(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** computeSystemWindowInsets(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** enableAccessibleClickableSpanSupport(...);
   *** generateViewId(...);
   *** getAccessibilityDelegate(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAccessibilityPaneTitle(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOnReceiveContentMimeTypes(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRootWindowInsets(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getStateDescription(...);
   *** getSystemGestureExclusionRects(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowInsetsController(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAccessibilityHeading(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** isScreenReaderFocusable(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** performReceiveContent(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeAccessibilityAction(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** replaceAccessibilityAction(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** saveAttributeDataForStyleable(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityHeading(...);
   *** setAccessibilityLiveRegion(...);
   *** setAccessibilityPaneTitle(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOnReceiveContentListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScreenReaderFocusable(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setStateDescription(...);
   *** setSystemGestureExclusionRects(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setWindowInsetsAnimationCallback(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat {
   <init>(...);
   *** getLowerBound(...);
   *** getUpperBound(...);
   *** inset(...);
   *** toBounds(...);
   *** toBoundsCompat(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   <init>(...);
   *** getDispatchMode(...);
   *** onEnd(...);
   *** onPrepare(...);
   *** onProgress(...);
   *** onStart(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   *** onProgress(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** getDurationMillis(...);
   *** getFraction(...);
   *** setFraction(...);
   *** getInterpolatedFraction(...);
   *** getInterpolator(...);
   *** getTypeMask(...);
}

-keep class androidx.core.view.WindowInsetsAnimationControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControllerCompat {
   *** getCurrentAlpha(...);
   *** getCurrentFraction(...);
   *** getCurrentInsets(...);
   *** getHiddenStateInsets(...);
   *** isCancelled(...);
   *** isFinished(...);
   *** isReady(...);
   *** getShownStateInsets(...);
   *** getTypes(...);
   *** finish(...);
   *** setInsetsAndAlpha(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** getInsets(...);
   *** getInsetsIgnoringVisibility(...);
   *** inset(...);
   *** inset(...);
   *** isVisible(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
   *** toWindowInsetsCompat(...);
}

-keep class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener {
}

-keep class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor
-keepclassmembers class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor {
}

-keep class androidx.core.view.WindowInsetsControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat {
   <init>(...);
   *** isAppearanceLightNavigationBars(...);
   *** setAppearanceLightNavigationBars(...);
   *** isAppearanceLightStatusBars(...);
   *** setAppearanceLightStatusBars(...);
   *** getSystemBarsBehavior(...);
   *** setSystemBarsBehavior(...);
   *** addOnControllableInsetsChangedListener(...);
   *** controlWindowInsetsAnimation(...);
   *** hide(...);
   *** removeOnControllableInsetsChangedListener(...);
   *** show(...);
   *** toWindowInsetsControllerCompat(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat {
   <init>(...);
   *** getRegionCount(...);
   *** getRegionAt(...);
   *** getTargetForRegion(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** getAvailableExtraData(...);
   *** setAvailableExtraData(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtraRenderingInfo(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getStateDescription(...);
   *** setStateDescription(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** isTextSelectable(...);
   *** setTextSelectable(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTouchDelegateInfo(...);
   *** setTouchDelegateInfo(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getUniqueId(...);
   *** setUniqueId(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** addExtraDataToAccessibilityNodeInfo(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getDisplayId(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** isInPictureInPictureMode(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getRegionInScreen(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
   *** unwrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

-keep class androidx.core.text.PrecomputedTextCompat$Params
-keepclassmembers class androidx.core.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
   *** equalsWithoutTextDirection(...);
}

-keep class androidx.core.text.PrecomputedTextCompat
-keepclassmembers class androidx.core.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.DocumentFile
-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getParentFile(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** findFile(...);
   *** fromFile(...);
   *** fromSingleUri(...);
   *** fromTreeUri(...);
   *** isDocumentUri(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout$LayoutParams
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.DynamicAnimation
-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
   *** isRunning(...);
   *** getMinimumVisibleChange(...);
   *** addEndListener(...);
   *** addUpdateListener(...);
   *** cancel(...);
   *** doAnimationFrame(...);
   *** removeEndListener(...);
   *** removeUpdateListener(...);
   *** setMaxValue(...);
   *** setMinValue(...);
   *** setMinimumVisibleChange(...);
   *** setStartValue(...);
   *** setStartVelocity(...);
   *** start(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
}

-keep class androidx.dynamicanimation.animation.FlingAnimation
-keepclassmembers class androidx.dynamicanimation.animation.FlingAnimation {
   <init>(...);
   <init>(...);
   *** getFriction(...);
   *** setFriction(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   <init>(...);
   *** createFloatPropertyCompat(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatValueHolder
-keepclassmembers class androidx.dynamicanimation.animation.FloatValueHolder {
   <init>(...);
   <init>(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.SpringAnimation
-keepclassmembers class androidx.dynamicanimation.animation.SpringAnimation {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpring(...);
   *** animateToFinalPosition(...);
   *** canSkipToEnd(...);
   *** setSpring(...);
   *** skipToEnd(...);
}

-keep class androidx.dynamicanimation.animation.SpringForce
-keepclassmembers class androidx.dynamicanimation.animation.SpringForce {
   <init>(...);
   <init>(...);
   *** getDampingRatio(...);
   *** getFinalPosition(...);
   *** getStiffness(...);
   *** getAcceleration(...);
   *** isAtEquilibrium(...);
   *** setDampingRatio(...);
   *** setFinalPosition(...);
   *** setStiffness(...);
}

# ACW for Xamarin.AndroidX.Emoji2
-keep class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory {
   <init>(...);
   *** create(...);
}

-keep class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper {
   <init>(...);
   *** getProviderInfo(...);
   *** getSigningSignatures(...);
   *** queryIntentContentProviders(...);
}

-keep class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19 {
   <init>(...);
}

-keep class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 {
   <init>(...);
}

-keep class androidx.emoji2.text.DefaultEmojiCompatConfig
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig {
   *** create(...);
}

-keep class androidx.emoji2.text.EmojiCompat$CodepointSequenceMatchResult
-keepclassmembers class androidx.emoji2.text.EmojiCompat$CodepointSequenceMatchResult {
}

-keep class androidx.emoji2.text.EmojiCompat$Config
-keepclassmembers class androidx.emoji2.text.EmojiCompat$Config {
   <init>(...);
   *** getMetadataRepoLoader(...);
   *** registerInitCallback(...);
   *** setEmojiSpanIndicatorColor(...);
   *** setEmojiSpanIndicatorEnabled(...);
   *** setGlyphChecker(...);
   *** setMetadataLoadStrategy(...);
   *** setReplaceAll(...);
   *** setUseEmojiAsDefaultStyle(...);
   *** setUseEmojiAsDefaultStyle(...);
   *** unregisterInitCallback(...);
}

-keep class androidx.emoji2.text.EmojiCompat$Config
-keepclassmembers class androidx.emoji2.text.EmojiCompat$Config {
}

-keep class androidx.emoji2.text.EmojiCompat$GlyphChecker
-keepclassmembers class androidx.emoji2.text.EmojiCompat$GlyphChecker {
}

-keep class androidx.emoji2.text.EmojiCompat$InitCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$InitCallback {
   <init>(...);
   *** onFailed(...);
   *** onInitialized(...);
}

-keep class androidx.emoji2.text.EmojiCompat$InitCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$InitCallback {
}

-keep class androidx.emoji2.text.EmojiCompat$LoadStrategy
-keepclassmembers class androidx.emoji2.text.EmojiCompat$LoadStrategy {
}

-keep class androidx.emoji2.text.EmojiCompat$MetadataRepoLoader
-keepclassmembers class androidx.emoji2.text.EmojiCompat$MetadataRepoLoader {
}

-keep class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback {
   <init>(...);
   *** onFailed(...);
   *** onLoaded(...);
}

-keep class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback {
   *** onFailed(...);
   *** onLoaded(...);
}

-keep class androidx.emoji2.text.EmojiCompat$ReplaceStrategy
-keepclassmembers class androidx.emoji2.text.EmojiCompat$ReplaceStrategy {
}

-keep class androidx.emoji2.text.EmojiCompat
-keepclassmembers class androidx.emoji2.text.EmojiCompat {
   *** getAssetSignature(...);
   *** getEmojiSpanIndicatorColor(...);
   *** isConfigured(...);
   *** isEmojiSpanIndicatorEnabled(...);
   *** getLoadState(...);
   *** get(...);
   *** getEmojiMatch(...);
   *** handleDeleteSurroundingText(...);
   *** handleOnKeyDown(...);
   *** hasEmojiGlyph(...);
   *** hasEmojiGlyph(...);
   *** init(...);
   *** init(...);
   *** init(...);
   *** load(...);
   *** process(...);
   *** process(...);
   *** process(...);
   *** process(...);
   *** registerInitCallback(...);
   *** reset(...);
   *** reset(...);
   *** skipDefaultConfigurationLookup(...);
   *** unregisterInitCallback(...);
   *** updateEditorInfo(...);
}

-keep class androidx.emoji2.text.EmojiCompatInitializer
-keepclassmembers class androidx.emoji2.text.EmojiCompatInitializer {
   <init>(...);
   *** create(...);
   *** dependencies(...);
}

-keep class androidx.emoji2.text.EmojiDefaults
-keepclassmembers class androidx.emoji2.text.EmojiDefaults {
}

-keep class androidx.emoji2.text.EmojiMetadata$HasGlyph
-keepclassmembers class androidx.emoji2.text.EmojiMetadata$HasGlyph {
}

-keep class androidx.emoji2.text.EmojiMetadata
-keepclassmembers class androidx.emoji2.text.EmojiMetadata {
   *** getCodepointsLength(...);
   *** getCompatAdded(...);
   *** getHasGlyph(...);
   *** getHeight(...);
   *** getId(...);
   *** isDefaultEmoji(...);
   *** getSdkAdded(...);
   *** getTypeface(...);
   *** getWidth(...);
   *** draw(...);
   *** getCodepointAt(...);
   *** resetHasGlyphCache(...);
   *** setHasGlyph(...);
}

-keep class androidx.emoji2.text.EmojiSpan
-keepclassmembers class androidx.emoji2.text.EmojiSpan {
   *** getHeight(...);
   *** getId(...);
   *** getMetadata(...);
   *** getSize(...);
}

-keep class androidx.emoji2.text.EmojiSpan
-keepclassmembers class androidx.emoji2.text.EmojiSpan {
   *** draw(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy {
   <init>(...);
   *** getRetryDelay(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper {
   <init>(...);
   *** buildTypeface(...);
   *** fetchFonts(...);
   *** registerObserver(...);
   *** unregisterObserver(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy {
   <init>(...);
   *** getRetryDelay(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy {
   *** getRetryDelay(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig {
   <init>(...);
   <init>(...);
   *** setHandler(...);
   *** setLoadingExecutor(...);
   *** setRetryPolicy(...);
}

-keep class androidx.emoji2.text.MetadataRepo
-keepclassmembers class androidx.emoji2.text.MetadataRepo {
   *** getMetadataList(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** getEmojiCharArray(...);
}

-keep class androidx.emoji2.text.SpannableBuilder
-keepclassmembers class androidx.emoji2.text.SpannableBuilder {
   *** beginBatchEdit(...);
   *** create(...);
   *** endBatchEdit(...);
   *** getSpans(...);
}

-keep class androidx.emoji2.text.TypefaceEmojiSpan
-keepclassmembers class androidx.emoji2.text.TypefaceEmojiSpan {
   <init>(...);
   *** draw(...);
}

-keep class androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf
-keepclassmembers class androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** data(...);
   *** get(...);
   *** getBoolean(...);
   *** getDouble(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getShort(...);
   *** getString(...);
   *** limit(...);
   *** put(...);
   *** put(...);
   *** putBoolean(...);
   *** putDouble(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putShort(...);
   *** requestCapacity(...);
   *** set(...);
   *** set(...);
   *** setBoolean(...);
   *** setDouble(...);
   *** setFloat(...);
   *** setInt(...);
   *** setLong(...);
   *** setShort(...);
   *** writePosition(...);
}

-keep class androidx.emoji2.text.flatbuffer.BaseVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.BaseVector {
   <init>(...);
   *** __element(...);
   *** __reset(...);
   *** __vector(...);
   *** length(...);
   *** reset(...);
}

-keep class androidx.emoji2.text.flatbuffer.BooleanVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.BooleanVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf
-keepclassmembers class androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf {
   <init>(...);
   *** data(...);
   *** get(...);
   *** getBoolean(...);
   *** getDouble(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getShort(...);
   *** getString(...);
   *** limit(...);
   *** put(...);
   *** put(...);
   *** putBoolean(...);
   *** putDouble(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putShort(...);
   *** requestCapacity(...);
   *** set(...);
   *** set(...);
   *** setBoolean(...);
   *** setDouble(...);
   *** setFloat(...);
   *** setInt(...);
   *** setLong(...);
   *** setShort(...);
   *** writePosition(...);
}

-keep class androidx.emoji2.text.flatbuffer.ByteBufferUtil
-keepclassmembers class androidx.emoji2.text.flatbuffer.ByteBufferUtil {
   <init>(...);
   *** getSizePrefix(...);
   *** removeSizePrefix(...);
}

-keep class androidx.emoji2.text.flatbuffer.ByteVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.ByteVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** getAsUnsigned(...);
}

-keep class androidx.emoji2.text.flatbuffer.Constants
-keepclassmembers class androidx.emoji2.text.flatbuffer.Constants {
   <init>(...);
   *** FLATBUFFERS_1_12_0(...);
}

-keep class androidx.emoji2.text.flatbuffer.DoubleVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.DoubleVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory {
   <init>(...);
   *** newByteBuffer(...);
   *** releaseByteBuffer(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory {
   *** newByteBuffer(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$HeapByteBufferFactory
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$HeapByteBufferFactory {
   <init>(...);
   *** newByteBuffer(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** Nested(...);
   *** addBoolean(...);
   *** addBoolean(...);
   *** addByte(...);
   *** addByte(...);
   *** addDouble(...);
   *** addDouble(...);
   *** addFloat(...);
   *** addFloat(...);
   *** addInt(...);
   *** addInt(...);
   *** addLong(...);
   *** addLong(...);
   *** addOffset(...);
   *** addOffset(...);
   *** addShort(...);
   *** addShort(...);
   *** addStruct(...);
   *** clear(...);
   *** createByteVector(...);
   *** createByteVector(...);
   *** createByteVector(...);
   *** createSortedVectorOfTables(...);
   *** createString(...);
   *** createString(...);
   *** createUnintializedVector(...);
   *** createVectorOfTables(...);
   *** dataBuffer(...);
   *** endTable(...);
   *** endVector(...);
   *** finish(...);
   *** finish(...);
   *** finish(...);
   *** finish(...);
   *** finishSizePrefixed(...);
   *** finishSizePrefixed(...);
   *** finished(...);
   *** forceDefaults(...);
   *** init(...);
   *** isFieldPresent(...);
   *** notNested(...);
   *** offset(...);
   *** pad(...);
   *** prep(...);
   *** putBoolean(...);
   *** putByte(...);
   *** putDouble(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putShort(...);
   *** required(...);
   *** sizedByteArray(...);
   *** sizedByteArray(...);
   *** sizedInputStream(...);
   *** slot(...);
   *** startTable(...);
   *** startVector(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException {
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector {
   *** size(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers$Reference
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers$Reference {
   *** isBlob(...);
   *** isBoolean(...);
   *** isFloat(...);
   *** isInt(...);
   *** isIntOrUInt(...);
   *** isKey(...);
   *** isMap(...);
   *** isNull(...);
   *** isNumeric(...);
   *** isString(...);
   *** isTypedVector(...);
   *** isUInt(...);
   *** isVector(...);
   *** getType(...);
   *** asBoolean(...);
   *** asFloat(...);
   *** asInt(...);
   *** asLong(...);
   *** asString(...);
   *** asUInt(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers {
   <init>(...);
   *** getRoot(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffersBuilder
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffersBuilder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBuffer(...);
   *** endMap(...);
   *** endVector(...);
   *** finish(...);
   *** putBlob(...);
   *** putBlob(...);
   *** putBoolean(...);
   *** putBoolean(...);
   *** putFloat(...);
   *** putFloat(...);
   *** putFloat(...);
   *** putFloat(...);
   *** putInt(...);
   *** putInt(...);
   *** putInt(...);
   *** putInt(...);
   *** putString(...);
   *** putString(...);
   *** putUInt(...);
   *** putUInt(...);
   *** putUInt64(...);
   *** startMap(...);
   *** startVector(...);
}

-keep class androidx.emoji2.text.flatbuffer.FloatVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.FloatVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.IntVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.IntVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** getAsUnsigned(...);
}

-keep class androidx.emoji2.text.flatbuffer.LongVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.LongVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataItem$Vector
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataItem$Vector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataItem
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataItem {
   <init>(...);
   *** ValidateVersion(...);
   *** __assign(...);
   *** __init(...);
   *** addCodepoints(...);
   *** addCompatAdded(...);
   *** addEmojiStyle(...);
   *** addHeight(...);
   *** addId(...);
   *** addSdkAdded(...);
   *** addWidth(...);
   *** codepoints(...);
   *** codepointsAsByteBuffer(...);
   *** codepointsInByteBuffer(...);
   *** codepointsLength(...);
   *** codepointsVector(...);
   *** codepointsVector(...);
   *** compatAdded(...);
   *** createCodepointsVector(...);
   *** createMetadataItem(...);
   *** emojiStyle(...);
   *** endMetadataItem(...);
   *** getRootAsMetadataItem(...);
   *** getRootAsMetadataItem(...);
   *** height(...);
   *** id(...);
   *** sdkAdded(...);
   *** startCodepointsVector(...);
   *** startMetadataItem(...);
   *** width(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataList$Vector
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataList$Vector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataList
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataList {
   <init>(...);
   *** ValidateVersion(...);
   *** __assign(...);
   *** __init(...);
   *** addList(...);
   *** addSourceSha(...);
   *** addVersion(...);
   *** createListVector(...);
   *** createMetadataList(...);
   *** endMetadataList(...);
   *** finishMetadataListBuffer(...);
   *** finishSizePrefixedMetadataListBuffer(...);
   *** getRootAsMetadataList(...);
   *** getRootAsMetadataList(...);
   *** list(...);
   *** list(...);
   *** listLength(...);
   *** listVector(...);
   *** listVector(...);
   *** sourceSha(...);
   *** sourceShaAsByteBuffer(...);
   *** sourceShaInByteBuffer(...);
   *** startListVector(...);
   *** startMetadataList(...);
   *** version(...);
}

-keep class androidx.emoji2.text.flatbuffer.ShortVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.ShortVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** getAsUnsigned(...);
}

-keep class androidx.emoji2.text.flatbuffer.StringVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.StringVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.Struct
-keepclassmembers class androidx.emoji2.text.flatbuffer.Struct {
   <init>(...);
   *** __reset(...);
   *** __reset(...);
}

-keep class androidx.emoji2.text.flatbuffer.Table
-keepclassmembers class androidx.emoji2.text.flatbuffer.Table {
   <init>(...);
   *** getByteBuffer(...);
   *** __has_identifier(...);
   *** __indirect(...);
   *** __indirect(...);
   *** __offset(...);
   *** __offset(...);
   *** __reset(...);
   *** __reset(...);
   *** __string(...);
   *** __string(...);
   *** __union(...);
   *** __union(...);
   *** __vector(...);
   *** __vector_as_bytebuffer(...);
   *** __vector_in_bytebuffer(...);
   *** __vector_len(...);
   *** compareStrings(...);
   *** compareStrings(...);
   *** keysCompare(...);
   *** sortTables(...);
}

-keep class androidx.emoji2.text.flatbuffer.UnionVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.UnionVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8 {
   <init>(...);
   *** getDefault(...);
   *** setDefault(...);
   *** decodeUtf8(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8 {
   *** decodeUtf8(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8Old
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8Old {
   <init>(...);
   *** decodeUtf8(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8Safe
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8Safe {
   <init>(...);
   *** decodeUtf8(...);
   *** decodeUtf8Array(...);
   *** decodeUtf8Buffer(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

# ACW for Xamarin.AndroidX.Emoji2.ViewsHelper
-keep class androidx.emoji2.viewsintegration.EmojiEditTextHelper
-keepclassmembers class androidx.emoji2.viewsintegration.EmojiEditTextHelper {
   <init>(...);
   <init>(...);
   *** getEmojiReplaceStrategy(...);
   *** setEmojiReplaceStrategy(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getMaxEmojiCount(...);
   *** setMaxEmojiCount(...);
   *** getKeyListener(...);
   *** onCreateInputConnection(...);
}

-keep class androidx.emoji2.viewsintegration.EmojiTextViewHelper
-keepclassmembers class androidx.emoji2.viewsintegration.EmojiTextViewHelper {
   <init>(...);
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getFilters(...);
   *** setAllCaps(...);
   *** updateTransformationMethod(...);
   *** wrapTransformationMethod(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   <init>(...);
   *** instantiate(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   <init>(...);
   *** getHandler(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onStartActivityFromFragment(...);
   *** onStartIntentSenderFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** getHost(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** getStrictModePolicy(...);
   *** setStrictModePolicy(...);
   *** addFragmentOnAttachListener(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** clearBackStack(...);
   *** clearFragmentResult(...);
   *** clearFragmentResultListener(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** isLoggingEnabled(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeFragmentOnAttachListener(...);
   *** removeOnBackStackChangedListener(...);
   *** restoreBackStack(...);
   *** saveBackStack(...);
   *** saveFragmentInstanceState(...);
   *** setFragmentResult(...);
   *** setFragmentResultListener(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   <init>(...);
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

-keep class androidx.fragment.app.FragmentOnAttachListener
-keepclassmembers class androidx.fragment.app.FragmentOnAttachListener {
}

-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor {
}

-keep class androidx.fragment.app.FragmentResultListener
-keepclassmembers class androidx.fragment.app.FragmentResultListener {
}

-keep class androidx.fragment.app.FragmentResultOwner
-keepclassmembers class androidx.fragment.app.FragmentResultOwner {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode$Policy
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode$Policy {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode {
   *** getDefaultPolicy(...);
   *** setDefaultPolicy(...);
   *** onFragmentReuse(...);
   *** onFragmentTagUsage(...);
   *** onGetRetainInstanceUsage(...);
   *** onGetTargetFragmentRequestCodeUsage(...);
   *** onGetTargetFragmentUsage(...);
   *** onPolicyViolation(...);
   *** onSetRetainInstanceUsage(...);
   *** onSetTargetFragmentUsage(...);
   *** onSetUserVisibleHint(...);
   *** onWrongFragmentContainer(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
   *** getFragment(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
}

# ACW for Xamarin.AndroidX.Interpolator
-keep class androidx.interpolator.view.animation.FastOutLinearInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutLinearInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.FastOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LinearOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LinearOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.UI
-keep class androidx.legacy.app.ActionBarDrawerToggle
-keepclassmembers class androidx.legacy.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.Utils
-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   <init>(...);
   *** completeWakefulIntent(...);
   *** startWakefulService(...);
}

-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   *** onReceive(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.V4
# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** getInternalScopeRef(...);
   *** setInternalScopeRef(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData
-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   <init>(...);
   <init>(...);
   *** getLiveData(...);
   *** compute(...);
   *** invalidate(...);
}

-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   *** compute(...);
}

-keep class androidx.lifecycle.MediatorLiveData
-keepclassmembers class androidx.lifecycle.MediatorLiveData {
   <init>(...);
   *** addSource(...);
   *** removeSource(...);
}

-keep class androidx.lifecycle.Transformations
-keepclassmembers class androidx.lifecycle.Transformations {
   *** distinctUntilChanged(...);
   *** map(...);
   *** switchMap(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Process
-keep class androidx.lifecycle.ProcessLifecycleInitializer
-keepclassmembers class androidx.lifecycle.ProcessLifecycleInitializer {
   <init>(...);
   *** create(...);
   *** dependencies(...);
}

-keep class androidx.lifecycle.ProcessLifecycleOwner
-keepclassmembers class androidx.lifecycle.ProcessLifecycleOwner {
   *** getLifecycle(...);
   *** get(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Runtime
-keep class androidx.lifecycle.LifecycleRegistry$Companion
-keepclassmembers class androidx.lifecycle.LifecycleRegistry$Companion {
   <init>(...);
   *** createUnsafe(...);
}

-keep class androidx.lifecycle.LifecycleRegistry
-keepclassmembers class androidx.lifecycle.LifecycleRegistry {
   <init>(...);
   <init>(...);
   *** getCurrentState(...);
   *** getObserverCount(...);
   *** addObserver(...);
   *** createUnsafe(...);
   *** handleLifecycleEvent(...);
   *** markState(...);
   *** removeObserver(...);
   *** setCurrentState(...);
}

-keep class androidx.lifecycle.ReportFragment$Companion
-keepclassmembers class androidx.lifecycle.ReportFragment$Companion {
   <init>(...);
   *** get(...);
   *** injectIfNeededIn(...);
}

-keep class androidx.lifecycle.ReportFragment
-keepclassmembers class androidx.lifecycle.ReportFragment {
   <init>(...);
   *** get(...);
   *** injectIfNeededIn(...);
}

-keep class androidx.lifecycle.ViewTreeLifecycleOwner
-keepclassmembers class androidx.lifecycle.ViewTreeLifecycleOwner {
   *** get(...);
   *** set(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.HasDefaultViewModelProviderFactory
-keepclassmembers class androidx.lifecycle.HasDefaultViewModelProviderFactory {
}

-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras$Key
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras$Key {
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
-keep class androidx.lifecycle.AbstractSavedStateViewModelFactory
-keepclassmembers class androidx.lifecycle.AbstractSavedStateViewModelFactory {
   <init>(...);
   <init>(...);
   *** create(...);
   *** create(...);
   *** create(...);
}

-keep class androidx.lifecycle.AbstractSavedStateViewModelFactory
-keepclassmembers class androidx.lifecycle.AbstractSavedStateViewModelFactory {
   *** create(...);
}

-keep class androidx.lifecycle.SavedStateHandle$Companion
-keepclassmembers class androidx.lifecycle.SavedStateHandle$Companion {
   <init>(...);
   *** createHandle(...);
   *** validateValue(...);
}

-keep class androidx.lifecycle.SavedStateHandle
-keepclassmembers class androidx.lifecycle.SavedStateHandle {
   <init>(...);
   <init>(...);
   *** clearSavedStateProvider(...);
   *** contains(...);
   *** createHandle(...);
   *** get(...);
   *** getLiveData(...);
   *** getLiveData(...);
   *** getStateFlow(...);
   *** keys(...);
   *** remove(...);
   *** savedStateProvider(...);
   *** set(...);
   *** setSavedStateProvider(...);
}

-keep class androidx.lifecycle.SavedStateHandleSupport
-keepclassmembers class androidx.lifecycle.SavedStateHandleSupport {
   *** createSavedStateHandle(...);
   *** enableSavedStateHandles(...);
   *** getSavedStateHandlesProvider(...);
   *** getSavedStateHandlesVM(...);
}

-keep class androidx.lifecycle.SavedStateViewModelFactory
-keepclassmembers class androidx.lifecycle.SavedStateViewModelFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   *** create(...);
   *** create(...);
   *** create(...);
}

-keep class androidx.lifecycle.SavedStateViewModelFactoryKt
-keepclassmembers class androidx.lifecycle.SavedStateViewModelFactoryKt {
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.LocalBroadcastManager
-keep class androidx.localbroadcastmanager.content.LocalBroadcastManager
-keepclassmembers class androidx.localbroadcastmanager.content.LocalBroadcastManager {
   *** getInstance(...);
   *** registerReceiver(...);
   *** sendBroadcast(...);
   *** sendBroadcastSync(...);
   *** unregisterReceiver(...);
}

# ACW for Xamarin.AndroidX.Media
-keep class androidx.media.AudioAttributesCompat$AttributeContentType
-keepclassmembers class androidx.media.AudioAttributesCompat$AttributeContentType {
}

-keep class androidx.media.AudioAttributesCompat$AttributeUsage
-keepclassmembers class androidx.media.AudioAttributesCompat$AttributeUsage {
}

-keep class androidx.media.AudioAttributesCompat$Builder
-keepclassmembers class androidx.media.AudioAttributesCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setContentType(...);
   *** setFlags(...);
   *** setLegacyStreamType(...);
   *** setUsage(...);
}

-keep class androidx.media.AudioAttributesCompat
-keepclassmembers class androidx.media.AudioAttributesCompat {
   <init>(...);
   *** getContentType(...);
   *** getFlags(...);
   *** getLegacyStreamType(...);
   *** getUsage(...);
   *** getVolumeControlStream(...);
   *** setForceLegacyBehavior(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.media.AudioAttributesCompatParcelizer
-keepclassmembers class androidx.media.AudioAttributesCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class androidx.media.AudioAttributesImplBase
-keepclassmembers class androidx.media.AudioAttributesImplBase {
   <init>(...);
   *** getAudioAttributes(...);
   *** getContentType(...);
   *** getFlags(...);
   *** getLegacyStreamType(...);
   *** getRawLegacyStreamType(...);
   *** getUsage(...);
   *** getVolumeControlStream(...);
}

-keep class androidx.media.AudioAttributesImplBaseParcelizer
-keepclassmembers class androidx.media.AudioAttributesImplBaseParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class androidx.media.AudioFocusRequestCompat$Builder
-keepclassmembers class androidx.media.AudioFocusRequestCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setAudioAttributes(...);
   *** setFocusGain(...);
   *** setOnAudioFocusChangeListener(...);
   *** setOnAudioFocusChangeListener(...);
   *** setWillPauseWhenDucked(...);
}

-keep class androidx.media.AudioFocusRequestCompat
-keepclassmembers class androidx.media.AudioFocusRequestCompat {
   *** getAudioAttributesCompat(...);
   *** getFocusChangeHandler(...);
   *** getFocusGain(...);
   *** getOnAudioFocusChangeListener(...);
   *** willPauseWhenDucked(...);
}

-keep class androidx.media.AudioManagerCompat
-keepclassmembers class androidx.media.AudioManagerCompat {
   *** abandonAudioFocusRequest(...);
   *** getStreamMaxVolume(...);
   *** getStreamMinVolume(...);
   *** requestAudioFocus(...);
}

-keep class androidx.media.AudioAttributesImpl$Builder
-keepclassmembers class androidx.media.AudioAttributesImpl$Builder {
}

-keep class androidx.media.AudioAttributesImpl
-keepclassmembers class androidx.media.AudioAttributesImpl {
}

-keep class androidx.media.MediaBrowserCompatUtils
-keepclassmembers class androidx.media.MediaBrowserCompatUtils {
   *** areSameOptions(...);
   *** hasDuplicatedItems(...);
}

-keep class androidx.media.MediaBrowserProtocol
-keepclassmembers class androidx.media.MediaBrowserProtocol {
}

-keep class androidx.media.MediaBrowserServiceCompat$BrowserRoot
-keepclassmembers class androidx.media.MediaBrowserServiceCompat$BrowserRoot {
   <init>(...);
   *** getExtras(...);
   *** getRootId(...);
}

-keep class androidx.media.MediaBrowserServiceCompat$Result
-keepclassmembers class androidx.media.MediaBrowserServiceCompat$Result {
   *** detach(...);
   *** sendError(...);
   *** sendProgressUpdate(...);
   *** sendResult(...);
}

-keep class androidx.media.MediaBrowserServiceCompat
-keepclassmembers class androidx.media.MediaBrowserServiceCompat {
   <init>(...);
   *** getBrowserRootHints(...);
   *** getCurrentBrowserInfo(...);
   *** getSessionToken(...);
   *** setSessionToken(...);
   *** attachToBaseContext(...);
   *** dump(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** onBind(...);
   *** onCustomAction(...);
   *** onGetRoot(...);
   *** onLoadChildren(...);
   *** onLoadChildren(...);
   *** onLoadItem(...);
   *** onSearch(...);
   *** onSubscribe(...);
   *** onUnsubscribe(...);
}

-keep class androidx.media.MediaBrowserServiceCompat
-keepclassmembers class androidx.media.MediaBrowserServiceCompat {
   *** onGetRoot(...);
   *** onLoadChildren(...);
}

-keep class androidx.media.MediaSessionManager$RemoteUserInfo
-keepclassmembers class androidx.media.MediaSessionManager$RemoteUserInfo {
   <init>(...);
   <init>(...);
   *** getPackageName(...);
   *** getPid(...);
   *** getUid(...);
}

-keep class androidx.media.MediaSessionManager
-keepclassmembers class androidx.media.MediaSessionManager {
   *** getSessionManager(...);
   *** isTrustedForMediaControl(...);
}

-keep class androidx.media.VolumeProviderCompat$Callback
-keepclassmembers class androidx.media.VolumeProviderCompat$Callback {
   <init>(...);
   *** onVolumeChanged(...);
}

-keep class androidx.media.VolumeProviderCompat$Callback
-keepclassmembers class androidx.media.VolumeProviderCompat$Callback {
   *** onVolumeChanged(...);
}

-keep class androidx.media.VolumeProviderCompat$ControlType
-keepclassmembers class androidx.media.VolumeProviderCompat$ControlType {
}

-keep class androidx.media.VolumeProviderCompat
-keepclassmembers class androidx.media.VolumeProviderCompat {
   <init>(...);
   <init>(...);
   *** getCurrentVolume(...);
   *** setCurrentVolume(...);
   *** getMaxVolume(...);
   *** getVolumeControl(...);
   *** getVolumeControlId(...);
   *** getVolumeProvider(...);
   *** onAdjustVolume(...);
   *** onSetVolumeTo(...);
   *** setCallback(...);
}

-keep class androidx.media.VolumeProviderCompat
-keepclassmembers class androidx.media.VolumeProviderCompat {
}

-keep class androidx.media.utils.MediaConstants
-keepclassmembers class androidx.media.utils.MediaConstants {
}

-keep class androidx.media.session.MediaButtonReceiver
-keepclassmembers class androidx.media.session.MediaButtonReceiver {
   <init>(...);
   *** buildMediaButtonPendingIntent(...);
   *** buildMediaButtonPendingIntent(...);
   *** getMediaButtonReceiverComponent(...);
   *** handleIntent(...);
   *** onReceive(...);
}

-keep class androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
-keepclassmembers class androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle {
   <init>(...);
}

-keep class androidx.media.app.NotificationCompat$MediaStyle
-keepclassmembers class androidx.media.app.NotificationCompat$MediaStyle {
   <init>(...);
   <init>(...);
   *** getMediaSession(...);
   *** setCancelButtonIntent(...);
   *** setMediaSession(...);
   *** setShowActionsInCompactView(...);
   *** setShowCancelButton(...);
}

-keep class androidx.media.app.NotificationCompat
-keepclassmembers class androidx.media.app.NotificationCompat {
}

-keep class android.support.v4.media.AudioAttributesCompatParcelizer
-keepclassmembers class android.support.v4.media.AudioAttributesCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v4.media.AudioAttributesImplBaseParcelizer
-keepclassmembers class android.support.v4.media.AudioAttributesImplBaseParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CallbackHandler
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CallbackHandler {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback {
   <init>(...);
   *** onConnected(...);
   *** onConnectionFailed(...);
   *** onConnectionSuspended(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
   <init>(...);
   *** onError(...);
   *** onProgressUpdate(...);
   *** onResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
   <init>(...);
   *** onError(...);
   *** onItemLoaded(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaItem
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaItem {
   <init>(...);
   *** getDescription(...);
   *** getFlags(...);
   *** isBrowsable(...);
   *** isPlayable(...);
   *** getMediaId(...);
   *** describeContents(...);
   *** fromMediaItem(...);
   *** fromMediaItemList(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
   <init>(...);
   *** onError(...);
   *** onSearchResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper {
   <init>(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
   <init>(...);
   *** onChildrenLoaded(...);
   *** onChildrenLoaded(...);
   *** onError(...);
   *** onError(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat
-keepclassmembers class android.support.v4.media.MediaBrowserCompat {
   <init>(...);
   *** getExtras(...);
   *** isConnected(...);
   *** getNotifyChildrenChangedOptions(...);
   *** getRoot(...);
   *** getServiceComponent(...);
   *** getSessionToken(...);
   *** connect(...);
   *** disconnect(...);
   *** getItem(...);
   *** search(...);
   *** sendCustomAction(...);
   *** subscribe(...);
   *** subscribe(...);
   *** unsubscribe(...);
   *** unsubscribe(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat$Builder
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat$Builder {
   <init>(...);
   *** build(...);
   *** setDescription(...);
   *** setExtras(...);
   *** setIconBitmap(...);
   *** setIconUri(...);
   *** setMediaId(...);
   *** setMediaUri(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat {
   *** getDescription(...);
   *** getExtras(...);
   *** getIconBitmap(...);
   *** getIconUri(...);
   *** getMediaDescription(...);
   *** getMediaId(...);
   *** getMediaUri(...);
   *** getSubtitle(...);
   *** getTitle(...);
   *** describeContents(...);
   *** fromMediaDescription(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$Builder
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** putBitmap(...);
   *** putLong(...);
   *** putRating(...);
   *** putString(...);
   *** putText(...);
}

-keep class android.support.v4.media.MediaMetadataCompat
-keepclassmembers class android.support.v4.media.MediaMetadataCompat {
   *** getBundle(...);
   *** getDescription(...);
   *** getMediaMetadata(...);
   *** containsKey(...);
   *** describeContents(...);
   *** fromMediaMetadata(...);
   *** getBitmap(...);
   *** getLong(...);
   *** getRating(...);
   *** getString(...);
   *** getText(...);
   *** keySet(...);
   *** size(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.RatingCompat$StarStyle
-keepclassmembers class android.support.v4.media.RatingCompat$StarStyle {
}

-keep class android.support.v4.media.RatingCompat$Style
-keepclassmembers class android.support.v4.media.RatingCompat$Style {
}

-keep class android.support.v4.media.RatingCompat
-keepclassmembers class android.support.v4.media.RatingCompat {
   *** hasHeart(...);
   *** isRated(...);
   *** isThumbUp(...);
   *** getPercentRating(...);
   *** getRating(...);
   *** getRatingStyle(...);
   *** getStarRating(...);
   *** describeContents(...);
   *** fromRating(...);
   *** newHeartRating(...);
   *** newPercentageRating(...);
   *** newStarRating(...);
   *** newThumbRating(...);
   *** newUnratedRating(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Default
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Default {
   <init>(...);
   *** asBinder(...);
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback {
}

-keep class android.support.v4.media.session.IMediaSession$Default
-keepclassmembers class android.support.v4.media.session.IMediaSession$Default {
   <init>(...);
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** asBinder(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession
-keepclassmembers class android.support.v4.media.session.IMediaSession {
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
   <init>(...);
   *** getIControllerCallback(...);
   *** binderDied(...);
   *** onAudioInfoChanged(...);
   *** onCaptioningEnabledChanged(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionEvent(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
}

-keep class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo {
   *** getAudioAttributes(...);
   *** getAudioStream(...);
   *** getCurrentVolume(...);
   *** getMaxVolume(...);
   *** getPlaybackType(...);
   *** getVolumeControl(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setPlaybackSpeed(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat {
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isCaptioningEnabled(...);
   *** isSessionReady(...);
   *** getMediaController(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** getSession2Token(...);
   *** getSessionActivity(...);
   *** getSessionInfo(...);
   *** getSessionToken(...);
   *** getShuffleMode(...);
   *** addQueueItem(...);
   *** addQueueItem(...);
   *** adjustVolume(...);
   *** dispatchMediaButtonEvent(...);
   *** getMediaController(...);
   *** getPlaybackInfo(...);
   *** getTransportControls(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** sendCommand(...);
   *** setMediaController(...);
   *** setVolumeTo(...);
   *** unregisterCallback(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
   <init>(...);
   *** onAddQueueItem(...);
   *** onAddQueueItem(...);
   *** onCommand(...);
   *** onCustomAction(...);
   *** onFastForward(...);
   *** onMediaButtonEvent(...);
   *** onPause(...);
   *** onPlay(...);
   *** onPlayFromMediaId(...);
   *** onPlayFromSearch(...);
   *** onPlayFromUri(...);
   *** onPrepare(...);
   *** onPrepareFromMediaId(...);
   *** onPrepareFromSearch(...);
   *** onPrepareFromUri(...);
   *** onRemoveQueueItem(...);
   *** onRemoveQueueItemAt(...);
   *** onRewind(...);
   *** onSeekTo(...);
   *** onSetCaptioningEnabled(...);
   *** onSetPlaybackSpeed(...);
   *** onSetRating(...);
   *** onSetRating(...);
   *** onSetRepeatMode(...);
   *** onSetShuffleMode(...);
   *** onSkipToNext(...);
   *** onSkipToPrevious(...);
   *** onSkipToQueueItem(...);
   *** onStop(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
}

-keep class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener {
}

-keep class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor {
}

-keep class android.support.v4.media.session.MediaSessionCompat$QueueItem
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$QueueItem {
   <init>(...);
   *** getDescription(...);
   *** getQueueId(...);
   *** describeContents(...);
   *** fromQueueItem(...);
   *** fromQueueItemList(...);
   *** getQueueItem(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Token
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token {
   *** getExtraBinder(...);
   *** setExtraBinder(...);
   *** getSession2Token(...);
   *** setSession2Token(...);
   *** describeContents(...);
   *** fromBundle(...);
   *** fromToken(...);
   *** fromToken(...);
   *** getToken(...);
   *** toBundle(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getCallingPackage(...);
   *** getController(...);
   *** getCurrentControllerInfo(...);
   *** getMediaSession(...);
   *** getRemoteControlClient(...);
   *** getSessionToken(...);
   *** addOnActiveChangeListener(...);
   *** ensureClassLoader(...);
   *** fromMediaSession(...);
   *** release(...);
   *** removeOnActiveChangeListener(...);
   *** sendSessionEvent(...);
   *** setCallback(...);
   *** setCallback(...);
   *** setCaptioningEnabled(...);
   *** setExtras(...);
   *** setFlags(...);
   *** setMediaButtonReceiver(...);
   *** setMetadata(...);
   *** setPlaybackState(...);
   *** setPlaybackToLocal(...);
   *** setPlaybackToRemote(...);
   *** setQueue(...);
   *** setQueueTitle(...);
   *** setRatingType(...);
   *** setRepeatMode(...);
   *** setSessionActivity(...);
   *** setShuffleMode(...);
   *** unparcelWithClassLoader(...);
}

-keep class android.support.v4.media.session.ParcelableVolumeInfo
-keepclassmembers class android.support.v4.media.session.ParcelableVolumeInfo {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Actions
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Actions {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Builder {
   <init>(...);
   <init>(...);
   *** addCustomAction(...);
   *** addCustomAction(...);
   *** build(...);
   *** setActions(...);
   *** setActiveQueueItemId(...);
   *** setBufferedPosition(...);
   *** setErrorMessage(...);
   *** setErrorMessage(...);
   *** setExtras(...);
   *** setState(...);
   *** setState(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setExtras(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction {
   *** getAction(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getName(...);
   *** describeContents(...);
   *** fromCustomAction(...);
   *** getCustomAction(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$RepeatMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$RepeatMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$State
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$State {
}

-keep class android.support.v4.media.session.PlaybackStateCompat
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat {
   *** getActions(...);
   *** getActiveQueueItemId(...);
   *** getBufferedPosition(...);
   *** getCustomActions(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** getExtras(...);
   *** getLastPositionUpdateTime(...);
   *** getPlaybackSpeed(...);
   *** getPlaybackState(...);
   *** getPosition(...);
   *** getState(...);
   *** describeContents(...);
   *** fromPlaybackState(...);
   *** getCurrentPosition(...);
   *** toKeyCode(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.AndroidX.MultiDex
# ACW for Xamarin.AndroidX.Navigation.Common
-keep class androidx.navigation.ActionOnlyNavDirections
-keepclassmembers class androidx.navigation.ActionOnlyNavDirections {
   <init>(...);
   *** getActionId(...);
   *** getArguments(...);
}

-keep class androidx.navigation.FloatingWindow
-keepclassmembers class androidx.navigation.FloatingWindow {
}

-keep class androidx.navigation.NavArgs
-keepclassmembers class androidx.navigation.NavArgs {
}

-keep class androidx.navigation.NavDirections
-keepclassmembers class androidx.navigation.NavDirections {
}

-keep class androidx.navigation.NavAction
-keepclassmembers class androidx.navigation.NavAction {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDefaultArguments(...);
   *** setDefaultArguments(...);
   *** getDestinationId(...);
   *** getNavOptions(...);
   *** setNavOptions(...);
}

-keep class androidx.navigation.NavArgument$Builder
-keepclassmembers class androidx.navigation.NavArgument$Builder {
   <init>(...);
   *** build(...);
   *** setDefaultValue(...);
   *** setIsNullable(...);
   *** setType(...);
}

-keep class androidx.navigation.NavArgument
-keepclassmembers class androidx.navigation.NavArgument {
   *** getDefaultValue(...);
   *** isDefaultValuePresent(...);
   *** isNullable(...);
   *** getType(...);
}

-keep class androidx.navigation.NavDeepLink$Builder
-keepclassmembers class androidx.navigation.NavDeepLink$Builder {
   *** build(...);
   *** fromAction(...);
   *** fromMimeType(...);
   *** fromUriPattern(...);
   *** setAction(...);
   *** setMimeType(...);
   *** setUriPattern(...);
}

-keep class androidx.navigation.NavDeepLink
-keepclassmembers class androidx.navigation.NavDeepLink {
   *** getAction(...);
   *** getMimeType(...);
   *** getUriPattern(...);
}

-keep class androidx.navigation.NavDeepLinkRequest$Builder
-keepclassmembers class androidx.navigation.NavDeepLinkRequest$Builder {
   *** build(...);
   *** fromAction(...);
   *** fromMimeType(...);
   *** fromUri(...);
   *** setAction(...);
   *** setMimeType(...);
   *** setUri(...);
}

-keep class androidx.navigation.NavDeepLinkRequest
-keepclassmembers class androidx.navigation.NavDeepLinkRequest {
   *** getAction(...);
   *** getMimeType(...);
   *** getUri(...);
}

-keep class androidx.navigation.NavDestination$ClassType
-keepclassmembers class androidx.navigation.NavDestination$ClassType {
}

-keep class androidx.navigation.NavDestination
-keepclassmembers class androidx.navigation.NavDestination {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDisplayName(...);
   *** getId(...);
   *** setId(...);
   *** getLabel(...);
   *** setLabel(...);
   *** getNavigatorName(...);
   *** getParent(...);
   *** addArgument(...);
   *** addDeepLink(...);
   *** addDeepLink(...);
   *** getAction(...);
   *** hasDeepLink(...);
   *** hasDeepLink(...);
   *** onInflate(...);
   *** parseClassFromName(...);
   *** putAction(...);
   *** putAction(...);
   *** removeAction(...);
   *** removeArgument(...);
}

-keep class androidx.navigation.NavGraph
-keepclassmembers class androidx.navigation.NavGraph {
   <init>(...);
   *** getStartDestination(...);
   *** setStartDestination(...);
   *** addAll(...);
   *** addDestination(...);
   *** addDestinations(...);
   *** addDestinations(...);
   *** clear(...);
   *** findNode(...);
   *** iterator(...);
   *** remove(...);
}

-keep class androidx.navigation.NavGraphNavigator
-keepclassmembers class androidx.navigation.NavGraphNavigator {
   <init>(...);
   *** createDestination(...);
   *** navigate(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.Navigator$Extras
-keepclassmembers class androidx.navigation.Navigator$Extras {
}

-keep class androidx.navigation.Navigator$Name
-keepclassmembers class androidx.navigation.Navigator$Name {
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   <init>(...);
   *** createDestination(...);
   *** navigate(...);
   *** onRestoreState(...);
   *** onSaveState(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   *** createDestination(...);
   *** navigate(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.NavigatorProvider
-keepclassmembers class androidx.navigation.NavigatorProvider {
   <init>(...);
   *** addNavigator(...);
   *** addNavigator(...);
   *** getNavigator(...);
   *** getNavigator(...);
}

-keep class androidx.navigation.NavOptions$Builder
-keepclassmembers class androidx.navigation.NavOptions$Builder {
   <init>(...);
   *** build(...);
   *** setEnterAnim(...);
   *** setExitAnim(...);
   *** setLaunchSingleTop(...);
   *** setPopEnterAnim(...);
   *** setPopExitAnim(...);
   *** setPopUpTo(...);
}

-keep class androidx.navigation.NavOptions
-keepclassmembers class androidx.navigation.NavOptions {
   *** getEnterAnim(...);
   *** getExitAnim(...);
   *** isPopUpToInclusive(...);
   *** getPopEnterAnim(...);
   *** getPopExitAnim(...);
   *** getPopUpTo(...);
   *** shouldLaunchSingleTop(...);
}

-keep class androidx.navigation.NavType$EnumType
-keepclassmembers class androidx.navigation.NavType$EnumType {
   <init>(...);
}

-keep class androidx.navigation.NavType$ParcelableArrayType
-keepclassmembers class androidx.navigation.NavType$ParcelableArrayType {
   <init>(...);
   *** getName(...);
   *** get(...);
   *** parseValue(...);
   *** put(...);
}

-keep class androidx.navigation.NavType$ParcelableType
-keepclassmembers class androidx.navigation.NavType$ParcelableType {
   <init>(...);
   *** getName(...);
   *** get(...);
   *** parseValue(...);
   *** put(...);
}

-keep class androidx.navigation.NavType$SerializableArrayType
-keepclassmembers class androidx.navigation.NavType$SerializableArrayType {
   <init>(...);
   *** getName(...);
   *** get(...);
   *** parseValue(...);
   *** put(...);
}

-keep class androidx.navigation.NavType$SerializableType
-keepclassmembers class androidx.navigation.NavType$SerializableType {
   <init>(...);
   *** getName(...);
   *** get(...);
   *** parseValue(...);
   *** put(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   *** isNullableAllowed(...);
   *** getName(...);
   *** fromArgType(...);
   *** get(...);
   *** parseValue(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   *** getName(...);
   *** get(...);
   *** parseValue(...);
}

-keep class androidx.navigation.NoOpNavigator
-keepclassmembers class androidx.navigation.NoOpNavigator {
   <init>(...);
   *** createDestination(...);
   *** navigate(...);
   *** popBackStack(...);
}

# ACW for Xamarin.AndroidX.Navigation.Runtime
-keep class androidx.navigation.ActivityNavigator$Destination
-keepclassmembers class androidx.navigation.ActivityNavigator$Destination {
   <init>(...);
   <init>(...);
   *** getAction(...);
   *** getComponent(...);
   *** getData(...);
   *** getDataPattern(...);
   *** getIntent(...);
   *** getTargetPackage(...);
   *** setAction(...);
   *** setComponentName(...);
   *** setData(...);
   *** setDataPattern(...);
   *** setIntent(...);
   *** setTargetPackage(...);
}

-keep class androidx.navigation.ActivityNavigator$Extras$Builder
-keepclassmembers class androidx.navigation.ActivityNavigator$Extras$Builder {
   <init>(...);
   *** addFlags(...);
   *** build(...);
   *** setActivityOptions(...);
}

-keep class androidx.navigation.ActivityNavigator$Extras
-keepclassmembers class androidx.navigation.ActivityNavigator$Extras {
   *** getActivityOptions(...);
   *** getFlags(...);
}

-keep class androidx.navigation.ActivityNavigator
-keepclassmembers class androidx.navigation.ActivityNavigator {
   <init>(...);
   *** applyPopAnimationsToPendingTransition(...);
   *** createDestination(...);
   *** navigate(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.NavHost
-keepclassmembers class androidx.navigation.NavHost {
}

-keep class androidx.navigation.NavBackStackEntry
-keepclassmembers class androidx.navigation.NavBackStackEntry {
   *** getArguments(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getDestination(...);
   *** getLifecycle(...);
   *** getSavedStateHandle(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
}

-keep class androidx.navigation.NavController$OnDestinationChangedListener
-keepclassmembers class androidx.navigation.NavController$OnDestinationChangedListener {
}

-keep class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor
-keepclassmembers class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor {
}

-keep class androidx.navigation.NavController
-keepclassmembers class androidx.navigation.NavController {
   <init>(...);
   *** getBackStack(...);
   *** getCurrentBackStackEntry(...);
   *** getCurrentDestination(...);
   *** getGraph(...);
   *** setGraph(...);
   *** getNavInflater(...);
   *** getNavigatorProvider(...);
   *** setNavigatorProvider(...);
   *** getPreviousBackStackEntry(...);
   *** addOnDestinationChangedListener(...);
   *** createDeepLink(...);
   *** getBackStackEntry(...);
   *** getViewModelStoreOwner(...);
   *** handleDeepLink(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigateUp(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** removeOnDestinationChangedListener(...);
   *** restoreState(...);
   *** saveState(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setGraph(...);
}

-keep class androidx.navigation.NavDeepLinkBuilder
-keepclassmembers class androidx.navigation.NavDeepLinkBuilder {
   <init>(...);
   *** createPendingIntent(...);
   *** createTaskStackBuilder(...);
   *** setArguments(...);
   *** setComponentName(...);
   *** setComponentName(...);
   *** setDestination(...);
   *** setGraph(...);
   *** setGraph(...);
}

-keep class androidx.navigation.NavHostController
-keepclassmembers class androidx.navigation.NavHostController {
   <init>(...);
   *** enableOnBackPressed(...);
   *** setLifecycleOwner(...);
   *** setOnBackPressedDispatcher(...);
   *** setViewModelStore(...);
}

-keep class androidx.navigation.Navigation
-keepclassmembers class androidx.navigation.Navigation {
   *** createNavigateOnClickListener(...);
   *** createNavigateOnClickListener(...);
   *** createNavigateOnClickListener(...);
   *** findNavController(...);
   *** findNavController(...);
   *** setViewNavController(...);
}

-keep class androidx.navigation.NavInflater
-keepclassmembers class androidx.navigation.NavInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.AndroidX.Navigation.UI
-keep class androidx.navigation.ui.AppBarConfiguration$Builder
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** setDrawerLayout(...);
   *** setFallbackOnNavigateUpListener(...);
   *** setOpenableLayout(...);
}

-keep class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener {
}

-keep class mono.androidx.navigation.ui.AppBarConfiguration_OnNavigateUpListenerImplementor
-keepclassmembers class mono.androidx.navigation.ui.AppBarConfiguration_OnNavigateUpListenerImplementor {
}

-keep class androidx.navigation.ui.AppBarConfiguration
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration {
   *** getDrawerLayout(...);
   *** getFallbackOnNavigateUpListener(...);
   *** getOpenableLayout(...);
   *** getTopLevelDestinations(...);
}

-keep class androidx.navigation.ui.NavigationUI
-keepclassmembers class androidx.navigation.ui.NavigationUI {
   *** navigateUp(...);
   *** navigateUp(...);
   *** onNavDestinationSelected(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
}

# ACW for Xamarin.AndroidX.Preference
-keep class androidx.preference.PreferenceGroupAdapter
-keepclassmembers class androidx.preference.PreferenceGroupAdapter {
   *** onBindViewHolder(...);
   <init>(...);
   *** getItemCount(...);
   *** getItem(...);
   *** getPreferenceAdapterPosition(...);
   *** getPreferenceAdapterPosition(...);
   *** onCreateViewHolder(...);
   *** onPreferenceChange(...);
   *** onPreferenceHierarchyChange(...);
   *** onPreferenceVisibilityChange(...);
}

-keep class androidx.preference.AndroidResources
-keepclassmembers class androidx.preference.AndroidResources {
}

-keep class androidx.preference.CheckBoxPreference
-keepclassmembers class androidx.preference.CheckBoxPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.preference.DialogPreference$TargetFragment
-keepclassmembers class androidx.preference.DialogPreference$TargetFragment {
}

-keep class androidx.preference.DialogPreference
-keepclassmembers class androidx.preference.DialogPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDialogIcon(...);
   *** setDialogIcon(...);
   *** getDialogLayoutResource(...);
   *** setDialogLayoutResource(...);
   *** getDialogMessage(...);
   *** setDialogMessage(...);
   *** getDialogTitle(...);
   *** setDialogTitle(...);
   *** getNegativeButtonText(...);
   *** setNegativeButtonText(...);
   *** getPositiveButtonText(...);
   *** setPositiveButtonText(...);
   *** setDialogIcon(...);
   *** setDialogMessage(...);
   *** setDialogTitle(...);
   *** setNegativeButtonText(...);
   *** setPositiveButtonText(...);
}

-keep class androidx.preference.DialogPreference
-keepclassmembers class androidx.preference.DialogPreference {
}

-keep class androidx.preference.DropDownPreference
-keepclassmembers class androidx.preference.DropDownPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createAdapter(...);
}

-keep class androidx.preference.EditTextPreference$OnBindEditTextListener
-keepclassmembers class androidx.preference.EditTextPreference$OnBindEditTextListener {
}

-keep class mono.androidx.preference.EditTextPreference_OnBindEditTextListenerImplementor
-keepclassmembers class mono.androidx.preference.EditTextPreference_OnBindEditTextListenerImplementor {
}

-keep class androidx.preference.EditTextPreference$SimpleSummaryProvider
-keepclassmembers class androidx.preference.EditTextPreference$SimpleSummaryProvider {
   *** getInstance(...);
   *** provideSummary(...);
}

-keep class androidx.preference.EditTextPreference
-keepclassmembers class androidx.preference.EditTextPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getText(...);
   *** setText(...);
   *** setOnBindEditTextListener(...);
}

-keep class androidx.preference.EditTextPreferenceDialogFragment
-keepclassmembers class androidx.preference.EditTextPreferenceDialogFragment {
   <init>(...);
   *** newInstance(...);
   *** onDialogClosed(...);
}

-keep class androidx.preference.EditTextPreferenceDialogFragmentCompat
-keepclassmembers class androidx.preference.EditTextPreferenceDialogFragmentCompat {
   <init>(...);
   *** newInstance(...);
   *** onDialogClosed(...);
}

-keep class androidx.preference.ListPreference$SimpleSummaryProvider
-keepclassmembers class androidx.preference.ListPreference$SimpleSummaryProvider {
   *** getInstance(...);
   *** provideSummary(...);
}

-keep class androidx.preference.ListPreference
-keepclassmembers class androidx.preference.ListPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getEntry(...);
   *** getValue(...);
   *** setValue(...);
   *** findIndexOfValue(...);
   *** getEntries(...);
   *** getEntryValues(...);
   *** setEntries(...);
   *** setEntries(...);
   *** setEntryValues(...);
   *** setEntryValues(...);
   *** setValueIndex(...);
}

-keep class androidx.preference.ListPreferenceDialogFragment
-keepclassmembers class androidx.preference.ListPreferenceDialogFragment {
   <init>(...);
   *** newInstance(...);
   *** onDialogClosed(...);
}

-keep class androidx.preference.ListPreferenceDialogFragmentCompat
-keepclassmembers class androidx.preference.ListPreferenceDialogFragmentCompat {
   <init>(...);
   *** newInstance(...);
   *** onDialogClosed(...);
}

-keep class androidx.preference.MultiSelectListPreference
-keepclassmembers class androidx.preference.MultiSelectListPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getValues(...);
   *** setValues(...);
   *** findIndexOfValue(...);
   *** getEntries(...);
   *** getEntryValues(...);
   *** getSelectedItems(...);
   *** setEntries(...);
   *** setEntries(...);
   *** setEntryValues(...);
   *** setEntryValues(...);
}

-keep class androidx.preference.MultiSelectListPreferenceDialogFragment
-keepclassmembers class androidx.preference.MultiSelectListPreferenceDialogFragment {
   <init>(...);
   *** newInstance(...);
   *** onDialogClosed(...);
}

-keep class androidx.preference.MultiSelectListPreferenceDialogFragmentCompat
-keepclassmembers class androidx.preference.MultiSelectListPreferenceDialogFragmentCompat {
   <init>(...);
   *** newInstance(...);
   *** onDialogClosed(...);
}

-keep class androidx.preference.Preference$BaseSavedState
-keepclassmembers class androidx.preference.Preference$BaseSavedState {
   <init>(...);
   <init>(...);
}

-keep class androidx.preference.Preference$OnPreferenceChangeListener
-keepclassmembers class androidx.preference.Preference$OnPreferenceChangeListener {
}

-keep class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor
-keepclassmembers class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor {
}

-keep class androidx.preference.Preference$OnPreferenceClickListener
-keepclassmembers class androidx.preference.Preference$OnPreferenceClickListener {
}

-keep class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor
-keepclassmembers class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor {
}

-keep class androidx.preference.Preference$SummaryProvider
-keepclassmembers class androidx.preference.Preference$SummaryProvider {
}

-keep class androidx.preference.Preference
-keepclassmembers class androidx.preference.Preference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** isCopyingEnabled(...);
   *** setCopyingEnabled(...);
   *** getDependency(...);
   *** setDependency(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getExtras(...);
   *** getFragment(...);
   *** setFragment(...);
   *** hasKey(...);
   *** getIcon(...);
   *** setIcon(...);
   *** isIconSpaceReserved(...);
   *** setIconSpaceReserved(...);
   *** getIntent(...);
   *** setIntent(...);
   *** isShown(...);
   *** getKey(...);
   *** setKey(...);
   *** getLayoutResource(...);
   *** setLayoutResource(...);
   *** getOnPreferenceChangeListener(...);
   *** setOnPreferenceChangeListener(...);
   *** getOnPreferenceClickListener(...);
   *** setOnPreferenceClickListener(...);
   *** getOrder(...);
   *** setOrder(...);
   *** getParent(...);
   *** isPersistent(...);
   *** setPersistent(...);
   *** getPreferenceDataStore(...);
   *** setPreferenceDataStore(...);
   *** getPreferenceManager(...);
   *** isSelectable(...);
   *** setSelectable(...);
   *** getSharedPreferences(...);
   *** getShouldDisableView(...);
   *** setShouldDisableView(...);
   *** isSingleLineTitle(...);
   *** setSingleLineTitle(...);
   *** getSummary(...);
   *** setSummary(...);
   *** getSummaryProvider(...);
   *** setSummaryProvider(...);
   *** getTitle(...);
   *** setTitle(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidgetLayoutResource(...);
   *** setWidgetLayoutResource(...);
   *** callChangeListener(...);
   *** compareTo(...);
   *** findPreferenceInHierarchy(...);
   *** getPersistedBoolean(...);
   *** getPersistedFloat(...);
   *** getPersistedInt(...);
   *** getPersistedLong(...);
   *** getPersistedString(...);
   *** getPersistedStringSet(...);
   *** notifyChanged(...);
   *** notifyDependencyChange(...);
   *** notifyHierarchyChanged(...);
   *** onAttached(...);
   *** onAttachedToHierarchy(...);
   *** onAttachedToHierarchy(...);
   *** onBindViewHolder(...);
   *** onClick(...);
   *** onDependencyChanged(...);
   *** onDetached(...);
   *** onGetDefaultValue(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onParentChanged(...);
   *** onPrepareForRemoval(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSetInitialValue(...);
   *** onSetInitialValue(...);
   *** peekExtras(...);
   *** performClick(...);
   *** performClick(...);
   *** persistBoolean(...);
   *** persistFloat(...);
   *** persistInt(...);
   *** persistLong(...);
   *** persistString(...);
   *** persistStringSet(...);
   *** restoreHierarchyState(...);
   *** saveHierarchyState(...);
   *** setDefaultValue(...);
   *** setIcon(...);
   *** setSummary(...);
   *** setTitle(...);
   *** setViewId(...);
   *** shouldDisableDependents(...);
   *** shouldPersist(...);
}

-keep class androidx.preference.PreferenceCategory
-keepclassmembers class androidx.preference.PreferenceCategory {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.preference.PreferenceDataStore
-keepclassmembers class androidx.preference.PreferenceDataStore {
   <init>(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getString(...);
   *** getStringSet(...);
   *** putBoolean(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putString(...);
   *** putStringSet(...);
}

-keep class androidx.preference.PreferenceDataStore
-keepclassmembers class androidx.preference.PreferenceDataStore {
}

-keep class androidx.preference.PreferenceDialogFragment
-keepclassmembers class androidx.preference.PreferenceDialogFragment {
   <init>(...);
   *** getPreference(...);
   *** needInputMethod(...);
   *** onBindDialogView(...);
   *** onClick(...);
   *** onCreateDialogView(...);
   *** onDialogClosed(...);
   *** onPrepareDialogBuilder(...);
}

-keep class androidx.preference.PreferenceDialogFragment
-keepclassmembers class androidx.preference.PreferenceDialogFragment {
   *** onDialogClosed(...);
}

-keep class androidx.preference.PreferenceDialogFragmentCompat
-keepclassmembers class androidx.preference.PreferenceDialogFragmentCompat {
   <init>(...);
   *** getPreference(...);
   *** needInputMethod(...);
   *** onBindDialogView(...);
   *** onClick(...);
   *** onCreateDialogView(...);
   *** onDialogClosed(...);
   *** onPrepareDialogBuilder(...);
}

-keep class androidx.preference.PreferenceDialogFragmentCompat
-keepclassmembers class androidx.preference.PreferenceDialogFragmentCompat {
   *** onDialogClosed(...);
}

-keep class androidx.preference.PreferenceFragment$OnPreferenceDisplayDialogCallback
-keepclassmembers class androidx.preference.PreferenceFragment$OnPreferenceDisplayDialogCallback {
}

-keep class androidx.preference.PreferenceFragment$OnPreferenceStartFragmentCallback
-keepclassmembers class androidx.preference.PreferenceFragment$OnPreferenceStartFragmentCallback {
}

-keep class androidx.preference.PreferenceFragment$OnPreferenceStartScreenCallback
-keepclassmembers class androidx.preference.PreferenceFragment$OnPreferenceStartScreenCallback {
}

-keep class androidx.preference.PreferenceFragment
-keepclassmembers class androidx.preference.PreferenceFragment {
   <init>(...);
   *** getCallbackFragment(...);
   *** getListView(...);
   *** getPreferenceManager(...);
   *** getPreferenceScreen(...);
   *** setPreferenceScreen(...);
   *** addPreferencesFromResource(...);
   *** findPreference(...);
   *** onBindPreferences(...);
   *** onCreateAdapter(...);
   *** onCreateLayoutManager(...);
   *** onCreatePreferences(...);
   *** onCreateRecyclerView(...);
   *** onDisplayPreferenceDialog(...);
   *** onNavigateToScreen(...);
   *** onPreferenceTreeClick(...);
   *** onUnbindPreferences(...);
   *** scrollToPreference(...);
   *** scrollToPreference(...);
   *** setDivider(...);
   *** setDividerHeight(...);
   *** setPreferencesFromResource(...);
}

-keep class androidx.preference.PreferenceFragment
-keepclassmembers class androidx.preference.PreferenceFragment {
   *** onCreatePreferences(...);
}

-keep class androidx.preference.PreferenceFragmentCompat$OnPreferenceDisplayDialogCallback
-keepclassmembers class androidx.preference.PreferenceFragmentCompat$OnPreferenceDisplayDialogCallback {
}

-keep class androidx.preference.PreferenceFragmentCompat$OnPreferenceStartFragmentCallback
-keepclassmembers class androidx.preference.PreferenceFragmentCompat$OnPreferenceStartFragmentCallback {
}

-keep class androidx.preference.PreferenceFragmentCompat$OnPreferenceStartScreenCallback
-keepclassmembers class androidx.preference.PreferenceFragmentCompat$OnPreferenceStartScreenCallback {
}

-keep class androidx.preference.PreferenceFragmentCompat
-keepclassmembers class androidx.preference.PreferenceFragmentCompat {
   <init>(...);
   *** getCallbackFragment(...);
   *** getListView(...);
   *** getPreferenceManager(...);
   *** getPreferenceScreen(...);
   *** setPreferenceScreen(...);
   *** addPreferencesFromResource(...);
   *** findPreference(...);
   *** onBindPreferences(...);
   *** onCreateAdapter(...);
   *** onCreateLayoutManager(...);
   *** onCreatePreferences(...);
   *** onCreateRecyclerView(...);
   *** onDisplayPreferenceDialog(...);
   *** onNavigateToScreen(...);
   *** onPreferenceTreeClick(...);
   *** onUnbindPreferences(...);
   *** scrollToPreference(...);
   *** scrollToPreference(...);
   *** setDivider(...);
   *** setDividerHeight(...);
   *** setPreferencesFromResource(...);
}

-keep class androidx.preference.PreferenceFragmentCompat
-keepclassmembers class androidx.preference.PreferenceFragmentCompat {
   *** onCreatePreferences(...);
}

-keep class androidx.preference.PreferenceGroup$OnExpandButtonClickListener
-keepclassmembers class androidx.preference.PreferenceGroup$OnExpandButtonClickListener {
}

-keep class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor {
}

-keep class androidx.preference.PreferenceGroup$PreferencePositionCallback
-keepclassmembers class androidx.preference.PreferenceGroup$PreferencePositionCallback {
}

-keep class androidx.preference.PreferenceGroup
-keepclassmembers class androidx.preference.PreferenceGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialExpandedChildrenCount(...);
   *** setInitialExpandedChildrenCount(...);
   *** isAttached(...);
   *** isOnSameScreenAsChildren(...);
   *** getOnExpandButtonClickListener(...);
   *** setOnExpandButtonClickListener(...);
   *** isOrderingAsAdded(...);
   *** setOrderingAsAdded(...);
   *** getPreferenceCount(...);
   *** addItemFromInflater(...);
   *** addPreference(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** findPreference(...);
   *** getPreference(...);
   *** onPrepareAddPreference(...);
   *** removeAll(...);
   *** removePreference(...);
   *** removePreferenceRecursively(...);
}

-keep class androidx.preference.PreferenceGroup
-keepclassmembers class androidx.preference.PreferenceGroup {
}

-keep class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener
-keepclassmembers class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$OnNavigateToScreenListener
-keepclassmembers class androidx.preference.PreferenceManager$OnNavigateToScreenListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener
-keepclassmembers class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$PreferenceComparisonCallback
-keepclassmembers class androidx.preference.PreferenceManager$PreferenceComparisonCallback {
   <init>(...);
   *** arePreferenceContentsTheSame(...);
   *** arePreferenceItemsTheSame(...);
}

-keep class androidx.preference.PreferenceManager$PreferenceComparisonCallback
-keepclassmembers class androidx.preference.PreferenceManager$PreferenceComparisonCallback {
   *** arePreferenceContentsTheSame(...);
   *** arePreferenceItemsTheSame(...);
}

-keep class androidx.preference.PreferenceManager$SimplePreferenceComparisonCallback
-keepclassmembers class androidx.preference.PreferenceManager$SimplePreferenceComparisonCallback {
   <init>(...);
   *** arePreferenceContentsTheSame(...);
   *** arePreferenceItemsTheSame(...);
}

-keep class androidx.preference.PreferenceManager
-keepclassmembers class androidx.preference.PreferenceManager {
   <init>(...);
   *** getContext(...);
   *** isStorageDefault(...);
   *** isStorageDeviceProtected(...);
   *** getOnDisplayPreferenceDialogListener(...);
   *** setOnDisplayPreferenceDialogListener(...);
   *** getOnNavigateToScreenListener(...);
   *** setOnNavigateToScreenListener(...);
   *** getOnPreferenceTreeClickListener(...);
   *** setOnPreferenceTreeClickListener(...);
   *** getPreferenceDataStore(...);
   *** setPreferenceDataStore(...);
   *** getPreferenceScreen(...);
   *** getSharedPreferences(...);
   *** getSharedPreferencesMode(...);
   *** setSharedPreferencesMode(...);
   *** getSharedPreferencesName(...);
   *** setSharedPreferencesName(...);
   *** createPreferenceScreen(...);
   *** findPreference(...);
   *** getDefaultSharedPreferences(...);
   *** getPreferenceComparisonCallback(...);
   *** inflateFromResource(...);
   *** setDefaultValues(...);
   *** setDefaultValues(...);
   *** setPreferenceComparisonCallback(...);
   *** setPreferences(...);
   *** setStorageDefault(...);
   *** setStorageDeviceProtected(...);
   *** showDialog(...);
}

-keep class androidx.preference.PreferenceRecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.preference.PreferenceRecyclerViewAccessibilityDelegate {
   <init>(...);
}

-keep class androidx.preference.PreferenceScreen
-keepclassmembers class androidx.preference.PreferenceScreen {
   <init>(...);
   *** setShouldUseGeneratedIds(...);
   *** shouldUseGeneratedIds(...);
}

-keep class androidx.preference.PreferenceViewHolder
-keepclassmembers class androidx.preference.PreferenceViewHolder {
   *** isDividerAllowedAbove(...);
   *** setDividerAllowedAbove(...);
   *** isDividerAllowedBelow(...);
   *** setDividerAllowedBelow(...);
   *** createInstanceForTests(...);
   *** findViewById(...);
}

-keep class androidx.preference.SeekBarPreference
-keepclassmembers class androidx.preference.SeekBarPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isAdjustable(...);
   *** setAdjustable(...);
   *** getMax(...);
   *** setMax(...);
   *** getMin(...);
   *** setMin(...);
   *** getSeekBarIncrement(...);
   *** setSeekBarIncrement(...);
   *** getShowSeekBarValue(...);
   *** setShowSeekBarValue(...);
   *** getUpdatesContinuously(...);
   *** setUpdatesContinuously(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.preference.SwitchPreference
-keepclassmembers class androidx.preference.SwitchPreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSwitchTextOff(...);
   *** setSwitchTextOff(...);
   *** getSwitchTextOn(...);
   *** setSwitchTextOn(...);
   *** setSwitchTextOff(...);
   *** setSwitchTextOn(...);
}

-keep class androidx.preference.SwitchPreferenceCompat
-keepclassmembers class androidx.preference.SwitchPreferenceCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSwitchTextOff(...);
   *** setSwitchTextOff(...);
   *** getSwitchTextOn(...);
   *** setSwitchTextOn(...);
   *** setSwitchTextOff(...);
   *** setSwitchTextOn(...);
}

-keep class androidx.preference.TwoStatePreference
-keepclassmembers class androidx.preference.TwoStatePreference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getDisableDependentsState(...);
   *** setDisableDependentsState(...);
   *** getSummaryOff(...);
   *** setSummaryOff(...);
   *** getSummaryOn(...);
   *** setSummaryOn(...);
   *** setSummaryOff(...);
   *** setSummaryOn(...);
   *** syncSummaryView(...);
   *** syncSummaryView(...);
}

-keep class androidx.preference.TwoStatePreference
-keepclassmembers class androidx.preference.TwoStatePreference {
}

-keep class androidx.preference.UnPressableLinearLayout
-keepclassmembers class androidx.preference.UnPressableLinearLayout {
   <init>(...);
   <init>(...);
}

-keep class androidx.preference.internal.PreferenceImageView
-keepclassmembers class androidx.preference.internal.PreferenceImageView {
   <init>(...);
   <init>(...);
   <init>(...);
}

# ACW for Xamarin.AndroidX.Print
-keep class androidx.print.PrintHelper$OnPrintFinishCallback
-keepclassmembers class androidx.print.PrintHelper$OnPrintFinishCallback {
}

-keep class androidx.print.PrintHelper
-keepclassmembers class androidx.print.PrintHelper {
   <init>(...);
   *** getColorMode(...);
   *** setColorMode(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScaleMode(...);
   *** setScaleMode(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** systemSupportsPrint(...);
}

# ACW for Xamarin.AndroidX.ProfileInstaller.ProfileInstaller
-keep class androidx.profileinstaller.DeviceProfileWriter
-keepclassmembers class androidx.profileinstaller.DeviceProfileWriter {
   <init>(...);
   *** deviceAllowsProfileInstallerAotWrites(...);
   *** read(...);
   *** transcodeIfNeeded(...);
   *** write(...);
}

-keep class androidx.profileinstaller.ProfileInstaller$DiagnosticCode
-keepclassmembers class androidx.profileinstaller.ProfileInstaller$DiagnosticCode {
}

-keep class androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback
-keepclassmembers class androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback {
}

-keep class androidx.profileinstaller.ProfileInstaller$ResultCode
-keepclassmembers class androidx.profileinstaller.ProfileInstaller$ResultCode {
}

-keep class androidx.profileinstaller.ProfileInstaller
-keepclassmembers class androidx.profileinstaller.ProfileInstaller {
   *** writeProfile(...);
   *** writeProfile(...);
}

-keep class androidx.profileinstaller.ProfileInstallerInitializer$Result
-keepclassmembers class androidx.profileinstaller.ProfileInstallerInitializer$Result {
   <init>(...);
}

-keep class androidx.profileinstaller.ProfileInstallerInitializer
-keepclassmembers class androidx.profileinstaller.ProfileInstallerInitializer {
   <init>(...);
   *** create(...);
   *** dependencies(...);
}

-keep class androidx.profileinstaller.ProfileInstallReceiver
-keepclassmembers class androidx.profileinstaller.ProfileInstallReceiver {
   <init>(...);
   *** onReceive(...);
}

-keep class androidx.profileinstaller.ProfileVerifier$CompilationStatus$ResultCode
-keepclassmembers class androidx.profileinstaller.ProfileVerifier$CompilationStatus$ResultCode {
}

-keep class androidx.profileinstaller.ProfileVerifier$CompilationStatus
-keepclassmembers class androidx.profileinstaller.ProfileVerifier$CompilationStatus {
   *** hasProfileEnqueuedForCompilation(...);
   *** isCompiledWithProfile(...);
   *** getProfileInstallResultCode(...);
}

-keep class androidx.profileinstaller.ProfileVerifier
-keepclassmembers class androidx.profileinstaller.ProfileVerifier {
   *** getCompilationStatusAsync(...);
   *** writeProfileVerification(...);
}

-keep class androidx.profileinstaller.ProfileVersion
-keepclassmembers class androidx.profileinstaller.ProfileVersion {
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.GridLayoutManager$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanGroupIndexCacheEnabled(...);
   *** setSpanGroupIndexCacheEnabled(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanGroupIndexCache(...);
   *** invalidateSpanIndexCache(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** isUsingSpansToEstimateScrollbarDimensions(...);
   *** setUsingSpansToEstimateScrollbarDimensions(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class androidx.recyclerview.widget.ItemTouchUIUtil
-keepclassmembers class androidx.recyclerview.widget.ItemTouchUIUtil {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.LinearSmoothScroller
-keepclassmembers class androidx.recyclerview.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class androidx.recyclerview.widget.LinearSnapHelper
-keepclassmembers class androidx.recyclerview.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class androidx.recyclerview.widget.PagerSnapHelper
-keepclassmembers class androidx.recyclerview.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** findRelativeAdapterPositionIn(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getStateRestorationPolicy(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** setStateRestorationPolicy(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
   *** onStateRestorationPolicyChanged(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getBindingAdapterPosition(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getAdapterPosition(...);
   *** getBindingAdapter(...);
   *** getBindingAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** addRecyclerListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** nestedScrollBy(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** removeRecyclerListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

# ACW for Xamarin.AndroidX.ResourceInspection.Annotation
-keep class androidx.resourceinspection.annotation.AppCompatShadowedAttributes
-keepclassmembers class androidx.resourceinspection.annotation.AppCompatShadowedAttributes {
}

-keep class androidx.resourceinspection.annotation.Attribute$IntMap
-keepclassmembers class androidx.resourceinspection.annotation.Attribute$IntMap {
}

-keep class androidx.resourceinspection.annotation.Attribute
-keepclassmembers class androidx.resourceinspection.annotation.Attribute {
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistryOwner
-keepclassmembers class androidx.savedstate.SavedStateRegistryOwner {
}

-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** getSavedStateProvider(...);
   *** performSave(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** close(...);
   *** closePane(...);
   *** onLayout(...);
   *** open(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.Startup.StartupRuntime
-keep class androidx.startup.AppInitializer
-keepclassmembers class androidx.startup.AppInitializer {
   *** getInstance(...);
   *** initializeComponent(...);
   *** isEagerlyInitialized(...);
}

-keep class androidx.startup.Initializer
-keepclassmembers class androidx.startup.Initializer {
}

-keep class androidx.startup.InitializationProvider
-keepclassmembers class androidx.startup.InitializationProvider {
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class androidx.startup.StartupException
-keepclassmembers class androidx.startup.StartupException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.startup.StartupLogger
-keepclassmembers class androidx.startup.StartupLogger {
   *** e(...);
   *** i(...);
   *** w(...);
}

# ACW for Xamarin.AndroidX.SwipeRefreshLayout
-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** hasNestedScrollingParent(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setLegacyRequestDisallowInterceptTouchEventEnabled(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

# ACW for Xamarin.AndroidX.Tracing.Tracing
-keep class androidx.tracing.Trace
-keepclassmembers class androidx.tracing.Trace {
   *** isEnabled(...);
   *** beginAsyncSection(...);
   *** beginSection(...);
   *** endAsyncSection(...);
   *** endSection(...);
   *** forceEnableAppTracing(...);
   *** setCounter(...);
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat {
   *** isRunning(...);
   *** getOpacity(...);
   *** clearAnimationCallbacks(...);
   *** clearAnimationCallbacks(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
   *** unregisterAnimationCallback(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat {
   *** loadInterpolator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat {
   *** loadAnimator(...);
   *** loadAnimator(...);
   *** loadAnimator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.ArgbEvaluator
-keepclassmembers class androidx.vectordrawable.graphics.drawable.ArgbEvaluator {
   <init>(...);
   *** getInstance(...);
   *** evaluate(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

-keep class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat {
   <init>(...);
   <init>(...);
   *** getInterpolation(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** getVersionedParcelable(...);
   *** getVersionedParcelableList(...);
   *** putVersionedParcelable(...);
   *** putVersionedParcelableList(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   <init>(...);
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readCharSequence(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readMap(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeCharSequence(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeMap(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.AndroidX.ViewPager2
-keep class androidx.viewpager2.widget.CompositePageTransformer
-keepclassmembers class androidx.viewpager2.widget.CompositePageTransformer {
   <init>(...);
   *** addTransformer(...);
   *** removeTransformer(...);
   *** transformPage(...);
}

-keep class androidx.viewpager2.widget.MarginPageTransformer
-keepclassmembers class androidx.viewpager2.widget.MarginPageTransformer {
   <init>(...);
   *** transformPage(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit {
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
}

-keep class androidx.viewpager2.widget.ViewPager2$Orientation
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$Orientation {
}

-keep class androidx.viewpager2.widget.ViewPager2$PageTransformer
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$PageTransformer {
}

-keep class androidx.viewpager2.widget.ViewPager2$ScrollState
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$ScrollState {
}

-keep class androidx.viewpager2.widget.ViewPager2
-keepclassmembers class androidx.viewpager2.widget.ViewPager2 {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getItemDecorationCount(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScrollState(...);
   *** isUserInputEnabled(...);
   *** setUserInputEnabled(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** beginFakeDrag(...);
   *** dispatchRestoreInstanceState(...);
   *** endFakeDrag(...);
   *** fakeDragBy(...);
   *** getItemDecorationAt(...);
   *** invalidateItemDecorations(...);
   *** onLayout(...);
   *** registerOnPageChangeCallback(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** requestTransform(...);
   *** setCurrentItem(...);
   *** setPageTransformer(...);
   *** unregisterOnPageChangeCallback(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsItem(...);
   *** createFragment(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewRecycled(...);
   *** restoreState(...);
   *** saveState(...);
   *** onBindViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   *** createFragment(...);
   *** getItemCount(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentViewHolder
-keepclassmembers class androidx.viewpager2.adapter.FragmentViewHolder {
}

-keep class androidx.viewpager2.adapter.StatefulAdapter
-keepclassmembers class androidx.viewpager2.adapter.StatefulAdapter {
}

# ACW for Xamarin.CommunityToolkit
# ACW for Xamarin.Essentials
# ACW for Xamarin.Forms.Platform.Android
# ACW for Xamarin.Forms.Platform
# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.resources.TextAppearance
-keepclassmembers class com.google.android.material.resources.TextAppearance {
   <init>(...);
   *** getFallbackFont(...);
   *** getFont(...);
   *** getFontAsync(...);
   *** getFontAsync(...);
   *** updateDrawState(...);
   *** updateMeasureState(...);
   *** updateTextPaintMeasureState(...);
}

-keep class com.google.android.material.resources.TextAppearanceFontCallback
-keepclassmembers class com.google.android.material.resources.TextAppearanceFontCallback {
   <init>(...);
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class com.google.android.material.resources.TextAppearanceFontCallback
-keepclassmembers class com.google.android.material.resources.TextAppearanceFontCallback {
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   <init>(...);
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior {
   <init>(...);
   <init>(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** getExpandedOffset(...);
   *** setExpandedOffset(...);
   *** isFitToContents(...);
   *** setFitToContents(...);
   *** isGestureInsetBottomIgnored(...);
   *** setGestureInsetBottomIgnored(...);
   *** getHalfExpandedRatio(...);
   *** setHalfExpandedRatio(...);
   *** isHideable(...);
   *** setHideable(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getPeekHeight(...);
   *** setPeekHeight(...);
   *** getSaveFlags(...);
   *** setSaveFlags(...);
   *** getSkipCollapsed(...);
   *** setSkipCollapsed(...);
   *** getState(...);
   *** setState(...);
   *** addBottomSheetCallback(...);
   *** disableShapeAnimations(...);
   *** from(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** removeBottomSheetCallback(...);
   *** setBottomSheetCallback(...);
   *** setPeekHeight(...);
   *** setUpdateImportantForAccessibilityOnSiblings(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetDialog
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBehavior(...);
   *** getDismissWithAnimation(...);
   *** setDismissWithAnimation(...);
   *** getEdgeToEdgeEnabled(...);
   *** setLightStatusBar(...);
}

-keep class com.google.android.material.badge.BadgeDrawable$SavedState
-keepclassmembers class com.google.android.material.badge.BadgeDrawable$SavedState {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.material.badge.BadgeDrawable
-keepclassmembers class com.google.android.material.badge.BadgeDrawable {
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBadgeGravity(...);
   *** setBadgeGravity(...);
   *** getBadgeTextColor(...);
   *** setBadgeTextColor(...);
   *** getContentDescription(...);
   *** getCustomBadgeParent(...);
   *** hasNumber(...);
   *** getHorizontalOffset(...);
   *** setHorizontalOffset(...);
   *** getMaxCharacterCount(...);
   *** setMaxCharacterCount(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getOpacity(...);
   *** getVerticalOffset(...);
   *** setVerticalOffset(...);
   *** clearNumber(...);
   *** create(...);
   *** createFromResource(...);
   *** draw(...);
   *** getSavedState(...);
   *** onStateChange(...);
   *** onTextSizeChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setContentDescriptionExceedsMaxBadgeNumberStringResource(...);
   *** setContentDescriptionNumberless(...);
   *** setContentDescriptionQuantityStringsResource(...);
   *** setVisible(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getMenuView(...);
   *** getPresenter(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** createNavigationBarMenuView(...);
   *** getBadge(...);
   *** getOrCreateBadge(...);
   *** inflateMenu(...);
   *** removeBadge(...);
   *** setItemIconSizeRes(...);
   *** setItemOnTouchListener(...);
   *** setOnItemReselectedListener(...);
   *** setOnItemSelectedListener(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** setEnabled(...);
   <init>(...);
   *** getBadge(...);
   *** getItemBackgroundResId(...);
   *** getItemData(...);
   *** getItemDefaultMarginResId(...);
   *** getItemLayoutResId(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** getSelectedItemPosition(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** createNavigationBarItemView(...);
   *** findItemView(...);
   *** getBadge(...);
   *** initialize(...);
   *** isShifting(...);
   *** setItemOnTouchListener(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.navigation.NavigationBarPresenter
-keepclassmembers class com.google.android.material.navigation.NavigationBarPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setCallback(...);
   *** setMenuView(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
}

-keep class com.google.android.material.tabs.TabLayout$TabView
-keepclassmembers class com.google.android.material.tabs.TabLayout$TabView {
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class com.google.android.material.tabs.TabLayout$OnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$OnTabSelectedListener {
}

-keep class com.google.android.material.tabs.TabLayout$Tab
-keepclassmembers class com.google.android.material.tabs.TabLayout$Tab {
   <init>(...);
   *** getBadge(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getId(...);
   *** isSelected(...);
   *** getOrCreateBadge(...);
   *** getPosition(...);
   *** getTabLabelVisibility(...);
   *** getTag(...);
   *** getText(...);
   *** removeBadge(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setId(...);
   *** setTabLabelVisibility(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class com.google.android.material.tabs.TabLayout
-keepclassmembers class com.google.android.material.tabs.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** getTabIndicatorAnimationMode(...);
   *** setTabIndicatorAnimationMode(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** selectTab(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate
-keepclassmembers class com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate {
}

-keep class com.google.android.material.internal.TextDrawableHelper
-keepclassmembers class com.google.android.material.internal.TextDrawableHelper {
   <init>(...);
   *** getTextAppearance(...);
   *** getTextPaint(...);
   *** isTextWidthDirty(...);
   *** setTextWidthDirty(...);
   *** getTextWidth(...);
   *** setDelegate(...);
   *** setTextAppearance(...);
   *** updateTextPaintDrawState(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationItemView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationItemView {
   <init>(...);
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationMenuView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationMenuView {
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LayoutParams
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout
-keepclassmembers class com.google.android.material.appbar.AppBarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLifted(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getLiftOnScrollTargetViewId(...);
   *** setLiftOnScrollTargetViewId(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getStatusBarForeground(...);
   *** setStatusBarForeground(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addOnOffsetChangedListener(...);
   *** getBehavior(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftable(...);
   *** setLifted(...);
   *** setStatusBarForegroundColor(...);
   *** setStatusBarForegroundResource(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** layoutChild(...);
   *** shouldHeaderOverlapScrollingChild(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
}

-keep class com.google.android.material.appbar.ViewOffsetBehavior
-keepclassmembers class com.google.android.material.appbar.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
   *** onMeasureChild(...);
}

# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.Jetbrains.Annotations
-keep class org.jetbrains.annotations.ApiStatus$AvailableSince
-keepclassmembers class org.jetbrains.annotations.ApiStatus$AvailableSince {
}

-keep class org.jetbrains.annotations.ApiStatus$Experimental
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Experimental {
}

-keep class org.jetbrains.annotations.ApiStatus$Internal
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Internal {
}

-keep class org.jetbrains.annotations.ApiStatus$NonExtendable
-keepclassmembers class org.jetbrains.annotations.ApiStatus$NonExtendable {
}

-keep class org.jetbrains.annotations.ApiStatus$Obsolete
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Obsolete {
}

-keep class org.jetbrains.annotations.ApiStatus$OverrideOnly
-keepclassmembers class org.jetbrains.annotations.ApiStatus$OverrideOnly {
}

-keep class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval
-keepclassmembers class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval {
}

-keep class org.jetbrains.annotations.ApiStatus
-keepclassmembers class org.jetbrains.annotations.ApiStatus {
}

-keep class org.jetbrains.annotations.Async$Execute
-keepclassmembers class org.jetbrains.annotations.Async$Execute {
}

-keep class org.jetbrains.annotations.Async$Schedule
-keepclassmembers class org.jetbrains.annotations.Async$Schedule {
}

-keep class org.jetbrains.annotations.Async
-keepclassmembers class org.jetbrains.annotations.Async {
}

-keep class org.jetbrains.annotations.Debug$Renderer
-keepclassmembers class org.jetbrains.annotations.Debug$Renderer {
}

-keep class org.jetbrains.annotations.Debug
-keepclassmembers class org.jetbrains.annotations.Debug {
}

-keep class org.jetbrains.annotations.Blocking
-keepclassmembers class org.jetbrains.annotations.Blocking {
}

-keep class org.jetbrains.annotations.BlockingExecutor
-keepclassmembers class org.jetbrains.annotations.BlockingExecutor {
}

-keep class org.jetbrains.annotations.CheckReturnValue
-keepclassmembers class org.jetbrains.annotations.CheckReturnValue {
}

-keep class org.jetbrains.annotations.Contract
-keepclassmembers class org.jetbrains.annotations.Contract {
}

-keep class org.jetbrains.annotations.MustBeInvokedByOverriders
-keepclassmembers class org.jetbrains.annotations.MustBeInvokedByOverriders {
}

-keep class org.jetbrains.annotations.Nls$Capitalization
-keepclassmembers class org.jetbrains.annotations.Nls$Capitalization {
   *** valueOf(...);
   *** values(...);
}

-keep class org.jetbrains.annotations.Nls
-keepclassmembers class org.jetbrains.annotations.Nls {
}

-keep class org.jetbrains.annotations.NonBlocking
-keepclassmembers class org.jetbrains.annotations.NonBlocking {
}

-keep class org.jetbrains.annotations.NonBlockingExecutor
-keepclassmembers class org.jetbrains.annotations.NonBlockingExecutor {
}

-keep class org.jetbrains.annotations.NonNls
-keepclassmembers class org.jetbrains.annotations.NonNls {
}

-keep class org.jetbrains.annotations.NotNull
-keepclassmembers class org.jetbrains.annotations.NotNull {
}

-keep class org.jetbrains.annotations.Nullable
-keepclassmembers class org.jetbrains.annotations.Nullable {
}

-keep class org.jetbrains.annotations.PropertyKey
-keepclassmembers class org.jetbrains.annotations.PropertyKey {
}

-keep class org.jetbrains.annotations.Range
-keepclassmembers class org.jetbrains.annotations.Range {
}

-keep class org.jetbrains.annotations.TestOnly
-keepclassmembers class org.jetbrains.annotations.TestOnly {
}

-keep class org.jetbrains.annotations.UnknownNullability
-keepclassmembers class org.jetbrains.annotations.UnknownNullability {
}

-keep class org.jetbrains.annotations.Unmodifiable
-keepclassmembers class org.jetbrains.annotations.Unmodifiable {
}

-keep class org.jetbrains.annotations.UnmodifiableView
-keepclassmembers class org.jetbrains.annotations.UnmodifiableView {
}

-keep class org.jetbrains.annotations.VisibleForTesting
-keepclassmembers class org.jetbrains.annotations.VisibleForTesting {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Identifier
-keepclassmembers class org.intellij.lang.annotations.Identifier {
}

-keep class org.intellij.lang.annotations.Language
-keepclassmembers class org.intellij.lang.annotations.Language {
}

-keep class org.intellij.lang.annotations.MagicConstant
-keepclassmembers class org.intellij.lang.annotations.MagicConstant {
}

-keep class org.intellij.lang.annotations.Pattern
-keepclassmembers class org.intellij.lang.annotations.Pattern {
}

-keep class org.intellij.lang.annotations.PrintFormat
-keepclassmembers class org.intellij.lang.annotations.PrintFormat {
}

-keep class org.intellij.lang.annotations.RegExp
-keepclassmembers class org.intellij.lang.annotations.RegExp {
}

-keep class org.intellij.lang.annotations.Subst
-keepclassmembers class org.intellij.lang.annotations.Subst {
}

-keep class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation {
}

-keep class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis {
}

-keep class org.intellij.lang.annotations.JdkConstants$CalendarMonth
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CalendarMonth {
}

-keep class org.intellij.lang.annotations.JdkConstants$CursorType
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CursorType {
}

-keep class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$FontStyle
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FontStyle {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$InputEventMask
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$InputEventMask {
}

-keep class org.intellij.lang.annotations.JdkConstants$ListSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$ListSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$PatternFlags
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$PatternFlags {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabPlacement
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabPlacement {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition {
}

-keep class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants
-keepclassmembers class org.intellij.lang.annotations.JdkConstants {
}

# ACW for Xamarin.Kotlin.StdLib
-keep class kotlin.ArrayIntrinsicsKt
-keepclassmembers class kotlin.ArrayIntrinsicsKt {
}

-keep class kotlin.CharCodeJVMKt
-keepclassmembers class kotlin.CharCodeJVMKt {
}

-keep class kotlin.CharCodeKt
-keepclassmembers class kotlin.CharCodeKt {
}

-keep class kotlin.CompareToKt
-keepclassmembers class kotlin.CompareToKt {
}

-keep class kotlin.DeepRecursiveFunction
-keepclassmembers class kotlin.DeepRecursiveFunction {
   <init>(...);
}

-keep class kotlin.DeepRecursiveKt
-keepclassmembers class kotlin.DeepRecursiveKt {
   *** invoke(...);
}

-keep class kotlin.DeepRecursiveScope
-keepclassmembers class kotlin.DeepRecursiveScope {
   <init>(...);
   *** callRecursive(...);
   *** callRecursive(...);
   *** invoke(...);
}

-keep class kotlin.DeepRecursiveScope
-keepclassmembers class kotlin.DeepRecursiveScope {
   *** callRecursive(...);
   *** callRecursive(...);
}

-keep class kotlin.DeprecationLevel
-keepclassmembers class kotlin.DeprecationLevel {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.ExceptionsKt
-keepclassmembers class kotlin.ExceptionsKt {
   *** addSuppressed(...);
   *** getStackTrace(...);
   *** getSuppressedExceptions(...);
   *** stackTraceToString(...);
}

-keep class kotlin.HashCodeKt
-keepclassmembers class kotlin.HashCodeKt {
}

-keep class kotlin.BuilderInference
-keepclassmembers class kotlin.BuilderInference {
}

-keep class kotlin.ContextFunctionTypeParams
-keepclassmembers class kotlin.ContextFunctionTypeParams {
}

-keep class kotlin.Deprecated
-keepclassmembers class kotlin.Deprecated {
}

-keep class kotlin.DeprecatedSinceKotlin
-keepclassmembers class kotlin.DeprecatedSinceKotlin {
}

-keep class kotlin.DslMarker
-keepclassmembers class kotlin.DslMarker {
}

-keep class kotlin.ExperimentalMultiplatform
-keepclassmembers class kotlin.ExperimentalMultiplatform {
}

-keep class kotlin.ExperimentalStdlibApi
-keepclassmembers class kotlin.ExperimentalStdlibApi {
}

-keep class kotlin.ExperimentalSubclassOptIn
-keepclassmembers class kotlin.ExperimentalSubclassOptIn {
}

-keep class kotlin.ExperimentalUnsignedTypes
-keepclassmembers class kotlin.ExperimentalUnsignedTypes {
}

-keep class kotlin.ExtensionFunctionType
-keepclassmembers class kotlin.ExtensionFunctionType {
}

-keep class kotlin.Function
-keepclassmembers class kotlin.Function {
}

-keep class kotlin.Lazy
-keepclassmembers class kotlin.Lazy {
}

-keep class kotlin.Metadata$DefaultImpls
-keepclassmembers class kotlin.Metadata$DefaultImpls {
}

-keep class kotlin.Metadata
-keepclassmembers class kotlin.Metadata {
}

-keep class kotlin.OptIn
-keepclassmembers class kotlin.OptIn {
}

-keep class kotlin.OptionalExpectation
-keepclassmembers class kotlin.OptionalExpectation {
}

-keep class kotlin.OverloadResolutionByLambdaReturnType
-keepclassmembers class kotlin.OverloadResolutionByLambdaReturnType {
}

-keep class kotlin.ParameterName
-keepclassmembers class kotlin.ParameterName {
}

-keep class kotlin.PublishedApi
-keepclassmembers class kotlin.PublishedApi {
}

-keep class kotlin.ReplaceWith
-keepclassmembers class kotlin.ReplaceWith {
}

-keep class kotlin.RequiresOptIn$Level
-keepclassmembers class kotlin.RequiresOptIn$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.RequiresOptIn
-keepclassmembers class kotlin.RequiresOptIn {
}

-keep class kotlin.SinceKotlin
-keepclassmembers class kotlin.SinceKotlin {
}

-keep class kotlin.SubclassOptInRequired
-keepclassmembers class kotlin.SubclassOptInRequired {
}

-keep class kotlin.Suppress
-keepclassmembers class kotlin.Suppress {
}

-keep class kotlin.UnsafeVariance
-keepclassmembers class kotlin.UnsafeVariance {
}

-keep class kotlin.KotlinNullPointerException
-keepclassmembers class kotlin.KotlinNullPointerException {
   <init>(...);
   <init>(...);
}

-keep class kotlin.KotlinVersion
-keepclassmembers class kotlin.KotlinVersion {
   <init>(...);
   <init>(...);
   *** getMajor(...);
   *** getMinor(...);
   *** getPatch(...);
   *** compareTo(...);
   *** isAtLeast(...);
   *** isAtLeast(...);
}

-keep class kotlin.LateinitKt
-keepclassmembers class kotlin.LateinitKt {
}

-keep class kotlin.LazyKt
-keepclassmembers class kotlin.LazyKt {
   *** lazyOf(...);
   *** lazy(...);
   *** lazy(...);
   *** lazy(...);
}

-keep class kotlin.LazyThreadSafetyMode
-keepclassmembers class kotlin.LazyThreadSafetyMode {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.NotImplementedError
-keepclassmembers class kotlin.NotImplementedError {
   <init>(...);
   <init>(...);
}

-keep class kotlin.NoWhenBranchMatchedException
-keepclassmembers class kotlin.NoWhenBranchMatchedException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.NumbersKt
-keepclassmembers class kotlin.NumbersKt {
   *** rotateLeft(...);
   *** rotateLeft(...);
   *** rotateRight(...);
   *** rotateRight(...);
}

-keep class kotlin.Pair
-keepclassmembers class kotlin.Pair {
   <init>(...);
   *** getFirst(...);
   *** getSecond(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.PreconditionsKt
-keepclassmembers class kotlin.PreconditionsKt {
}

-keep class kotlin.PropertyReferenceDelegatesKt
-keepclassmembers class kotlin.PropertyReferenceDelegatesKt {
}

-keep class kotlin.Result
-keepclassmembers class kotlin.Result {
}

-keep class kotlin.ResultKt
-keepclassmembers class kotlin.ResultKt {
}

-keep class kotlin.StandardKt
-keepclassmembers class kotlin.StandardKt {
}

-keep class kotlin.SuspendKt
-keepclassmembers class kotlin.SuspendKt {
}

-keep class kotlin.ThrowsKt
-keepclassmembers class kotlin.ThrowsKt {
}

-keep class kotlin.Triple
-keepclassmembers class kotlin.Triple {
   <init>(...);
   *** getFirst(...);
   *** getSecond(...);
   *** getThird(...);
   *** component1(...);
   *** component2(...);
   *** component3(...);
   *** copy(...);
}

-keep class kotlin.TuplesKt
-keepclassmembers class kotlin.TuplesKt {
   *** to(...);
   *** toList(...);
   *** toList(...);
}

-keep class kotlin.TypeAliasesKt
-keepclassmembers class kotlin.TypeAliasesKt {
}

-keep class kotlin.TypeCastException
-keepclassmembers class kotlin.TypeCastException {
   <init>(...);
   <init>(...);
}

-keep class kotlin.UByte
-keepclassmembers class kotlin.UByte {
   *** compareTo(...);
}

-keep class kotlin.UByteArray
-keepclassmembers class kotlin.UByteArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-7apg3OU(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-7apg3OU(...);
   *** contains-7apg3OU(...);
   *** containsAll(...);
   *** get-w2LRezQ(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-VurrAj0(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.UByteArrayKt
-keepclassmembers class kotlin.UByteArrayKt {
}

-keep class kotlin.UByteKt
-keepclassmembers class kotlin.UByteKt {
}

-keep class kotlin.UInt
-keepclassmembers class kotlin.UInt {
   *** compareTo(...);
}

-keep class kotlin.UIntArray
-keepclassmembers class kotlin.UIntArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-WZ4Q5Ns(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-WZ4Q5Ns(...);
   *** contains-WZ4Q5Ns(...);
   *** containsAll(...);
   *** get-pVg5ArA(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-VXSXFK8(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.UIntArrayKt
-keepclassmembers class kotlin.UIntArrayKt {
}

-keep class kotlin.UIntKt
-keepclassmembers class kotlin.UIntKt {
}

-keep class kotlin.ULong
-keepclassmembers class kotlin.ULong {
   *** compareTo(...);
}

-keep class kotlin.ULongArray
-keepclassmembers class kotlin.ULongArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-VKZWuLQ(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-VKZWuLQ(...);
   *** contains-VKZWuLQ(...);
   *** containsAll(...);
   *** get-s-VKNKU(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-k8EXiF4(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.ULongArrayKt
-keepclassmembers class kotlin.ULongArrayKt {
}

-keep class kotlin.ULongKt
-keepclassmembers class kotlin.ULongKt {
}

-keep class kotlin.UninitializedPropertyAccessException
-keepclassmembers class kotlin.UninitializedPropertyAccessException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.Unit
-keepclassmembers class kotlin.Unit {
}

-keep class kotlin.UnsignedKt
-keepclassmembers class kotlin.UnsignedKt {
}

-keep class kotlin.UNumbersKt
-keepclassmembers class kotlin.UNumbersKt {
}

-keep class kotlin.UShort
-keepclassmembers class kotlin.UShort {
   *** compareTo(...);
}

-keep class kotlin.UShortArray
-keepclassmembers class kotlin.UShortArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-xj2QHRw(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-xj2QHRw(...);
   *** contains-xj2QHRw(...);
   *** containsAll(...);
   *** get-Mh2AYeg(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-01HTLdE(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.UShortArrayKt
-keepclassmembers class kotlin.UShortArrayKt {
}

-keep class kotlin.UShortKt
-keepclassmembers class kotlin.UShortKt {
}

-keep class kotlin.time.AbstractDoubleTimeSource
-keepclassmembers class kotlin.time.AbstractDoubleTimeSource {
   <init>(...);
   *** getUnit(...);
   *** markNow(...);
   *** read(...);
}

-keep class kotlin.time.AbstractDoubleTimeSource
-keepclassmembers class kotlin.time.AbstractDoubleTimeSource {
   *** read(...);
}

-keep class kotlin.time.AbstractLongTimeSource
-keepclassmembers class kotlin.time.AbstractLongTimeSource {
   <init>(...);
   *** getUnit(...);
   *** markNow(...);
   *** read(...);
}

-keep class kotlin.time.AbstractLongTimeSource
-keepclassmembers class kotlin.time.AbstractLongTimeSource {
   *** read(...);
}

-keep class kotlin.time.Duration$Companion
-keepclassmembers class kotlin.time.Duration$Companion {
   <init>(...);
   *** getINFINITE-UwyO8pc(...);
   *** getZERO-UwyO8pc(...);
   *** convert(...);
   *** days-UwyO8pc(...);
   *** days-UwyO8pc(...);
   *** days-UwyO8pc(...);
   *** hours-UwyO8pc(...);
   *** hours-UwyO8pc(...);
   *** hours-UwyO8pc(...);
   *** microseconds-UwyO8pc(...);
   *** microseconds-UwyO8pc(...);
   *** microseconds-UwyO8pc(...);
   *** milliseconds-UwyO8pc(...);
   *** milliseconds-UwyO8pc(...);
   *** milliseconds-UwyO8pc(...);
   *** minutes-UwyO8pc(...);
   *** minutes-UwyO8pc(...);
   *** minutes-UwyO8pc(...);
   *** nanoseconds-UwyO8pc(...);
   *** nanoseconds-UwyO8pc(...);
   *** nanoseconds-UwyO8pc(...);
   *** parse-UwyO8pc(...);
   *** parseIsoString-UwyO8pc(...);
   *** parseIsoStringOrNull-FghU774(...);
   *** parseOrNull-FghU774(...);
   *** seconds-UwyO8pc(...);
   *** seconds-UwyO8pc(...);
   *** seconds-UwyO8pc(...);
}

-keep class kotlin.time.Duration
-keepclassmembers class kotlin.time.Duration {
   *** compareTo-LRDsOJo(...);
   *** compareTo-LRDsOJo(...);
   *** div-LRDsOJo(...);
   *** div-UwyO8pc(...);
   *** div-UwyO8pc(...);
   *** getAbsoluteValue-UwyO8pc(...);
   *** minus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
   *** times-UwyO8pc(...);
   *** times-UwyO8pc(...);
   *** unaryMinus-UwyO8pc(...);
   *** compareTo(...);
}

-keep class kotlin.time.DurationJvmKt
-keepclassmembers class kotlin.time.DurationJvmKt {
}

-keep class kotlin.time.DurationKt
-keepclassmembers class kotlin.time.DurationKt {
   *** getDays(...);
   *** getDays(...);
   *** getDays(...);
   *** getHours(...);
   *** getHours(...);
   *** getHours(...);
   *** getMicroseconds(...);
   *** getMicroseconds(...);
   *** getMicroseconds(...);
   *** getMilliseconds(...);
   *** getMilliseconds(...);
   *** getMilliseconds(...);
   *** getMinutes(...);
   *** getMinutes(...);
   *** getMinutes(...);
   *** getNanoseconds(...);
   *** getNanoseconds(...);
   *** getNanoseconds(...);
   *** getSeconds(...);
   *** getSeconds(...);
   *** getSeconds(...);
   *** toDuration(...);
   *** toDuration(...);
   *** toDuration(...);
}

-keep class kotlin.time.DurationUnit
-keepclassmembers class kotlin.time.DurationUnit {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.time.DurationUnitKt
-keepclassmembers class kotlin.time.DurationUnitKt {
   *** durationUnitByIsoChar(...);
   *** durationUnitByShortName(...);
   *** shortName(...);
   *** convertDurationUnit(...);
   *** convertDurationUnit(...);
   *** convertDurationUnitOverflow(...);
   *** toDurationUnit(...);
   *** toTimeUnit(...);
}

-keep class kotlin.time.ComparableTimeMark$DefaultImpls
-keepclassmembers class kotlin.time.ComparableTimeMark$DefaultImpls {
   *** compareTo(...);
   *** hasNotPassedNow(...);
   *** hasPassedNow(...);
   *** minus-LRDsOJo(...);
}

-keep class kotlin.time.ComparableTimeMark
-keepclassmembers class kotlin.time.ComparableTimeMark {
}

-keep class kotlin.time.ExperimentalTime
-keepclassmembers class kotlin.time.ExperimentalTime {
}

-keep class kotlin.time.TimeMark$DefaultImpls
-keepclassmembers class kotlin.time.TimeMark$DefaultImpls {
   *** hasNotPassedNow(...);
   *** hasPassedNow(...);
   *** minus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
}

-keep class kotlin.time.TimeMark
-keepclassmembers class kotlin.time.TimeMark {
}

-keep class kotlin.time.TimeSource$Monotonic$ValueTimeMark
-keepclassmembers class kotlin.time.TimeSource$Monotonic$ValueTimeMark {
   *** hasNotPassedNow(...);
   *** hasPassedNow(...);
   *** compareTo(...);
   *** compareTo-6eNON_k(...);
   *** minus-6eNON_k(...);
   *** minus-LRDsOJo(...);
   *** minus-LRDsOJo(...);
   *** minus-UwyO8pc(...);
   *** minus-UwyO8pc(...);
   *** plus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
}

-keep class kotlin.time.TimeSource$Monotonic
-keepclassmembers class kotlin.time.TimeSource$Monotonic {
   *** markNow-z9LOYto(...);
}

-keep class kotlin.time.TimeSource$WithComparableMarks
-keepclassmembers class kotlin.time.TimeSource$WithComparableMarks {
}

-keep class kotlin.time.TimeSource
-keepclassmembers class kotlin.time.TimeSource {
}

-keep class kotlin.time.LongSaturatedMathKt
-keepclassmembers class kotlin.time.LongSaturatedMathKt {
}

-keep class kotlin.time.MeasureTimeKt
-keepclassmembers class kotlin.time.MeasureTimeKt {
   *** measureTime(...);
   *** measureTime(...);
   *** measureTime(...);
   *** measureTimedValue(...);
   *** measureTimedValue(...);
   *** measureTimedValue(...);
}

-keep class kotlin.time.MonoTimeSourceKt
-keepclassmembers class kotlin.time.MonoTimeSourceKt {
}

-keep class kotlin.time.TestTimeSource
-keepclassmembers class kotlin.time.TestTimeSource {
   <init>(...);
   *** plusAssign-LRDsOJo(...);
   *** read(...);
}

-keep class kotlin.time.TimedValue
-keepclassmembers class kotlin.time.TimedValue {
   <init>(...);
   *** getDuration-UwyO8pc(...);
   *** getValue(...);
   *** component1(...);
   *** component2-UwyO8pc(...);
   *** copy-RFiDyg4(...);
}

-keep class kotlin.time.jdk8.DurationConversionsJDK8Kt
-keepclassmembers class kotlin.time.jdk8.DurationConversionsJDK8Kt {
}

-keep class kotlin.text.CharCategory$Companion
-keepclassmembers class kotlin.text.CharCategory$Companion {
   <init>(...);
   *** valueOf(...);
}

-keep class kotlin.text.CharCategory
-keepclassmembers class kotlin.text.CharCategory {
   *** getCode(...);
   *** getValue(...);
   *** contains(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.CharDirectionality$Companion
-keepclassmembers class kotlin.text.CharDirectionality$Companion {
   <init>(...);
   *** valueOf(...);
}

-keep class kotlin.text.CharDirectionality
-keepclassmembers class kotlin.text.CharDirectionality {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.Charsets
-keepclassmembers class kotlin.text.Charsets {
   *** UTF32(...);
   *** UTF32_BE(...);
   *** UTF32_LE(...);
}

-keep class kotlin.text.CharsetsKt
-keepclassmembers class kotlin.text.CharsetsKt {
}

-keep class kotlin.text.CharsKt
-keepclassmembers class kotlin.text.CharsKt {
   *** digitToChar(...);
   *** digitToChar(...);
   *** digitToInt(...);
   *** digitToInt(...);
   *** digitToIntOrNull(...);
   *** digitToIntOrNull(...);
   *** equals(...);
   *** isSurrogate(...);
   *** titlecase(...);
   *** checkRadix(...);
   *** digitOf(...);
   *** getCategory(...);
   *** getDirectionality(...);
   *** isWhitespace(...);
   *** lowercase(...);
   *** titlecase(...);
   *** uppercase(...);
}

-keep class kotlin.text.MatchGroupCollection
-keepclassmembers class kotlin.text.MatchGroupCollection {
}

-keep class kotlin.text.MatchNamedGroupCollection
-keepclassmembers class kotlin.text.MatchNamedGroupCollection {
}

-keep class kotlin.text.MatchResult$DefaultImpls
-keepclassmembers class kotlin.text.MatchResult$DefaultImpls {
   *** getDestructured(...);
}

-keep class kotlin.text.MatchResult$Destructured
-keepclassmembers class kotlin.text.MatchResult$Destructured {
   *** getMatch(...);
   *** toList(...);
}

-keep class kotlin.text.MatchResult
-keepclassmembers class kotlin.text.MatchResult {
}

-keep class kotlin.text.MatchGroup
-keepclassmembers class kotlin.text.MatchGroup {
   <init>(...);
   *** getRange(...);
   *** getValue(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.text.Regex$Companion
-keepclassmembers class kotlin.text.Regex$Companion {
   <init>(...);
   *** escape(...);
   *** escapeReplacement(...);
   *** fromLiteral(...);
}

-keep class kotlin.text.Regex
-keepclassmembers class kotlin.text.Regex {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOptions(...);
   *** getPattern(...);
   *** containsMatchIn(...);
   *** find(...);
   *** findAll(...);
   *** matchAt(...);
   *** matchEntire(...);
   *** matches(...);
   *** matchesAt(...);
   *** replace(...);
   *** replace(...);
   *** replaceFirst(...);
   *** split(...);
   *** splitToSequence(...);
   *** toPattern(...);
}

-keep class kotlin.text.RegexKt
-keepclassmembers class kotlin.text.RegexKt {
}

-keep class kotlin.text.RegexOption
-keepclassmembers class kotlin.text.RegexOption {
   *** getMask(...);
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.StringsKt
-keepclassmembers class kotlin.text.StringsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** asSequence(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** chunked(...);
   *** chunked(...);
   *** chunkedSequence(...);
   *** chunkedSequence(...);
   *** count(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** last(...);
   *** last(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** none(...);
   *** none(...);
   *** partition(...);
   *** partition(...);
   *** random(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** reversed(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** take(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toHashSet(...);
   *** toList(...);
   *** toMutableList(...);
   *** toSet(...);
   *** windowed(...);
   *** windowed(...);
   *** windowedSequence(...);
   *** windowedSequence(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** toSortedSet(...);
   *** commonPrefixWith(...);
   *** commonSuffixWith(...);
   *** contains(...);
   *** contains(...);
   *** contentEqualsIgnoreCaseImpl(...);
   *** contentEqualsImpl(...);
   *** endsWith(...);
   *** endsWith(...);
   *** findAnyOf(...);
   *** findLastAnyOf(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** hasSurrogatePairAt(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfAny(...);
   *** indexOfAny(...);
   *** iterator(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOfAny(...);
   *** lastIndexOfAny(...);
   *** lineSequence(...);
   *** lines(...);
   *** padEnd(...);
   *** padStart(...);
   *** regionMatchesImpl(...);
   *** removePrefix(...);
   *** removeRange(...);
   *** removeRange(...);
   *** removeSuffix(...);
   *** removeSurrounding(...);
   *** removeSurrounding(...);
   *** replaceAfter(...);
   *** replaceAfter(...);
   *** replaceAfterLast(...);
   *** replaceAfterLast(...);
   *** replaceBefore(...);
   *** replaceBefore(...);
   *** replaceBeforeLast(...);
   *** replaceBeforeLast(...);
   *** replaceRange(...);
   *** replaceRange(...);
   *** requireNonNegativeLimit(...);
   *** split(...);
   *** split(...);
   *** splitToSequence(...);
   *** splitToSequence(...);
   *** startsWith(...);
   *** startsWith(...);
   *** startsWith(...);
   *** subSequence(...);
   *** substring(...);
   *** substring(...);
   *** substringAfter(...);
   *** substringAfter(...);
   *** substringAfterLast(...);
   *** substringAfterLast(...);
   *** substringBefore(...);
   *** substringBefore(...);
   *** substringBeforeLast(...);
   *** substringBeforeLast(...);
   *** toBooleanStrict(...);
   *** toBooleanStrictOrNull(...);
   *** trim(...);
   *** trim(...);
   *** trim(...);
   *** trimEnd(...);
   *** trimEnd(...);
   *** trimEnd(...);
   *** trimStart(...);
   *** trimStart(...);
   *** trimStart(...);
   *** capitalize(...);
   *** capitalize(...);
   *** compareTo(...);
   *** concatToString(...);
   *** concatToString(...);
   *** contentEquals(...);
   *** contentEquals(...);
   *** decapitalize(...);
   *** decapitalize(...);
   *** decodeToString(...);
   *** decodeToString(...);
   *** encodeToByteArray(...);
   *** encodeToByteArray(...);
   *** endsWith(...);
   *** equals(...);
   *** getCASE_INSENSITIVE_ORDER(...);
   *** isBlank(...);
   *** regionMatches(...);
   *** regionMatches(...);
   *** repeat(...);
   *** replace(...);
   *** replace(...);
   *** replaceFirst(...);
   *** replaceFirst(...);
   *** split(...);
   *** startsWith(...);
   *** startsWith(...);
   *** toCharArray(...);
   *** numberFormatError(...);
   *** toByteOrNull(...);
   *** toByteOrNull(...);
   *** toIntOrNull(...);
   *** toIntOrNull(...);
   *** toLongOrNull(...);
   *** toLongOrNull(...);
   *** toShortOrNull(...);
   *** toShortOrNull(...);
   *** toBigDecimalOrNull(...);
   *** toBigDecimalOrNull(...);
   *** toBigIntegerOrNull(...);
   *** toBigIntegerOrNull(...);
   *** toDoubleOrNull(...);
   *** toFloatOrNull(...);
   *** append(...);
   *** append(...);
   *** appendln(...);
   *** appendln(...);
   *** clear(...);
   *** prependIndent(...);
   *** replaceIndent(...);
   *** replaceIndentByMargin(...);
   *** trimIndent(...);
   *** trimMargin(...);
   *** append(...);
   *** appendElement(...);
   *** appendRange(...);
}

-keep class kotlin.text.TypeAliasesKt
-keepclassmembers class kotlin.text.TypeAliasesKt {
}

-keep class kotlin.text.Typography
-keepclassmembers class kotlin.text.Typography {
}

-keep class kotlin.text.UStringsKt
-keepclassmembers class kotlin.text.UStringsKt {
   *** toString-JSWoG40(...);
   *** toString-LxnNnR4(...);
   *** toString-V7xB4Y4(...);
   *** toString-olVBNx4(...);
   *** toUByte(...);
   *** toUByte(...);
   *** toUByteOrNull(...);
   *** toUByteOrNull(...);
   *** toUInt(...);
   *** toUInt(...);
   *** toUIntOrNull(...);
   *** toUIntOrNull(...);
   *** toULong(...);
   *** toULong(...);
   *** toULongOrNull(...);
   *** toULongOrNull(...);
   *** toUShort(...);
   *** toUShort(...);
   *** toUShortOrNull(...);
   *** toUShortOrNull(...);
}

-keep class kotlin.text._OneToManyTitlecaseMappingsKt
-keepclassmembers class kotlin.text._OneToManyTitlecaseMappingsKt {
}

-keep class kotlin.text.jdk8.RegexExtensionsJDK8Kt
-keepclassmembers class kotlin.text.jdk8.RegexExtensionsJDK8Kt {
   *** get(...);
}

-keep class kotlin.system.ProcessKt
-keepclassmembers class kotlin.system.ProcessKt {
}

-keep class kotlin.system.TimingKt
-keepclassmembers class kotlin.system.TimingKt {
   *** measureNanoTime(...);
   *** measureTimeMillis(...);
}

-keep class kotlin.streams.jdk8.StreamsKt
-keepclassmembers class kotlin.streams.jdk8.StreamsKt {
}

-keep class kotlin.sequences.Sequence
-keepclassmembers class kotlin.sequences.Sequence {
}

-keep class kotlin.sequences.SequenceScope
-keepclassmembers class kotlin.sequences.SequenceScope {
   *** yield(...);
   *** yieldAll(...);
   *** yieldAll(...);
   *** yieldAll(...);
}

-keep class kotlin.sequences.SequenceScope
-keepclassmembers class kotlin.sequences.SequenceScope {
   *** yield(...);
   *** yieldAll(...);
}

-keep class kotlin.sequences.SequencesKt
-keepclassmembers class kotlin.sequences.SequencesKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** chunked(...);
   *** chunked(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinctBy(...);
   *** drop(...);
   *** dropWhile(...);
   *** elementAt(...);
   *** elementAtOrElse(...);
   *** elementAtOrNull(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapIndexedIterable(...);
   *** flatMapIndexedSequence(...);
   *** flatMapIterable(...);
   *** flatMapIterableTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** joinTo(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** partition(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** requireNoNulls(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** sorted(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toHashSet(...);
   *** toList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** windowed(...);
   *** windowed(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** asSequence(...);
   *** constrainOnce(...);
   *** emptySequence(...);
   *** flatMapIndexed(...);
   *** flatten(...);
   *** flattenSequenceOfIterable(...);
   *** generateSequence(...);
   *** generateSequence(...);
   *** generateSequence(...);
   *** ifEmpty(...);
   *** sequenceOf(...);
   *** shuffled(...);
   *** shuffled(...);
   *** unzip(...);
   *** iterator(...);
   *** sequence(...);
}

-keep class kotlin.sequences.USequencesKt
-keepclassmembers class kotlin.sequences.USequencesKt {
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
}

-keep class kotlin.reflect.KAnnotatedElement
-keepclassmembers class kotlin.reflect.KAnnotatedElement {
}

-keep class kotlin.reflect.KCallable$DefaultImpls
-keepclassmembers class kotlin.reflect.KCallable$DefaultImpls {
}

-keep class kotlin.reflect.KCallable
-keepclassmembers class kotlin.reflect.KCallable {
}

-keep class kotlin.reflect.KClass$DefaultImpls
-keepclassmembers class kotlin.reflect.KClass$DefaultImpls {
}

-keep class kotlin.reflect.KClass
-keepclassmembers class kotlin.reflect.KClass {
}

-keep class kotlin.reflect.KClassifier
-keepclassmembers class kotlin.reflect.KClassifier {
}

-keep class kotlin.reflect.KDeclarationContainer
-keepclassmembers class kotlin.reflect.KDeclarationContainer {
}

-keep class kotlin.reflect.KFunction$DefaultImpls
-keepclassmembers class kotlin.reflect.KFunction$DefaultImpls {
}

-keep class kotlin.reflect.KFunction
-keepclassmembers class kotlin.reflect.KFunction {
}

-keep class kotlin.reflect.KMutableProperty$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty$Setter {
}

-keep class kotlin.reflect.KMutableProperty
-keepclassmembers class kotlin.reflect.KMutableProperty {
}

-keep class kotlin.reflect.KMutableProperty0$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty0$Setter {
}

-keep class kotlin.reflect.KMutableProperty0
-keepclassmembers class kotlin.reflect.KMutableProperty0 {
}

-keep class kotlin.reflect.KMutableProperty1$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty1$Setter {
}

-keep class kotlin.reflect.KMutableProperty1
-keepclassmembers class kotlin.reflect.KMutableProperty1 {
}

-keep class kotlin.reflect.KMutableProperty2$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty2$Setter {
}

-keep class kotlin.reflect.KMutableProperty2
-keepclassmembers class kotlin.reflect.KMutableProperty2 {
}

-keep class kotlin.reflect.KParameter$DefaultImpls
-keepclassmembers class kotlin.reflect.KParameter$DefaultImpls {
}

-keep class kotlin.reflect.KParameter$Kind
-keepclassmembers class kotlin.reflect.KParameter$Kind {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KParameter
-keepclassmembers class kotlin.reflect.KParameter {
}

-keep class kotlin.reflect.KProperty$Accessor
-keepclassmembers class kotlin.reflect.KProperty$Accessor {
}

-keep class kotlin.reflect.KProperty$DefaultImpls
-keepclassmembers class kotlin.reflect.KProperty$DefaultImpls {
}

-keep class kotlin.reflect.KProperty$Getter
-keepclassmembers class kotlin.reflect.KProperty$Getter {
}

-keep class kotlin.reflect.KProperty
-keepclassmembers class kotlin.reflect.KProperty {
}

-keep class kotlin.reflect.KProperty0$Getter
-keepclassmembers class kotlin.reflect.KProperty0$Getter {
}

-keep class kotlin.reflect.KProperty0
-keepclassmembers class kotlin.reflect.KProperty0 {
}

-keep class kotlin.reflect.KProperty1$Getter
-keepclassmembers class kotlin.reflect.KProperty1$Getter {
}

-keep class kotlin.reflect.KProperty1
-keepclassmembers class kotlin.reflect.KProperty1 {
}

-keep class kotlin.reflect.KProperty2$Getter
-keepclassmembers class kotlin.reflect.KProperty2$Getter {
}

-keep class kotlin.reflect.KProperty2
-keepclassmembers class kotlin.reflect.KProperty2 {
}

-keep class kotlin.reflect.KType$DefaultImpls
-keepclassmembers class kotlin.reflect.KType$DefaultImpls {
}

-keep class kotlin.reflect.KType
-keepclassmembers class kotlin.reflect.KType {
}

-keep class kotlin.reflect.KTypeParameter
-keepclassmembers class kotlin.reflect.KTypeParameter {
}

-keep class kotlin.reflect.KClasses
-keepclassmembers class kotlin.reflect.KClasses {
   *** cast(...);
   *** safeCast(...);
}

-keep class kotlin.reflect.KClassesImplKt
-keepclassmembers class kotlin.reflect.KClassesImplKt {
   *** getQualifiedOrSimpleName(...);
}

-keep class kotlin.reflect.KTypeProjection$Companion
-keepclassmembers class kotlin.reflect.KTypeProjection$Companion {
   <init>(...);
   *** contravariant(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KTypeProjection$WhenMappings
-keepclassmembers class kotlin.reflect.KTypeProjection$WhenMappings {
}

-keep class kotlin.reflect.KTypeProjection
-keepclassmembers class kotlin.reflect.KTypeProjection {
   <init>(...);
   *** getType(...);
   *** getVariance(...);
   *** component1(...);
   *** component2(...);
   *** contravariant(...);
   *** copy(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KVariance
-keepclassmembers class kotlin.reflect.KVariance {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KVisibility
-keepclassmembers class kotlin.reflect.KVisibility {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.TypeOfKt
-keepclassmembers class kotlin.reflect.TypeOfKt {
}

-keep class kotlin.reflect.TypesJVMKt$WhenMappings
-keepclassmembers class kotlin.reflect.TypesJVMKt$WhenMappings {
}

-keep class kotlin.reflect.TypesJVMKt
-keepclassmembers class kotlin.reflect.TypesJVMKt {
   *** getJavaType(...);
}

-keep class kotlin.random.PlatformRandomKt
-keepclassmembers class kotlin.random.PlatformRandomKt {
   *** asJavaRandom(...);
   *** asKotlinRandom(...);
}

-keep class kotlin.random.Random$Default
-keepclassmembers class kotlin.random.Random$Default {
   <init>(...);
   *** nextBits(...);
}

-keep class kotlin.random.Random
-keepclassmembers class kotlin.random.Random {
   <init>(...);
   *** nextBits(...);
   *** nextBoolean(...);
   *** nextBytes(...);
   *** nextBytes(...);
   *** nextBytes(...);
   *** nextDouble(...);
   *** nextDouble(...);
   *** nextDouble(...);
   *** nextFloat(...);
   *** nextInt(...);
   *** nextInt(...);
   *** nextInt(...);
   *** nextLong(...);
   *** nextLong(...);
   *** nextLong(...);
}

-keep class kotlin.random.Random
-keepclassmembers class kotlin.random.Random {
   *** nextBits(...);
}

-keep class kotlin.random.RandomKt
-keepclassmembers class kotlin.random.RandomKt {
   *** Random(...);
   *** Random(...);
   *** nextInt(...);
   *** nextLong(...);
}

-keep class kotlin.random.URandomKt
-keepclassmembers class kotlin.random.URandomKt {
   *** nextUBytes(...);
   *** nextUBytes-EVgfTAA(...);
   *** nextUBytes-Wvrt4B4(...);
   *** nextUInt(...);
   *** nextUInt(...);
   *** nextUInt-a8DCA5k(...);
   *** nextUInt-qCasIEU(...);
   *** nextULong(...);
   *** nextULong(...);
   *** nextULong-V1Xi4fY(...);
   *** nextULong-jmpaW-c(...);
}

-keep class kotlin.properties.Delegates
-keepclassmembers class kotlin.properties.Delegates {
   *** notNull(...);
   *** observable(...);
   *** vetoable(...);
}

-keep class kotlin.properties.PropertyDelegateProvider
-keepclassmembers class kotlin.properties.PropertyDelegateProvider {
}

-keep class kotlin.properties.ReadOnlyProperty
-keepclassmembers class kotlin.properties.ReadOnlyProperty {
}

-keep class kotlin.properties.ReadWriteProperty
-keepclassmembers class kotlin.properties.ReadWriteProperty {
}

-keep class kotlin.properties.ObservableProperty
-keepclassmembers class kotlin.properties.ObservableProperty {
   <init>(...);
   *** afterChange(...);
   *** beforeChange(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class kotlin.properties.ObservableProperty
-keepclassmembers class kotlin.properties.ObservableProperty {
}

-keep class kotlin.math.MathKt
-keepclassmembers class kotlin.math.MathKt {
   *** acosh(...);
   *** asinh(...);
   *** atanh(...);
   *** getSign(...);
   *** getSign(...);
   *** log(...);
   *** log(...);
   *** log2(...);
   *** log2(...);
   *** roundToInt(...);
   *** roundToInt(...);
   *** roundToLong(...);
   *** roundToLong(...);
   *** truncate(...);
   *** truncate(...);
}

-keep class kotlin.math.UMathKt
-keepclassmembers class kotlin.math.UMathKt {
}

-keep class kotlin.jvm.JvmDefault
-keepclassmembers class kotlin.jvm.JvmDefault {
}

-keep class kotlin.jvm.JvmDefaultWithCompatibility
-keepclassmembers class kotlin.jvm.JvmDefaultWithCompatibility {
}

-keep class kotlin.jvm.JvmDefaultWithoutCompatibility
-keepclassmembers class kotlin.jvm.JvmDefaultWithoutCompatibility {
}

-keep class kotlin.jvm.JvmField
-keepclassmembers class kotlin.jvm.JvmField {
}

-keep class kotlin.jvm.JvmInline
-keepclassmembers class kotlin.jvm.JvmInline {
}

-keep class kotlin.jvm.JvmMultifileClass
-keepclassmembers class kotlin.jvm.JvmMultifileClass {
}

-keep class kotlin.jvm.JvmName
-keepclassmembers class kotlin.jvm.JvmName {
}

-keep class kotlin.jvm.JvmOverloads
-keepclassmembers class kotlin.jvm.JvmOverloads {
}

-keep class kotlin.jvm.JvmRecord
-keepclassmembers class kotlin.jvm.JvmRecord {
}

-keep class kotlin.jvm.JvmSerializableLambda
-keepclassmembers class kotlin.jvm.JvmSerializableLambda {
}

-keep class kotlin.jvm.JvmStatic
-keepclassmembers class kotlin.jvm.JvmStatic {
}

-keep class kotlin.jvm.JvmSuppressWildcards
-keepclassmembers class kotlin.jvm.JvmSuppressWildcards {
}

-keep class kotlin.jvm.JvmSynthetic
-keepclassmembers class kotlin.jvm.JvmSynthetic {
}

-keep class kotlin.jvm.JvmWildcard
-keepclassmembers class kotlin.jvm.JvmWildcard {
}

-keep class kotlin.jvm.PurelyImplements
-keepclassmembers class kotlin.jvm.PurelyImplements {
}

-keep class kotlin.jvm.Strictfp
-keepclassmembers class kotlin.jvm.Strictfp {
}

-keep class kotlin.jvm.Synchronized
-keepclassmembers class kotlin.jvm.Synchronized {
}

-keep class kotlin.jvm.Throws
-keepclassmembers class kotlin.jvm.Throws {
}

-keep class kotlin.jvm.Transient
-keepclassmembers class kotlin.jvm.Transient {
}

-keep class kotlin.jvm.Volatile
-keepclassmembers class kotlin.jvm.Volatile {
}

-keep class kotlin.jvm.JvmClassMappingKt
-keepclassmembers class kotlin.jvm.JvmClassMappingKt {
   *** getAnnotationClass(...);
   *** getJavaClass(...);
   *** getJavaClass(...);
   *** getJavaObjectType(...);
   *** getJavaPrimitiveType(...);
   *** getKotlinClass(...);
   *** getRuntimeClassOfKClassInstance(...);
}

-keep class kotlin.jvm.KotlinReflectionNotSupportedError
-keepclassmembers class kotlin.jvm.KotlinReflectionNotSupportedError {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.jvm.optionals.OptionalsKt
-keepclassmembers class kotlin.jvm.optionals.OptionalsKt {
   *** asSequence(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getOrNull(...);
   *** toCollection(...);
   *** toList(...);
   *** toSet(...);
}

-keep class kotlin.jvm.jdk8.JvmRepeatableKt
-keepclassmembers class kotlin.jvm.jdk8.JvmRepeatableKt {
}

-keep class kotlin.jvm.internal.AdaptedFunctionReference
-keepclassmembers class kotlin.jvm.internal.AdaptedFunctionReference {
   <init>(...);
   <init>(...);
   *** getArity(...);
   *** getOwner(...);
}

-keep class kotlin.jvm.internal.ArrayIteratorKt
-keepclassmembers class kotlin.jvm.internal.ArrayIteratorKt {
   *** iterator(...);
}

-keep class kotlin.jvm.internal.ArrayIteratorsKt
-keepclassmembers class kotlin.jvm.internal.ArrayIteratorsKt {
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
}

-keep class kotlin.jvm.internal.BooleanSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.BooleanSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.ByteSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.ByteSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.CallableReference
-keepclassmembers class kotlin.jvm.internal.CallableReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnnotations(...);
   *** getBoundReceiver(...);
   *** isAbstract(...);
   *** isFinal(...);
   *** isOpen(...);
   *** isSuspend(...);
   *** getName(...);
   *** getOwner(...);
   *** getParameters(...);
   *** getReflected(...);
   *** getReturnType(...);
   *** getSignature(...);
   *** getTypeParameters(...);
   *** getVisibility(...);
   *** call(...);
   *** callBy(...);
   *** compute(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.CallableReference
-keepclassmembers class kotlin.jvm.internal.CallableReference {
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.CharSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.CharSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.ClassReference$Companion
-keepclassmembers class kotlin.jvm.internal.ClassReference$Companion {
   <init>(...);
   *** getClassQualifiedName(...);
   *** getClassSimpleName(...);
   *** isInstance(...);
}

-keep class kotlin.jvm.internal.ClassReference
-keepclassmembers class kotlin.jvm.internal.ClassReference {
   <init>(...);
   *** getAnnotations(...);
   *** getConstructors(...);
   *** isAbstract(...);
   *** isCompanion(...);
   *** isData(...);
   *** isFinal(...);
   *** isFun(...);
   *** isInner(...);
   *** isOpen(...);
   *** isSealed(...);
   *** isValue(...);
   *** getJClass(...);
   *** getMembers(...);
   *** getNestedClasses(...);
   *** getObjectInstance(...);
   *** getQualifiedName(...);
   *** getSealedSubclasses(...);
   *** getSimpleName(...);
   *** getSupertypes(...);
   *** getTypeParameters(...);
   *** getVisibility(...);
   *** isInstance(...);
}

-keep class kotlin.jvm.internal.CollectionToArray
-keepclassmembers class kotlin.jvm.internal.CollectionToArray {
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.DefaultConstructorMarker
-keepclassmembers class kotlin.jvm.internal.DefaultConstructorMarker {
}

-keep class kotlin.jvm.internal.DoubleSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.DoubleSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.FloatSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.FloatSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.FunctionReference
-keepclassmembers class kotlin.jvm.internal.FunctionReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getArity(...);
   *** isExternal(...);
   *** isInfix(...);
   *** isInline(...);
   *** isOperator(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.FunInterfaceConstructorReference
-keepclassmembers class kotlin.jvm.internal.FunInterfaceConstructorReference {
   <init>(...);
}

-keep class kotlin.jvm.internal.ClassBasedDeclarationContainer
-keepclassmembers class kotlin.jvm.internal.ClassBasedDeclarationContainer {
}

-keep class kotlin.jvm.internal.FunctionAdapter
-keepclassmembers class kotlin.jvm.internal.FunctionAdapter {
}

-keep class kotlin.jvm.internal.FunctionBase
-keepclassmembers class kotlin.jvm.internal.FunctionBase {
}

-keep class kotlin.jvm.internal.KTypeBase
-keepclassmembers class kotlin.jvm.internal.KTypeBase {
}

-keep class kotlin.jvm.internal.InlineMarker
-keepclassmembers class kotlin.jvm.internal.InlineMarker {
   <init>(...);
   *** afterInlineCall(...);
   *** beforeInlineCall(...);
   *** finallyEnd(...);
   *** finallyStart(...);
   *** mark(...);
   *** mark(...);
}

-keep class kotlin.jvm.internal.Intrinsics$Kotlin
-keepclassmembers class kotlin.jvm.internal.Intrinsics$Kotlin {
}

-keep class kotlin.jvm.internal.Intrinsics
-keepclassmembers class kotlin.jvm.internal.Intrinsics {
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** checkExpressionValueIsNotNull(...);
   *** checkFieldIsNotNull(...);
   *** checkFieldIsNotNull(...);
   *** checkHasClass(...);
   *** checkHasClass(...);
   *** checkNotNull(...);
   *** checkNotNull(...);
   *** checkNotNullExpressionValue(...);
   *** checkNotNullParameter(...);
   *** checkParameterIsNotNull(...);
   *** checkReturnedValueIsNotNull(...);
   *** checkReturnedValueIsNotNull(...);
   *** compare(...);
   *** compare(...);
   *** needClassReification(...);
   *** needClassReification(...);
   *** reifiedOperationMarker(...);
   *** reifiedOperationMarker(...);
   *** stringPlus(...);
   *** throwAssert(...);
   *** throwAssert(...);
   *** throwIllegalArgument(...);
   *** throwIllegalArgument(...);
   *** throwIllegalState(...);
   *** throwIllegalState(...);
   *** throwJavaNpe(...);
   *** throwJavaNpe(...);
   *** throwNpe(...);
   *** throwNpe(...);
   *** throwUndefinedForReified(...);
   *** throwUndefinedForReified(...);
   *** throwUninitializedProperty(...);
   *** throwUninitializedPropertyAccessException(...);
}

-keep class kotlin.jvm.internal.IntSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.IntSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.RepeatableContainer
-keepclassmembers class kotlin.jvm.internal.RepeatableContainer {
}

-keep class kotlin.jvm.internal.SerializedIr
-keepclassmembers class kotlin.jvm.internal.SerializedIr {
}

-keep class kotlin.jvm.internal.SourceDebugExtension
-keepclassmembers class kotlin.jvm.internal.SourceDebugExtension {
}

-keep class kotlin.jvm.internal.Lambda
-keepclassmembers class kotlin.jvm.internal.Lambda {
   <init>(...);
   *** getArity(...);
}

-keep class kotlin.jvm.internal.Lambda
-keepclassmembers class kotlin.jvm.internal.Lambda {
}

-keep class kotlin.jvm.internal.LocalVariableReference
-keepclassmembers class kotlin.jvm.internal.LocalVariableReference {
   <init>(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.LocalVariableReferencesKt
-keepclassmembers class kotlin.jvm.internal.LocalVariableReferencesKt {
}

-keep class kotlin.jvm.internal.LongSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.LongSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.MagicApiIntrinsics
-keepclassmembers class kotlin.jvm.internal.MagicApiIntrinsics {
   <init>(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** voidMagicApiCall(...);
   *** voidMagicApiCall(...);
}

-keep class kotlin.jvm.internal.MutableLocalVariableReference
-keepclassmembers class kotlin.jvm.internal.MutableLocalVariableReference {
   <init>(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSetter(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference {
   *** getSetter(...);
   *** getGetter(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference0
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference0 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference0
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference0 {
}

-keep class kotlin.jvm.internal.MutablePropertyReference1
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference1 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference1
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference1 {
}

-keep class kotlin.jvm.internal.MutablePropertyReference2
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference2 {
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference2
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference2 {
}

-keep class kotlin.jvm.internal.PackageReference
-keepclassmembers class kotlin.jvm.internal.PackageReference {
   <init>(...);
   *** getJClass(...);
   *** getMembers(...);
}

-keep class kotlin.jvm.internal.PrimitiveSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.PrimitiveSpreadBuilder {
   <init>(...);
   *** getPosition(...);
   *** setPosition(...);
   *** addSpread(...);
   *** getSize(...);
   *** size(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.PrimitiveSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.PrimitiveSpreadBuilder {
   *** getSize(...);
}

-keep class kotlin.jvm.internal.PropertyReference
-keepclassmembers class kotlin.jvm.internal.PropertyReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** isConst(...);
   *** isLateinit(...);
}

-keep class kotlin.jvm.internal.PropertyReference
-keepclassmembers class kotlin.jvm.internal.PropertyReference {
   *** getGetter(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.PropertyReference0
-keepclassmembers class kotlin.jvm.internal.PropertyReference0 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference0
-keepclassmembers class kotlin.jvm.internal.PropertyReference0 {
}

-keep class kotlin.jvm.internal.PropertyReference1
-keepclassmembers class kotlin.jvm.internal.PropertyReference1 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference1
-keepclassmembers class kotlin.jvm.internal.PropertyReference1 {
}

-keep class kotlin.jvm.internal.PropertyReference2
-keepclassmembers class kotlin.jvm.internal.PropertyReference2 {
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference2
-keepclassmembers class kotlin.jvm.internal.PropertyReference2 {
}

-keep class kotlin.jvm.internal.Ref$BooleanRef
-keepclassmembers class kotlin.jvm.internal.Ref$BooleanRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ByteRef
-keepclassmembers class kotlin.jvm.internal.Ref$ByteRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$CharRef
-keepclassmembers class kotlin.jvm.internal.Ref$CharRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$DoubleRef
-keepclassmembers class kotlin.jvm.internal.Ref$DoubleRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$FloatRef
-keepclassmembers class kotlin.jvm.internal.Ref$FloatRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$IntRef
-keepclassmembers class kotlin.jvm.internal.Ref$IntRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$LongRef
-keepclassmembers class kotlin.jvm.internal.Ref$LongRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ObjectRef
-keepclassmembers class kotlin.jvm.internal.Ref$ObjectRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ShortRef
-keepclassmembers class kotlin.jvm.internal.Ref$ShortRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref
-keepclassmembers class kotlin.jvm.internal.Ref {
}

-keep class kotlin.jvm.internal.Reflection
-keepclassmembers class kotlin.jvm.internal.Reflection {
   <init>(...);
   *** createKotlinClass(...);
   *** createKotlinClass(...);
   *** function(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClasses(...);
   *** getOrCreateKotlinPackage(...);
   *** getOrCreateKotlinPackage(...);
   *** mutableCollectionType(...);
   *** mutableProperty0(...);
   *** mutableProperty1(...);
   *** mutableProperty2(...);
   *** nothingType(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** platformType(...);
   *** property0(...);
   *** property1(...);
   *** property2(...);
   *** renderLambdaToString(...);
   *** renderLambdaToString(...);
   *** setUpperBounds(...);
   *** setUpperBounds(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeParameter(...);
}

-keep class kotlin.jvm.internal.ReflectionFactory
-keepclassmembers class kotlin.jvm.internal.ReflectionFactory {
   <init>(...);
   *** createKotlinClass(...);
   *** createKotlinClass(...);
   *** function(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinPackage(...);
   *** mutableCollectionType(...);
   *** mutableProperty0(...);
   *** mutableProperty1(...);
   *** mutableProperty2(...);
   *** nothingType(...);
   *** platformType(...);
   *** property0(...);
   *** property1(...);
   *** property2(...);
   *** renderLambdaToString(...);
   *** renderLambdaToString(...);
   *** setUpperBounds(...);
   *** typeOf(...);
   *** typeParameter(...);
}

-keep class kotlin.jvm.internal.ShortSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.ShortSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.SpreadBuilder
-keepclassmembers class kotlin.jvm.internal.SpreadBuilder {
   <init>(...);
   *** add(...);
   *** addSpread(...);
   *** size(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.TypeIntrinsics
-keepclassmembers class kotlin.jvm.internal.TypeIntrinsics {
   <init>(...);
   *** asMutableCollection(...);
   *** asMutableCollection(...);
   *** asMutableIterable(...);
   *** asMutableIterable(...);
   *** asMutableIterator(...);
   *** asMutableIterator(...);
   *** asMutableList(...);
   *** asMutableList(...);
   *** asMutableListIterator(...);
   *** asMutableListIterator(...);
   *** asMutableMap(...);
   *** asMutableMap(...);
   *** asMutableMapEntry(...);
   *** asMutableMapEntry(...);
   *** asMutableSet(...);
   *** asMutableSet(...);
   *** beforeCheckcastToFunctionOfArity(...);
   *** beforeCheckcastToFunctionOfArity(...);
   *** castToCollection(...);
   *** castToIterable(...);
   *** castToIterator(...);
   *** castToList(...);
   *** castToListIterator(...);
   *** castToMap(...);
   *** castToMapEntry(...);
   *** castToSet(...);
   *** getFunctionArity(...);
   *** isFunctionOfArity(...);
   *** isMutableCollection(...);
   *** isMutableIterable(...);
   *** isMutableIterator(...);
   *** isMutableList(...);
   *** isMutableListIterator(...);
   *** isMutableMap(...);
   *** isMutableMapEntry(...);
   *** isMutableSet(...);
   *** throwCce(...);
   *** throwCce(...);
   *** throwCce(...);
}

-keep class kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings {
}

-keep class kotlin.jvm.internal.TypeParameterReference$Companion
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference$Companion {
   <init>(...);
   *** toString(...);
}

-keep class kotlin.jvm.internal.TypeParameterReference
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference {
   <init>(...);
   *** isReified(...);
   *** getName(...);
   *** getUpperBounds(...);
   *** setUpperBounds(...);
   *** getVariance(...);
}

-keep class kotlin.jvm.internal.TypeReference$WhenMappings
-keepclassmembers class kotlin.jvm.internal.TypeReference$WhenMappings {
}

-keep class kotlin.jvm.internal.TypeReference
-keepclassmembers class kotlin.jvm.internal.TypeReference {
   <init>(...);
   <init>(...);
   *** getAnnotations(...);
   *** getArguments(...);
   *** getClassifier(...);
   *** isMarkedNullable(...);
}

-keep class kotlin.jvm.internal.unsafe.MonitorKt
-keepclassmembers class kotlin.jvm.internal.unsafe.MonitorKt {
}

-keep class kotlin.jvm.internal.markers.KMappedMarker
-keepclassmembers class kotlin.jvm.internal.markers.KMappedMarker {
}

-keep class kotlin.jvm.internal.markers.KMutableCollection
-keepclassmembers class kotlin.jvm.internal.markers.KMutableCollection {
}

-keep class kotlin.jvm.internal.markers.KMutableIterable
-keepclassmembers class kotlin.jvm.internal.markers.KMutableIterable {
}

-keep class kotlin.jvm.internal.markers.KMutableIterator
-keepclassmembers class kotlin.jvm.internal.markers.KMutableIterator {
}

-keep class kotlin.jvm.internal.markers.KMutableList
-keepclassmembers class kotlin.jvm.internal.markers.KMutableList {
}

-keep class kotlin.jvm.internal.markers.KMutableListIterator
-keepclassmembers class kotlin.jvm.internal.markers.KMutableListIterator {
}

-keep class kotlin.jvm.internal.markers.KMutableMap$Entry
-keepclassmembers class kotlin.jvm.internal.markers.KMutableMap$Entry {
}

-keep class kotlin.jvm.internal.markers.KMutableMap
-keepclassmembers class kotlin.jvm.internal.markers.KMutableMap {
}

-keep class kotlin.jvm.internal.markers.KMutableSet
-keepclassmembers class kotlin.jvm.internal.markers.KMutableSet {
}

-keep class kotlin.jvm.functions.Function0
-keepclassmembers class kotlin.jvm.functions.Function0 {
}

-keep class kotlin.jvm.functions.Function1
-keepclassmembers class kotlin.jvm.functions.Function1 {
}

-keep class kotlin.jvm.functions.Function10
-keepclassmembers class kotlin.jvm.functions.Function10 {
}

-keep class kotlin.jvm.functions.Function11
-keepclassmembers class kotlin.jvm.functions.Function11 {
}

-keep class kotlin.jvm.functions.Function12
-keepclassmembers class kotlin.jvm.functions.Function12 {
}

-keep class kotlin.jvm.functions.Function13
-keepclassmembers class kotlin.jvm.functions.Function13 {
}

-keep class kotlin.jvm.functions.Function14
-keepclassmembers class kotlin.jvm.functions.Function14 {
}

-keep class kotlin.jvm.functions.Function15
-keepclassmembers class kotlin.jvm.functions.Function15 {
}

-keep class kotlin.jvm.functions.Function16
-keepclassmembers class kotlin.jvm.functions.Function16 {
}

-keep class kotlin.jvm.functions.Function17
-keepclassmembers class kotlin.jvm.functions.Function17 {
}

-keep class kotlin.jvm.functions.Function18
-keepclassmembers class kotlin.jvm.functions.Function18 {
}

-keep class kotlin.jvm.functions.Function19
-keepclassmembers class kotlin.jvm.functions.Function19 {
}

-keep class kotlin.jvm.functions.Function2
-keepclassmembers class kotlin.jvm.functions.Function2 {
}

-keep class kotlin.jvm.functions.Function20
-keepclassmembers class kotlin.jvm.functions.Function20 {
}

-keep class kotlin.jvm.functions.Function21
-keepclassmembers class kotlin.jvm.functions.Function21 {
}

-keep class kotlin.jvm.functions.Function22
-keepclassmembers class kotlin.jvm.functions.Function22 {
}

-keep class kotlin.jvm.functions.Function3
-keepclassmembers class kotlin.jvm.functions.Function3 {
}

-keep class kotlin.jvm.functions.Function4
-keepclassmembers class kotlin.jvm.functions.Function4 {
}

-keep class kotlin.jvm.functions.Function5
-keepclassmembers class kotlin.jvm.functions.Function5 {
}

-keep class kotlin.jvm.functions.Function6
-keepclassmembers class kotlin.jvm.functions.Function6 {
}

-keep class kotlin.jvm.functions.Function7
-keepclassmembers class kotlin.jvm.functions.Function7 {
}

-keep class kotlin.jvm.functions.Function8
-keepclassmembers class kotlin.jvm.functions.Function8 {
}

-keep class kotlin.jvm.functions.Function9
-keepclassmembers class kotlin.jvm.functions.Function9 {
}

-keep class kotlin.jvm.functions.FunctionN
-keepclassmembers class kotlin.jvm.functions.FunctionN {
}

-keep class kotlin.js.ExperimentalJsExport
-keepclassmembers class kotlin.js.ExperimentalJsExport {
}

-keep class kotlin.jdk7.AutoCloseableKt
-keepclassmembers class kotlin.jdk7.AutoCloseableKt {
}

-keep class kotlin.io.AccessDeniedException
-keepclassmembers class kotlin.io.AccessDeniedException {
   <init>(...);
}

-keep class kotlin.io.ByteStreamsKt
-keepclassmembers class kotlin.io.ByteStreamsKt {
   *** copyTo(...);
   *** iterator(...);
   *** readBytes(...);
   *** readBytes(...);
}

-keep class kotlin.io.CloseableKt
-keepclassmembers class kotlin.io.CloseableKt {
}

-keep class kotlin.io.ConsoleKt
-keepclassmembers class kotlin.io.ConsoleKt {
   *** readLine(...);
   *** readln(...);
   *** readlnOrNull(...);
}

-keep class kotlin.io.ConstantsKt
-keepclassmembers class kotlin.io.ConstantsKt {
}

-keep class kotlin.io.ExceptionsKt
-keepclassmembers class kotlin.io.ExceptionsKt {
}

-keep class kotlin.io.FileAlreadyExistsException
-keepclassmembers class kotlin.io.FileAlreadyExistsException {
   <init>(...);
}

-keep class kotlin.io.FilesKt
-keepclassmembers class kotlin.io.FilesKt {
   *** copyRecursively(...);
   *** copyTo(...);
   *** createTempDir(...);
   *** createTempFile(...);
   *** deleteRecursively(...);
   *** endsWith(...);
   *** endsWith(...);
   *** getExtension(...);
   *** getInvariantSeparatorsPath(...);
   *** getNameWithoutExtension(...);
   *** normalize(...);
   *** relativeTo(...);
   *** relativeToOrNull(...);
   *** relativeToOrSelf(...);
   *** resolve(...);
   *** resolve(...);
   *** resolveSibling(...);
   *** resolveSibling(...);
   *** startsWith(...);
   *** startsWith(...);
   *** toRelativeString(...);
   *** walk(...);
   *** walkBottomUp(...);
   *** walkTopDown(...);
   *** appendBytes(...);
   *** appendText(...);
   *** forEachBlock(...);
   *** forEachBlock(...);
   *** forEachLine(...);
   *** readBytes(...);
   *** readLines(...);
   *** readText(...);
   *** useLines(...);
   *** writeBytes(...);
   *** writeText(...);
   *** getRoot(...);
   *** getRootName(...);
   *** isRooted(...);
   *** subPath(...);
   *** toComponents(...);
}

-keep class kotlin.io.FileSystemException
-keepclassmembers class kotlin.io.FileSystemException {
   <init>(...);
   *** getFile(...);
   *** getOther(...);
   *** getReason(...);
}

-keep class kotlin.io.FileTreeWalk
-keepclassmembers class kotlin.io.FileTreeWalk {
   *** iterator(...);
   *** maxDepth(...);
   *** onEnter(...);
   *** onFail(...);
   *** onLeave(...);
}

-keep class kotlin.io.FileWalkDirection
-keepclassmembers class kotlin.io.FileWalkDirection {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.NoSuchFileException
-keepclassmembers class kotlin.io.NoSuchFileException {
   <init>(...);
}

-keep class kotlin.io.OnErrorAction
-keepclassmembers class kotlin.io.OnErrorAction {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.SerializableKt
-keepclassmembers class kotlin.io.SerializableKt {
}

-keep class kotlin.io.TextStreamsKt
-keepclassmembers class kotlin.io.TextStreamsKt {
   *** copyTo(...);
   *** forEachLine(...);
   *** lineSequence(...);
   *** readBytes(...);
   *** readLines(...);
   *** readText(...);
   *** useLines(...);
}

-keep class kotlin.io.path.CopyActionResult
-keepclassmembers class kotlin.io.path.CopyActionResult {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.path.CopyActionContext
-keepclassmembers class kotlin.io.path.CopyActionContext {
}

-keep class kotlin.io.path.ExperimentalPathApi
-keepclassmembers class kotlin.io.path.ExperimentalPathApi {
}

-keep class kotlin.io.path.FileVisitorBuilder
-keepclassmembers class kotlin.io.path.FileVisitorBuilder {
}

-keep class kotlin.io.path.OnErrorResult
-keepclassmembers class kotlin.io.path.OnErrorResult {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.path.PathsKt
-keepclassmembers class kotlin.io.path.PathsKt {
   *** createTempDirectory(...);
   *** createTempFile(...);
   *** fileAttributeViewNotAvailable(...);
   *** fileVisitor(...);
   *** getExtension(...);
   *** getInvariantSeparatorsPathString(...);
   *** getName(...);
   *** getNameWithoutExtension(...);
   *** listDirectoryEntries(...);
   *** relativeTo(...);
   *** relativeToOrNull(...);
   *** relativeToOrSelf(...);
   *** visitFileTree(...);
   *** visitFileTree(...);
   *** walk(...);
   *** copyToRecursively(...);
   *** copyToRecursively(...);
   *** deleteRecursively(...);
   *** appendText(...);
   *** readText(...);
   *** writeText(...);
}

-keep class kotlin.io.path.PathTreeWalkKt
-keepclassmembers class kotlin.io.path.PathTreeWalkKt {
}

-keep class kotlin.io.path.PathWalkOption
-keepclassmembers class kotlin.io.path.PathWalkOption {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.encoding.Base64$Default
-keepclassmembers class kotlin.io.encoding.Base64$Default {
   <init>(...);
   *** getMime(...);
   *** getUrlSafe(...);
}

-keep class kotlin.io.encoding.Base64
-keepclassmembers class kotlin.io.encoding.Base64 {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** decodeIntoByteArray(...);
   *** decodeIntoByteArray(...);
   *** encode(...);
   *** encodeIntoByteArray(...);
   *** encodeToAppendable(...);
   *** encodeToByteArray(...);
}

-keep class kotlin.io.encoding.Base64JVMKt
-keepclassmembers class kotlin.io.encoding.Base64JVMKt {
}

-keep class kotlin.io.encoding.Base64Kt
-keepclassmembers class kotlin.io.encoding.Base64Kt {
}

-keep class kotlin.io.encoding.ExperimentalEncodingApi
-keepclassmembers class kotlin.io.encoding.ExperimentalEncodingApi {
}

-keep class kotlin.io.encoding.StreamEncodingKt
-keepclassmembers class kotlin.io.encoding.StreamEncodingKt {
   *** decodingWith(...);
   *** encodingWith(...);
}

-keep class kotlin.internal.PlatformImplementationsKt
-keepclassmembers class kotlin.internal.PlatformImplementationsKt {
}

-keep class kotlin.internal.ProgressionUtilKt
-keepclassmembers class kotlin.internal.ProgressionUtilKt {
}

-keep class kotlin.internal.UProgressionUtilKt
-keepclassmembers class kotlin.internal.UProgressionUtilKt {
}

-keep class kotlin.experimental.BitwiseOperationsKt
-keepclassmembers class kotlin.experimental.BitwiseOperationsKt {
}

-keep class kotlin.experimental.ExperimentalObjCName
-keepclassmembers class kotlin.experimental.ExperimentalObjCName {
}

-keep class kotlin.experimental.ExperimentalObjCRefinement
-keepclassmembers class kotlin.experimental.ExperimentalObjCRefinement {
}

-keep class kotlin.experimental.ExperimentalTypeInference
-keepclassmembers class kotlin.experimental.ExperimentalTypeInference {
}

-keep class kotlin.enums.EnumEntriesKt
-keepclassmembers class kotlin.enums.EnumEntriesKt {
}

-keep class kotlin.enums.EnumEntries
-keepclassmembers class kotlin.enums.EnumEntries {
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
   <init>(...);
   *** getKey(...);
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
}

-keep class kotlin.coroutines.ContinuationKt
-keepclassmembers class kotlin.coroutines.ContinuationKt {
   *** createCoroutine(...);
   *** createCoroutine(...);
   *** startCoroutine(...);
   *** startCoroutine(...);
}

-keep class kotlin.coroutines.CoroutineContextImplKt
-keepclassmembers class kotlin.coroutines.CoroutineContextImplKt {
   *** getPolymorphicElement(...);
   *** minusPolymorphicKey(...);
}

-keep class kotlin.coroutines.EmptyCoroutineContext
-keepclassmembers class kotlin.coroutines.EmptyCoroutineContext {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.Continuation
-keepclassmembers class kotlin.coroutines.Continuation {
}

-keep class kotlin.coroutines.ContinuationInterceptor$DefaultImpls
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
   *** releaseInterceptedContinuation(...);
}

-keep class kotlin.coroutines.ContinuationInterceptor$Key
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor$Key {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.CoroutineContext$DefaultImpls
-keepclassmembers class kotlin.coroutines.CoroutineContext$DefaultImpls {
   *** plus(...);
}

-keep class kotlin.coroutines.CoroutineContext$Element$DefaultImpls
-keepclassmembers class kotlin.coroutines.CoroutineContext$Element$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.CoroutineContext$Element
-keepclassmembers class kotlin.coroutines.CoroutineContext$Element {
}

-keep class kotlin.coroutines.CoroutineContext$Key
-keepclassmembers class kotlin.coroutines.CoroutineContext$Key {
}

-keep class kotlin.coroutines.CoroutineContext
-keepclassmembers class kotlin.coroutines.CoroutineContext {
}

-keep class kotlin.coroutines.RestrictsSuspension
-keepclassmembers class kotlin.coroutines.RestrictsSuspension {
}

-keep class kotlin.coroutines.jvm.internal.Boxing
-keepclassmembers class kotlin.coroutines.jvm.internal.Boxing {
}

-keep class kotlin.coroutines.jvm.internal.DebugMetadataKt
-keepclassmembers class kotlin.coroutines.jvm.internal.DebugMetadataKt {
}

-keep class kotlin.coroutines.jvm.internal.DebugProbesKt
-keepclassmembers class kotlin.coroutines.jvm.internal.DebugProbesKt {
}

-keep class kotlin.coroutines.jvm.internal.CoroutineStackFrame
-keepclassmembers class kotlin.coroutines.jvm.internal.CoroutineStackFrame {
}

-keep class kotlin.coroutines.jvm.internal.RunSuspendKt
-keepclassmembers class kotlin.coroutines.jvm.internal.RunSuspendKt {
}

-keep class kotlin.coroutines.intrinsics.IntrinsicsKt
-keepclassmembers class kotlin.coroutines.intrinsics.IntrinsicsKt {
   *** getCOROUTINE_SUSPENDED(...);
   *** createCoroutineUnintercepted(...);
   *** createCoroutineUnintercepted(...);
   *** intercepted(...);
}

-keep class kotlin.coroutines.cancellation.CancellationExceptionKt
-keepclassmembers class kotlin.coroutines.cancellation.CancellationExceptionKt {
}

-keep class kotlin.contracts.ContractBuilderKt
-keepclassmembers class kotlin.contracts.ContractBuilderKt {
}

-keep class kotlin.contracts.CallsInPlace
-keepclassmembers class kotlin.contracts.CallsInPlace {
}

-keep class kotlin.contracts.ConditionalEffect
-keepclassmembers class kotlin.contracts.ConditionalEffect {
}

-keep class kotlin.contracts.ContractBuilder$DefaultImpls
-keepclassmembers class kotlin.contracts.ContractBuilder$DefaultImpls {
}

-keep class kotlin.contracts.ContractBuilder
-keepclassmembers class kotlin.contracts.ContractBuilder {
}

-keep class kotlin.contracts.Effect
-keepclassmembers class kotlin.contracts.Effect {
}

-keep class kotlin.contracts.ExperimentalContracts
-keepclassmembers class kotlin.contracts.ExperimentalContracts {
}

-keep class kotlin.contracts.InvocationKind
-keepclassmembers class kotlin.contracts.InvocationKind {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.contracts.Returns
-keepclassmembers class kotlin.contracts.Returns {
}

-keep class kotlin.contracts.ReturnsNotNull
-keepclassmembers class kotlin.contracts.ReturnsNotNull {
}

-keep class kotlin.contracts.SimpleEffect
-keepclassmembers class kotlin.contracts.SimpleEffect {
}

-keep class kotlin.concurrent.LocksKt
-keepclassmembers class kotlin.concurrent.LocksKt {
}

-keep class kotlin.concurrent.ThreadsKt
-keepclassmembers class kotlin.concurrent.ThreadsKt {
   *** thread(...);
}

-keep class kotlin.concurrent.TimersKt
-keepclassmembers class kotlin.concurrent.TimersKt {
}

-keep class kotlin.concurrent.VolatileKt
-keepclassmembers class kotlin.concurrent.VolatileKt {
}

-keep class kotlin.comparisons.ComparisonsKt
-keepclassmembers class kotlin.comparisons.ComparisonsKt {
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** compareBy(...);
   *** compareValues(...);
   *** compareValuesBy(...);
   *** naturalOrder(...);
   *** nullsFirst(...);
   *** nullsLast(...);
   *** reverseOrder(...);
   *** reversed(...);
   *** then(...);
   *** thenDescending(...);
}

-keep class kotlin.comparisons.UComparisonsKt
-keepclassmembers class kotlin.comparisons.UComparisonsKt {
   *** maxOf-5PvTz6A(...);
   *** maxOf-J1ME1BU(...);
   *** maxOf-Kr8caGY(...);
   *** maxOf-Md2H83M(...);
   *** maxOf-R03FKyM(...);
   *** maxOf-Wr6uiD8(...);
   *** maxOf-eb3DHEI(...);
   *** maxOf-t1qELG4(...);
   *** minOf-5PvTz6A(...);
   *** minOf-J1ME1BU(...);
   *** minOf-Kr8caGY(...);
   *** minOf-Md2H83M(...);
   *** minOf-R03FKyM(...);
   *** minOf-Wr6uiD8(...);
   *** minOf-eb3DHEI(...);
   *** minOf-t1qELG4(...);
}

-keep class kotlin.annotation.AnnotationRetention
-keepclassmembers class kotlin.annotation.AnnotationRetention {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.annotation.AnnotationTarget
-keepclassmembers class kotlin.annotation.AnnotationTarget {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.annotation.MustBeDocumented
-keepclassmembers class kotlin.annotation.MustBeDocumented {
}

-keep class kotlin.annotation.Repeatable
-keepclassmembers class kotlin.annotation.Repeatable {
}

-keep class kotlin.annotation.Retention
-keepclassmembers class kotlin.annotation.Retention {
}

-keep class kotlin.annotation.Target
-keepclassmembers class kotlin.annotation.Target {
}

-keep class kotlin.ranges.ULongRange$Companion
-keepclassmembers class kotlin.ranges.ULongRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.ULongRange
-keepclassmembers class kotlin.ranges.ULongRange {
   <init>(...);
   *** getEndExclusive-s-VKNKU(...);
   *** getEndInclusive-s-VKNKU(...);
   *** getStart-s-VKNKU(...);
   *** contains-VKZWuLQ(...);
}

-keep class kotlin.ranges.UIntRange$Companion
-keepclassmembers class kotlin.ranges.UIntRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.UIntRange
-keepclassmembers class kotlin.ranges.UIntRange {
   *** getEndExclusive-pVg5ArA(...);
   *** getEndInclusive-pVg5ArA(...);
   *** getStart-pVg5ArA(...);
   *** contains-WZ4Q5Ns(...);
}

-keep class kotlin.ranges.CharProgression$Companion
-keepclassmembers class kotlin.ranges.CharProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.CharProgression
-keepclassmembers class kotlin.ranges.CharProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.CharRange$Companion
-keepclassmembers class kotlin.ranges.CharRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.CharRange
-keepclassmembers class kotlin.ranges.CharRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
-keepclassmembers class kotlin.ranges.ClosedFloatingPointRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.ClosedFloatingPointRange
-keepclassmembers class kotlin.ranges.ClosedFloatingPointRange {
}

-keep class kotlin.ranges.ClosedRange$DefaultImpls
-keepclassmembers class kotlin.ranges.ClosedRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.ClosedRange
-keepclassmembers class kotlin.ranges.ClosedRange {
}

-keep class kotlin.ranges.IntProgression$Companion
-keepclassmembers class kotlin.ranges.IntProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.IntProgression
-keepclassmembers class kotlin.ranges.IntProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.IntRange$Companion
-keepclassmembers class kotlin.ranges.IntRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.IntRange
-keepclassmembers class kotlin.ranges.IntRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.OpenEndRange$DefaultImpls
-keepclassmembers class kotlin.ranges.OpenEndRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.OpenEndRange
-keepclassmembers class kotlin.ranges.OpenEndRange {
}

-keep class kotlin.ranges.LongProgression$Companion
-keepclassmembers class kotlin.ranges.LongProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.LongProgression
-keepclassmembers class kotlin.ranges.LongProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.LongRange$Companion
-keepclassmembers class kotlin.ranges.LongRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.LongRange
-keepclassmembers class kotlin.ranges.LongRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.RangesKt
-keepclassmembers class kotlin.ranges.RangesKt {
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** doubleRangeContains(...);
   *** doubleRangeContains(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** floatRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toLongExactOrNull(...);
   *** toLongExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** checkStepIsPositive(...);
   *** rangeTo(...);
   *** rangeTo(...);
   *** rangeTo(...);
   *** rangeUntil(...);
   *** rangeUntil(...);
   *** rangeUntil(...);
}

-keep class kotlin.ranges.UIntProgression$Companion
-keepclassmembers class kotlin.ranges.UIntProgression$Companion {
   <init>(...);
   *** fromClosedRange-Nkh28Cs(...);
}

-keep class kotlin.ranges.UIntProgression
-keepclassmembers class kotlin.ranges.UIntProgression {
   *** getFirst-pVg5ArA(...);
   *** isEmpty(...);
   *** getLast-pVg5ArA(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.ULongProgression$Companion
-keepclassmembers class kotlin.ranges.ULongProgression$Companion {
   <init>(...);
   *** fromClosedRange-7ftBX0g(...);
}

-keep class kotlin.ranges.ULongProgression
-keepclassmembers class kotlin.ranges.ULongProgression {
   <init>(...);
   *** getFirst-s-VKNKU(...);
   *** isEmpty(...);
   *** getLast-s-VKNKU(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.URangesKt
-keepclassmembers class kotlin.ranges.URangesKt {
   *** coerceAtLeast-5PvTz6A(...);
   *** coerceAtLeast-J1ME1BU(...);
   *** coerceAtLeast-Kr8caGY(...);
   *** coerceAtLeast-eb3DHEI(...);
   *** coerceAtMost-5PvTz6A(...);
   *** coerceAtMost-J1ME1BU(...);
   *** coerceAtMost-Kr8caGY(...);
   *** coerceAtMost-eb3DHEI(...);
   *** coerceIn-JPwROB0(...);
   *** coerceIn-VKSA0NQ(...);
   *** coerceIn-WZ9TVnA(...);
   *** coerceIn-b33U2AM(...);
   *** coerceIn-sambcqE(...);
   *** coerceIn-wuiCnnA(...);
   *** contains-68kG9v0(...);
   *** contains-Gab390E(...);
   *** contains-ULb-yJY(...);
   *** contains-ZsK3CEQ(...);
   *** contains-fz5IDCE(...);
   *** contains-uhHAxoY(...);
   *** downTo-5PvTz6A(...);
   *** downTo-J1ME1BU(...);
   *** downTo-Kr8caGY(...);
   *** downTo-eb3DHEI(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** last(...);
   *** last(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reversed(...);
   *** reversed(...);
   *** step(...);
   *** step(...);
   *** until-5PvTz6A(...);
   *** until-J1ME1BU(...);
   *** until-Kr8caGY(...);
   *** until-eb3DHEI(...);
}

-keep class kotlin.collections.AbstractSet
-keepclassmembers class kotlin.collections.AbstractSet {
   *** getSize(...);
}

-keep class kotlin.collections.AbstractList
-keepclassmembers class kotlin.collections.AbstractList {
   *** get(...);
   *** getSize(...);
}

-keep class kotlin.collections.AbstractCollection
-keepclassmembers class kotlin.collections.AbstractCollection {
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** getSize(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.collections.AbstractCollection
-keepclassmembers class kotlin.collections.AbstractCollection {
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractIterator$WhenMappings
-keepclassmembers class kotlin.collections.AbstractIterator$WhenMappings {
}

-keep class kotlin.collections.AbstractIterator
-keepclassmembers class kotlin.collections.AbstractIterator {
   <init>(...);
   *** hasNext(...);
   *** computeNext(...);
   *** done(...);
   *** next(...);
   *** remove(...);
   *** setNext(...);
}

-keep class kotlin.collections.AbstractIterator
-keepclassmembers class kotlin.collections.AbstractIterator {
   *** computeNext(...);
}

-keep class kotlin.collections.AbstractList
-keepclassmembers class kotlin.collections.AbstractList {
   <init>(...);
   *** add(...);
   *** addAll(...);
   *** get(...);
   *** indexOf(...);
   *** iterator(...);
   *** lastIndexOf(...);
   *** listIterator(...);
   *** listIterator(...);
   *** remove(...);
   *** set(...);
   *** subList(...);
}

-keep class kotlin.collections.AbstractMap
-keepclassmembers class kotlin.collections.AbstractMap {
   <init>(...);
   *** getEntries(...);
   *** isEmpty(...);
   *** getKeys(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** entrySet(...);
   *** get(...);
   *** keySet(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** size(...);
   *** values(...);
}

-keep class kotlin.collections.AbstractMap
-keepclassmembers class kotlin.collections.AbstractMap {
   *** getEntries(...);
}

-keep class kotlin.collections.AbstractMutableCollection
-keepclassmembers class kotlin.collections.AbstractMutableCollection {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableCollection
-keepclassmembers class kotlin.collections.AbstractMutableCollection {
   *** add(...);
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** remove(...);
   *** removeAt(...);
   *** set(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   *** add(...);
   *** getSize(...);
   *** removeAt(...);
   *** set(...);
   *** get(...);
}

-keep class kotlin.collections.AbstractMutableMap
-keepclassmembers class kotlin.collections.AbstractMutableMap {
   <init>(...);
   *** getEntries(...);
   *** getKeys(...);
   *** entrySet(...);
   *** getSize(...);
   *** getValues(...);
   *** keySet(...);
   *** put(...);
   *** size(...);
   *** values(...);
}

-keep class kotlin.collections.AbstractMutableMap
-keepclassmembers class kotlin.collections.AbstractMutableMap {
   *** getEntries(...);
   *** put(...);
}

-keep class kotlin.collections.AbstractMutableSet
-keepclassmembers class kotlin.collections.AbstractMutableSet {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableSet
-keepclassmembers class kotlin.collections.AbstractMutableSet {
   *** add(...);
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractSet
-keepclassmembers class kotlin.collections.AbstractSet {
   <init>(...);
   *** iterator(...);
}

-keep class kotlin.collections.ArrayDeque
-keepclassmembers class kotlin.collections.ArrayDeque {
   <init>(...);
   <init>(...);
   <init>(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** addFirst(...);
   *** addLast(...);
   *** first(...);
   *** firstOrNull(...);
   *** get(...);
   *** getSize(...);
   *** last(...);
   *** lastOrNull(...);
   *** removeAll(...);
   *** removeAt(...);
   *** removeFirst(...);
   *** removeFirstOrNull(...);
   *** removeLast(...);
   *** removeLastOrNull(...);
   *** retainAll(...);
   *** set(...);
   *** toArray(...);
}

-keep class kotlin.collections.ArraysKt
-keepclassmembers class kotlin.collections.ArraysKt {
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** requireNoNulls(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sortBy(...);
   *** sortByDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayWith(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** toBooleanArray(...);
   *** toByteArray(...);
   *** toCharArray(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toDoubleArray(...);
   *** toFloatArray(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toIntArray(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toLongArray(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toShortArray(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sortWith(...);
   *** sortWith(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** contentDeepEquals(...);
   *** contentDeepToString(...);
   *** flatten(...);
   *** unzip(...);
   *** arrayOfNulls(...);
   *** contentDeepHashCode(...);
   *** copyOfRangeToIndexCheck(...);
}

-keep class kotlin.collections.BooleanIterator
-keepclassmembers class kotlin.collections.BooleanIterator {
   <init>(...);
   *** next(...);
   *** nextBoolean(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.BooleanIterator
-keepclassmembers class kotlin.collections.BooleanIterator {
   *** nextBoolean(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ByteIterator
-keepclassmembers class kotlin.collections.ByteIterator {
   <init>(...);
   *** next(...);
   *** nextByte(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ByteIterator
-keepclassmembers class kotlin.collections.ByteIterator {
   *** nextByte(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CharIterator
-keepclassmembers class kotlin.collections.CharIterator {
   <init>(...);
   *** next(...);
   *** nextChar(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CharIterator
-keepclassmembers class kotlin.collections.CharIterator {
   *** nextChar(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CollectionsKt
-keepclassmembers class kotlin.collections.CollectionsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asSequence(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** chunked(...);
   *** chunked(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinctBy(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** elementAt(...);
   *** elementAtOrElse(...);
   *** elementAtOrNull(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** intersect(...);
   *** joinTo(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** partition(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** random(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** requireNoNulls(...);
   *** requireNoNulls(...);
   *** reversed(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** shuffle(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** sortBy(...);
   *** sortByDescending(...);
   *** sortDescending(...);
   *** sorted(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** subtract(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** toBooleanArray(...);
   *** toByteArray(...);
   *** toCharArray(...);
   *** toCollection(...);
   *** toDoubleArray(...);
   *** toFloatArray(...);
   *** toHashSet(...);
   *** toIntArray(...);
   *** toList(...);
   *** toLongArray(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** toShortArray(...);
   *** union(...);
   *** windowed(...);
   *** windowed(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** reverse(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** asReversed(...);
   *** asReversedMutable(...);
   *** addAll(...);
   *** addAll(...);
   *** addAll(...);
   *** convertToListIfNotCollection(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeFirst(...);
   *** removeFirstOrNull(...);
   *** removeLast(...);
   *** removeLastOrNull(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** sort(...);
   *** sortWith(...);
   *** forEach(...);
   *** withIndex(...);
   *** iterator(...);
   *** collectionSizeOrDefault(...);
   *** collectionSizeOrNull(...);
   *** flatten(...);
   *** unzip(...);
   *** arrayListOf(...);
   *** asCollection(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearchBy(...);
   *** emptyList(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** listOf(...);
   *** listOfNotNull(...);
   *** listOfNotNull(...);
   *** mutableListOf(...);
   *** optimizeReadOnlyList(...);
   *** shuffled(...);
   *** throwCountOverflow(...);
   *** throwIndexOverflow(...);
   *** build(...);
   *** copyToArrayOfAny(...);
   *** createListBuilder(...);
   *** createListBuilder(...);
   *** listOf(...);
   *** shuffled(...);
   *** shuffled(...);
}

-keep class kotlin.collections.DoubleIterator
-keepclassmembers class kotlin.collections.DoubleIterator {
   <init>(...);
   *** next(...);
   *** nextDouble(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.DoubleIterator
-keepclassmembers class kotlin.collections.DoubleIterator {
   *** nextDouble(...);
   *** hasNext(...);
}

-keep class kotlin.collections.FloatIterator
-keepclassmembers class kotlin.collections.FloatIterator {
   <init>(...);
   *** next(...);
   *** nextFloat(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.FloatIterator
-keepclassmembers class kotlin.collections.FloatIterator {
   *** nextFloat(...);
   *** hasNext(...);
}

-keep class kotlin.collections.GroupingKt
-keepclassmembers class kotlin.collections.GroupingKt {
   *** aggregate(...);
   *** aggregateTo(...);
   *** eachCountTo(...);
   *** fold(...);
   *** fold(...);
   *** foldTo(...);
   *** foldTo(...);
   *** reduce(...);
   *** reduceTo(...);
   *** eachCount(...);
}

-keep class kotlin.collections.Grouping
-keepclassmembers class kotlin.collections.Grouping {
}

-keep class kotlin.collections.IndexedValue
-keepclassmembers class kotlin.collections.IndexedValue {
   <init>(...);
   *** getIndex(...);
   *** getValue(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.collections.IntIterator
-keepclassmembers class kotlin.collections.IntIterator {
   <init>(...);
   *** next(...);
   *** nextInt(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.IntIterator
-keepclassmembers class kotlin.collections.IntIterator {
   *** nextInt(...);
   *** hasNext(...);
}

-keep class kotlin.collections.LongIterator
-keepclassmembers class kotlin.collections.LongIterator {
   <init>(...);
   *** next(...);
   *** nextLong(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.LongIterator
-keepclassmembers class kotlin.collections.LongIterator {
   *** nextLong(...);
   *** hasNext(...);
}

-keep class kotlin.collections.MapAccessorsKt
-keepclassmembers class kotlin.collections.MapAccessorsKt {
}

-keep class kotlin.collections.MapsKt
-keepclassmembers class kotlin.collections.MapsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asSequence(...);
   *** count(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** forEach(...);
   *** map(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** toList(...);
   *** emptyMap(...);
   *** filter(...);
   *** filterKeys(...);
   *** filterNot(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** filterValues(...);
   *** getOrElseNullable(...);
   *** getOrPut(...);
   *** getValue(...);
   *** hashMapOf(...);
   *** linkedMapOf(...);
   *** mapKeys(...);
   *** mapKeysTo(...);
   *** mapOf(...);
   *** mapValues(...);
   *** mapValuesTo(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** mutableMapOf(...);
   *** optimizeReadOnlyMap(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** putAll(...);
   *** putAll(...);
   *** putAll(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMutableMap(...);
   *** build(...);
   *** createMapBuilder(...);
   *** createMapBuilder(...);
   *** getOrPut(...);
   *** mapCapacity(...);
   *** mapOf(...);
   *** sortedMapOf(...);
   *** sortedMapOf(...);
   *** toSingletonMap(...);
   *** toSortedMap(...);
   *** toSortedMap(...);
   *** getOrImplicitDefaultNullable(...);
   *** withDefault(...);
   *** withDefaultMutable(...);
}

-keep class kotlin.collections.SetsKt
-keepclassmembers class kotlin.collections.SetsKt {
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** emptySet(...);
   *** hashSetOf(...);
   *** linkedSetOf(...);
   *** mutableSetOf(...);
   *** optimizeReadOnlySet(...);
   *** setOf(...);
   *** setOfNotNull(...);
   *** setOfNotNull(...);
   *** build(...);
   *** createSetBuilder(...);
   *** createSetBuilder(...);
   *** setOf(...);
   *** sortedSetOf(...);
   *** sortedSetOf(...);
}

-keep class kotlin.collections.ShortIterator
-keepclassmembers class kotlin.collections.ShortIterator {
   <init>(...);
   *** next(...);
   *** nextShort(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ShortIterator
-keepclassmembers class kotlin.collections.ShortIterator {
   *** nextShort(...);
   *** hasNext(...);
}

-keep class kotlin.collections.SlidingWindowKt
-keepclassmembers class kotlin.collections.SlidingWindowKt {
}

-keep class kotlin.collections.TypeAliasesKt
-keepclassmembers class kotlin.collections.TypeAliasesKt {
}

-keep class kotlin.collections.UArraySortingKt
-keepclassmembers class kotlin.collections.UArraySortingKt {
}

-keep class kotlin.collections.UCollectionsKt
-keepclassmembers class kotlin.collections.UCollectionsKt {
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
   *** toUByteArray(...);
   *** toUIntArray(...);
   *** toULongArray(...);
   *** toUShortArray(...);
}

-keep class kotlin.collections.unsigned.UArraysKt
-keepclassmembers class kotlin.collections.unsigned.UArraysKt {
   *** contentEquals-FGO6Aew(...);
   *** contentEquals-KJPZfPQ(...);
   *** contentEquals-kV0jMPg(...);
   *** contentEquals-lec5QzE(...);
   *** contentHashCode-2csIQuQ(...);
   *** contentHashCode-XUkPCBk(...);
   *** contentHashCode-d-6D3K8(...);
   *** contentHashCode-uLth9ew(...);
   *** contentToString-2csIQuQ(...);
   *** contentToString-XUkPCBk(...);
   *** contentToString-d-6D3K8(...);
   *** contentToString-uLth9ew(...);
   *** drop-PpDY95g(...);
   *** drop-nggk6HY(...);
   *** drop-qFRl0hI(...);
   *** drop-r7IrZao(...);
   *** dropLast-PpDY95g(...);
   *** dropLast-nggk6HY(...);
   *** dropLast-qFRl0hI(...);
   *** dropLast-r7IrZao(...);
   *** fill-2fe2U9s(...);
   *** fill-EtDCXyQ(...);
   *** fill-K6DWlUc(...);
   *** fill-WpHrYlw(...);
   *** firstOrNull--ajY-9A(...);
   *** firstOrNull-GBYM_sE(...);
   *** firstOrNull-QwZRm1k(...);
   *** firstOrNull-rL5Bavg(...);
   *** getIndices--ajY-9A(...);
   *** getIndices-GBYM_sE(...);
   *** getIndices-QwZRm1k(...);
   *** getIndices-rL5Bavg(...);
   *** getLastIndex--ajY-9A(...);
   *** getLastIndex-GBYM_sE(...);
   *** getLastIndex-QwZRm1k(...);
   *** getLastIndex-rL5Bavg(...);
   *** getOrNull-PpDY95g(...);
   *** getOrNull-nggk6HY(...);
   *** getOrNull-qFRl0hI(...);
   *** getOrNull-r7IrZao(...);
   *** lastOrNull--ajY-9A(...);
   *** lastOrNull-GBYM_sE(...);
   *** lastOrNull-QwZRm1k(...);
   *** lastOrNull-rL5Bavg(...);
   *** maxOrNull--ajY-9A(...);
   *** maxOrNull-GBYM_sE(...);
   *** maxOrNull-QwZRm1k(...);
   *** maxOrNull-rL5Bavg(...);
   *** maxOrThrow-U(...);
   *** maxOrThrow-U(...);
   *** maxOrThrow-U(...);
   *** maxOrThrow-U(...);
   *** maxWithOrNull-XMRcp5o(...);
   *** maxWithOrNull-YmdZ_VM(...);
   *** maxWithOrNull-eOHTfZs(...);
   *** maxWithOrNull-zrEWJaI(...);
   *** maxWithOrThrow-U(...);
   *** maxWithOrThrow-U(...);
   *** maxWithOrThrow-U(...);
   *** maxWithOrThrow-U(...);
   *** minOrNull--ajY-9A(...);
   *** minOrNull-GBYM_sE(...);
   *** minOrNull-QwZRm1k(...);
   *** minOrNull-rL5Bavg(...);
   *** minOrThrow-U(...);
   *** minOrThrow-U(...);
   *** minOrThrow-U(...);
   *** minOrThrow-U(...);
   *** minWithOrNull-XMRcp5o(...);
   *** minWithOrNull-YmdZ_VM(...);
   *** minWithOrNull-eOHTfZs(...);
   *** minWithOrNull-zrEWJaI(...);
   *** minWithOrThrow-U(...);
   *** minWithOrThrow-U(...);
   *** minWithOrThrow-U(...);
   *** minWithOrThrow-U(...);
   *** plus-CFIt9YE(...);
   *** plus-kzHmqpY(...);
   *** plus-ojwP5H8(...);
   *** plus-xo_DsdI(...);
   *** random-2D5oskM(...);
   *** random-JzugnMA(...);
   *** random-oSF2wD8(...);
   *** random-s5X_as8(...);
   *** randomOrNull-2D5oskM(...);
   *** randomOrNull-JzugnMA(...);
   *** randomOrNull-oSF2wD8(...);
   *** randomOrNull-s5X_as8(...);
   *** reversed--ajY-9A(...);
   *** reversed-GBYM_sE(...);
   *** reversed-QwZRm1k(...);
   *** reversed-rL5Bavg(...);
   *** shuffle--ajY-9A(...);
   *** shuffle-2D5oskM(...);
   *** shuffle-GBYM_sE(...);
   *** shuffle-JzugnMA(...);
   *** shuffle-QwZRm1k(...);
   *** shuffle-oSF2wD8(...);
   *** shuffle-rL5Bavg(...);
   *** shuffle-s5X_as8(...);
   *** singleOrNull--ajY-9A(...);
   *** singleOrNull-GBYM_sE(...);
   *** singleOrNull-QwZRm1k(...);
   *** singleOrNull-rL5Bavg(...);
   *** slice-F7u83W8(...);
   *** slice-HwE9HBo(...);
   *** slice-JGPC0-M(...);
   *** slice-JQknh5Q(...);
   *** slice-Q6IL4kU(...);
   *** slice-ZRhS8yI(...);
   *** slice-c0bezYM(...);
   *** slice-tAntMlw(...);
   *** sliceArray-CFIt9YE(...);
   *** sliceArray-Q6IL4kU(...);
   *** sliceArray-ZRhS8yI(...);
   *** sliceArray-c0bezYM(...);
   *** sliceArray-kzHmqpY(...);
   *** sliceArray-ojwP5H8(...);
   *** sliceArray-tAntMlw(...);
   *** sliceArray-xo_DsdI(...);
   *** sort--ajY-9A(...);
   *** sort--nroSd4(...);
   *** sort-4UcCI2c(...);
   *** sort-Aa5vz7o(...);
   *** sort-GBYM_sE(...);
   *** sort-QwZRm1k(...);
   *** sort-oBK06Vg(...);
   *** sort-rL5Bavg(...);
   *** sortDescending--ajY-9A(...);
   *** sortDescending--nroSd4(...);
   *** sortDescending-4UcCI2c(...);
   *** sortDescending-Aa5vz7o(...);
   *** sortDescending-GBYM_sE(...);
   *** sortDescending-QwZRm1k(...);
   *** sortDescending-oBK06Vg(...);
   *** sortDescending-rL5Bavg(...);
   *** sorted--ajY-9A(...);
   *** sorted-GBYM_sE(...);
   *** sorted-QwZRm1k(...);
   *** sorted-rL5Bavg(...);
   *** sortedArray--ajY-9A(...);
   *** sortedArray-GBYM_sE(...);
   *** sortedArray-QwZRm1k(...);
   *** sortedArray-rL5Bavg(...);
   *** sortedArrayDescending--ajY-9A(...);
   *** sortedArrayDescending-GBYM_sE(...);
   *** sortedArrayDescending-QwZRm1k(...);
   *** sortedArrayDescending-rL5Bavg(...);
   *** sortedDescending--ajY-9A(...);
   *** sortedDescending-GBYM_sE(...);
   *** sortedDescending-QwZRm1k(...);
   *** sortedDescending-rL5Bavg(...);
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
   *** take-PpDY95g(...);
   *** take-nggk6HY(...);
   *** take-qFRl0hI(...);
   *** take-r7IrZao(...);
   *** takeLast-PpDY95g(...);
   *** takeLast-nggk6HY(...);
   *** takeLast-qFRl0hI(...);
   *** takeLast-r7IrZao(...);
   *** toTypedArray--ajY-9A(...);
   *** toTypedArray-GBYM_sE(...);
   *** toTypedArray-QwZRm1k(...);
   *** toTypedArray-rL5Bavg(...);
   *** toUByteArray(...);
   *** toUIntArray(...);
   *** toULongArray(...);
   *** toUShortArray(...);
   *** withIndex--ajY-9A(...);
   *** withIndex-GBYM_sE(...);
   *** withIndex-QwZRm1k(...);
   *** withIndex-rL5Bavg(...);
   *** zip-C-E_24M(...);
   *** zip-F7u83W8(...);
   *** zip-HwE9HBo(...);
   *** zip-JGPC0-M(...);
   *** zip-JQknh5Q(...);
   *** zip-ctEhBpI(...);
   *** zip-f7H3mmw(...);
   *** zip-kdPth3s(...);
   *** zip-mazbYpA(...);
   *** zip-nl983wc(...);
   *** zip-uaTIQ5s(...);
   *** zip-us8wMrg(...);
   *** asList--ajY-9A(...);
   *** asList-GBYM_sE(...);
   *** asList-QwZRm1k(...);
   *** asList-rL5Bavg(...);
   *** binarySearch-2fe2U9s(...);
   *** binarySearch-EtDCXyQ(...);
   *** binarySearch-K6DWlUc(...);
   *** binarySearch-WpHrYlw(...);
}

-keep class kotlin.collections.jdk8.CollectionsJDK8Kt
-keepclassmembers class kotlin.collections.jdk8.CollectionsJDK8Kt {
}

-keep class kotlin.collections.builders.ListBuilderKt
-keepclassmembers class kotlin.collections.builders.ListBuilderKt {
}

# ACW for Xamarin.KotlinX.Coroutines.Android
-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   <init>(...);
   *** delay(...);
   *** invokeOnTimeout(...);
   *** scheduleResumeAfterDelay(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   *** getImmediate(...);
   *** scheduleResumeAfterDelay(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcherKt
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcherKt {
   *** awaitFrame(...);
   *** from(...);
   *** from(...);
}

# ACW for Xamarin.KotlinX.Coroutines.Core.Jvm
-keep class kotlinx.coroutines.AbstractTimeSourceKt
-keepclassmembers class kotlinx.coroutines.AbstractTimeSourceKt {
}

-keep class kotlinx.coroutines.AwaitKt
-keepclassmembers class kotlinx.coroutines.AwaitKt {
}

-keep class kotlinx.coroutines.BuildersKt
-keepclassmembers class kotlinx.coroutines.BuildersKt {
   *** invoke(...);
   *** runBlocking(...);
   *** withContext(...);
}

-keep class kotlinx.coroutines.CancellableContinuationImplKt
-keepclassmembers class kotlinx.coroutines.CancellableContinuationImplKt {
}

-keep class kotlinx.coroutines.CancellableContinuationKt
-keepclassmembers class kotlinx.coroutines.CancellableContinuationKt {
   *** disposeOnCancellation(...);
   *** suspendCancellableCoroutine(...);
}

-keep class kotlinx.coroutines.CompletableDeferredKt
-keepclassmembers class kotlinx.coroutines.CompletableDeferredKt {
}

-keep class kotlinx.coroutines.CompletionHandlerException
-keepclassmembers class kotlinx.coroutines.CompletionHandlerException {
   <init>(...);
}

-keep class kotlinx.coroutines.CompletionHandlerKt
-keepclassmembers class kotlinx.coroutines.CompletionHandlerKt {
   *** getAsHandler(...);
}

-keep class kotlinx.coroutines.CompletionHandler_commonKt
-keepclassmembers class kotlinx.coroutines.CompletionHandler_commonKt {
}

-keep class kotlinx.coroutines.CompletionStateKt
-keepclassmembers class kotlinx.coroutines.CompletionStateKt {
}

-keep class kotlinx.coroutines.CoroutineContextKt
-keepclassmembers class kotlinx.coroutines.CoroutineContextKt {
   *** getCoroutineName(...);
   *** newCoroutineContext(...);
   *** newCoroutineContext(...);
}

-keep class kotlinx.coroutines.CoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.CoroutineDispatcher {
   <init>(...);
   *** dispatch(...);
   *** dispatchYield(...);
   *** get(...);
   *** interceptContinuation(...);
   *** isDispatchNeeded(...);
   *** limitedParallelism(...);
   *** minusKey(...);
   *** plus(...);
   *** releaseInterceptedContinuation(...);
}

-keep class kotlinx.coroutines.CoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.CoroutineDispatcher {
   *** dispatch(...);
}

-keep class kotlinx.coroutines.CoroutineExceptionHandlerImplKt
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandlerImplKt {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandlerKt
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandlerKt {
   *** CoroutineExceptionHandler(...);
   *** handleCoroutineException(...);
}

-keep class kotlinx.coroutines.CoroutineName$Key
-keepclassmembers class kotlinx.coroutines.CoroutineName$Key {
   <init>(...);
}

-keep class kotlinx.coroutines.CoroutineName
-keepclassmembers class kotlinx.coroutines.CoroutineName {
   <init>(...);
   *** getName(...);
   *** component1(...);
   *** copy(...);
}

-keep class kotlinx.coroutines.CoroutineScopeKt
-keepclassmembers class kotlinx.coroutines.CoroutineScopeKt {
   *** CoroutineScope(...);
   *** MainScope(...);
   *** cancel(...);
   *** cancel(...);
   *** coroutineScope(...);
   *** currentCoroutineContext(...);
   *** ensureActive(...);
   *** isActive(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.CoroutineStart$WhenMappings
-keepclassmembers class kotlinx.coroutines.CoroutineStart$WhenMappings {
}

-keep class kotlinx.coroutines.CoroutineStart
-keepclassmembers class kotlinx.coroutines.CoroutineStart {
   *** isLazy(...);
   *** invoke(...);
   *** invoke(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlinx.coroutines.DebugKt
-keepclassmembers class kotlinx.coroutines.DebugKt {
}

-keep class kotlinx.coroutines.DebugStringsKt
-keepclassmembers class kotlinx.coroutines.DebugStringsKt {
   *** getClassSimpleName(...);
   *** getHexAddress(...);
}

-keep class kotlinx.coroutines.DefaultExecutorKt
-keepclassmembers class kotlinx.coroutines.DefaultExecutorKt {
}

-keep class kotlinx.coroutines.DelayKt
-keepclassmembers class kotlinx.coroutines.DelayKt {
   *** awaitCancellation(...);
   *** delay(...);
   *** getDelay(...);
}

-keep class kotlinx.coroutines.DispatchedTaskKt
-keepclassmembers class kotlinx.coroutines.DispatchedTaskKt {
   *** isCancellableMode(...);
   *** isReusableMode(...);
}

-keep class kotlinx.coroutines.Dispatchers
-keepclassmembers class kotlinx.coroutines.Dispatchers {
   *** getDefault(...);
   *** getIO(...);
   *** getMain(...);
   *** getUnconfined(...);
   *** shutdown(...);
}

-keep class kotlinx.coroutines.DispatchersKt
-keepclassmembers class kotlinx.coroutines.DispatchersKt {
}

-keep class kotlinx.coroutines.EventLoopKt
-keepclassmembers class kotlinx.coroutines.EventLoopKt {
   *** processNextEventInCurrentThread(...);
}

-keep class kotlinx.coroutines.EventLoop_commonKt
-keepclassmembers class kotlinx.coroutines.EventLoop_commonKt {
}

-keep class kotlinx.coroutines.ExceptionsKt
-keepclassmembers class kotlinx.coroutines.ExceptionsKt {
   *** CancellationException(...);
}

-keep class kotlinx.coroutines.ExecutorCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.ExecutorCoroutineDispatcher {
   <init>(...);
   *** getExecutor(...);
   *** close(...);
}

-keep class kotlinx.coroutines.ExecutorCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.ExecutorCoroutineDispatcher {
   *** getExecutor(...);
   *** close(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.ExecutorsKt
-keepclassmembers class kotlinx.coroutines.ExecutorsKt {
   *** asExecutor(...);
   *** from(...);
   *** from(...);
}

-keep class kotlinx.coroutines.GlobalScope
-keepclassmembers class kotlinx.coroutines.GlobalScope {
   *** getCoroutineContext(...);
}

-keep class kotlinx.coroutines.CancellableContinuation$DefaultImpls
-keepclassmembers class kotlinx.coroutines.CancellableContinuation$DefaultImpls {
}

-keep class kotlinx.coroutines.CancellableContinuation
-keepclassmembers class kotlinx.coroutines.CancellableContinuation {
}

-keep class kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls
-keepclassmembers class kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.CopyableThreadContextElement
-keepclassmembers class kotlinx.coroutines.CopyableThreadContextElement {
}

-keep class kotlinx.coroutines.CopyableThrowable
-keepclassmembers class kotlinx.coroutines.CopyableThrowable {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler$Key
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler$Key {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler {
}

-keep class kotlinx.coroutines.CoroutineScope
-keepclassmembers class kotlinx.coroutines.CoroutineScope {
}

-keep class kotlinx.coroutines.Delay$DefaultImpls
-keepclassmembers class kotlinx.coroutines.Delay$DefaultImpls {
   *** delay(...);
   *** invokeOnTimeout(...);
}

-keep class kotlinx.coroutines.Delay
-keepclassmembers class kotlinx.coroutines.Delay {
}

-keep class kotlinx.coroutines.DelicateCoroutinesApi
-keepclassmembers class kotlinx.coroutines.DelicateCoroutinesApi {
}

-keep class kotlinx.coroutines.DisposableHandle
-keepclassmembers class kotlinx.coroutines.DisposableHandle {
}

-keep class kotlinx.coroutines.ExperimentalCoroutinesApi
-keepclassmembers class kotlinx.coroutines.ExperimentalCoroutinesApi {
}

-keep class kotlinx.coroutines.FlowPreview
-keepclassmembers class kotlinx.coroutines.FlowPreview {
}

-keep class kotlinx.coroutines.InternalCoroutinesApi
-keepclassmembers class kotlinx.coroutines.InternalCoroutinesApi {
}

-keep class kotlinx.coroutines.InterruptibleKt
-keepclassmembers class kotlinx.coroutines.InterruptibleKt {
   *** runInterruptible(...);
}

-keep class kotlinx.coroutines.ObsoleteCoroutinesApi
-keepclassmembers class kotlinx.coroutines.ObsoleteCoroutinesApi {
}

-keep class kotlinx.coroutines.ThreadContextElement$DefaultImpls
-keepclassmembers class kotlinx.coroutines.ThreadContextElement$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.ThreadContextElement
-keepclassmembers class kotlinx.coroutines.ThreadContextElement {
}

-keep class kotlinx.coroutines.JobKt
-keepclassmembers class kotlinx.coroutines.JobKt {
   *** cancel(...);
   *** cancelChildren(...);
   *** cancelFutureOnCancellation(...);
   *** ensureActive(...);
   *** isActive(...);
}

-keep class kotlinx.coroutines.JobSupport
-keepclassmembers class kotlinx.coroutines.JobSupport {
   <init>(...);
   *** getCancellationException(...);
   *** getChildJobCancellationCause(...);
   *** getChildren(...);
   *** getCompletionCause(...);
   *** getCompletionCauseHandled(...);
   *** getCompletionExceptionOrNull(...);
   *** isActive(...);
   *** isCancelled(...);
   *** isCompleted(...);
   *** isCompletedExceptionally(...);
   *** isScopedCoroutine(...);
   *** getKey(...);
   *** afterCompletion(...);
   *** cancel(...);
   *** cancelCoroutine(...);
   *** cancelInternal(...);
   *** cancellationExceptionMessage(...);
   *** childCancelled(...);
   *** fold(...);
   *** get(...);
   *** handleJobException(...);
   *** invokeOnCompletion(...);
   *** invokeOnCompletion(...);
   *** join(...);
   *** minusKey(...);
   *** onCancelling(...);
   *** onCompletionInternal(...);
   *** onStart(...);
   *** plus(...);
   *** start(...);
   *** toCancellationException(...);
   *** toDebugString(...);
}

-keep class kotlinx.coroutines.JobSupportKt
-keepclassmembers class kotlinx.coroutines.JobSupportKt {
}

-keep class kotlinx.coroutines.MainCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.MainCoroutineDispatcher {
   <init>(...);
   *** getImmediate(...);
   *** toStringInternalImpl(...);
}

-keep class kotlinx.coroutines.MainCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.MainCoroutineDispatcher {
   *** getImmediate(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.NonCancellable
-keepclassmembers class kotlinx.coroutines.NonCancellable {
   *** getCancellationException(...);
   *** getChildren(...);
   *** isActive(...);
   *** isCancelled(...);
   *** isCompleted(...);
   *** cancel(...);
   *** invokeOnCompletion(...);
   *** invokeOnCompletion(...);
   *** join(...);
   *** start(...);
}

-keep class kotlinx.coroutines.NonDisposableHandle
-keepclassmembers class kotlinx.coroutines.NonDisposableHandle {
   *** childCancelled(...);
   *** dispose(...);
}

-keep class kotlinx.coroutines.RunnableKt
-keepclassmembers class kotlinx.coroutines.RunnableKt {
   *** Runnable(...);
}

-keep class kotlinx.coroutines.SchedulerTaskKt
-keepclassmembers class kotlinx.coroutines.SchedulerTaskKt {
   *** getTaskContext(...);
}

-keep class kotlinx.coroutines.SupervisorKt
-keepclassmembers class kotlinx.coroutines.SupervisorKt {
   *** supervisorScope(...);
}

-keep class kotlinx.coroutines.ThreadContextElementKt
-keepclassmembers class kotlinx.coroutines.ThreadContextElementKt {
   *** asContextElement(...);
   *** ensurePresent(...);
   *** isPresent(...);
}

-keep class kotlinx.coroutines.ThreadPoolDispatcherKt
-keepclassmembers class kotlinx.coroutines.ThreadPoolDispatcherKt {
   *** newFixedThreadPoolContext(...);
   *** newSingleThreadContext(...);
}

-keep class kotlinx.coroutines.TimeoutCancellationException
-keepclassmembers class kotlinx.coroutines.TimeoutCancellationException {
   *** createCopy(...);
}

-keep class kotlinx.coroutines.TimeoutKt
-keepclassmembers class kotlinx.coroutines.TimeoutKt {
   *** withTimeout(...);
   *** withTimeoutOrNull(...);
}

-keep class kotlinx.coroutines.YieldKt
-keepclassmembers class kotlinx.coroutines.YieldKt {
   *** yield(...);
}

-keep class kotlinx.coroutines.sync.Semaphore
-keepclassmembers class kotlinx.coroutines.sync.Semaphore {
}

-keep class kotlinx.coroutines.sync.MutexKt
-keepclassmembers class kotlinx.coroutines.sync.MutexKt {
}

-keep class kotlinx.coroutines.sync.SemaphoreKt
-keepclassmembers class kotlinx.coroutines.sync.SemaphoreKt {
   *** Semaphore(...);
   *** withPermit(...);
}

-keep class kotlinx.coroutines.selects.SelectKt
-keepclassmembers class kotlinx.coroutines.selects.SelectKt {
   *** select(...);
}

-keep class kotlinx.coroutines.selects.SelectUnbiasedKt
-keepclassmembers class kotlinx.coroutines.selects.SelectUnbiasedKt {
   *** selectUnbiased(...);
}

-keep class kotlinx.coroutines.selects.WhileSelectKt
-keepclassmembers class kotlinx.coroutines.selects.WhileSelectKt {
   *** whileSelect(...);
}

-keep class kotlinx.coroutines.scheduling.CoroutineSchedulerKt
-keepclassmembers class kotlinx.coroutines.scheduling.CoroutineSchedulerKt {
}

-keep class kotlinx.coroutines.scheduling.TasksKt
-keepclassmembers class kotlinx.coroutines.scheduling.TasksKt {
   *** isBlocking(...);
}

-keep class kotlinx.coroutines.scheduling.WorkQueueKt
-keepclassmembers class kotlinx.coroutines.scheduling.WorkQueueKt {
}

-keep class kotlinx.coroutines.intrinsics.CancellableKt
-keepclassmembers class kotlinx.coroutines.intrinsics.CancellableKt {
   *** startCoroutineCancellable(...);
}

-keep class kotlinx.coroutines.intrinsics.UndispatchedKt
-keepclassmembers class kotlinx.coroutines.intrinsics.UndispatchedKt {
}

-keep class kotlinx.coroutines.flow.FlowKt
-keepclassmembers class kotlinx.coroutines.flow.FlowKt {
   *** getDEFAULT_CONCURRENCY(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asSharedFlow(...);
   *** asStateFlow(...);
   *** buffer(...);
   *** cache(...);
   *** callbackFlow(...);
   *** cancellable(...);
   *** catch(...);
   *** catchImpl(...);
   *** channelFlow(...);
   *** collect(...);
   *** collectIndexed(...);
   *** collectLatest(...);
   *** collectWhile(...);
   *** combine(...);
   *** combine(...);
   *** combine(...);
   *** combine(...);
   *** combineLatest(...);
   *** combineLatest(...);
   *** combineLatest(...);
   *** combineLatest(...);
   *** combineTransform(...);
   *** combineTransform(...);
   *** combineTransform(...);
   *** combineTransform(...);
   *** compose(...);
   *** concatMap(...);
   *** concatWith(...);
   *** concatWith(...);
   *** conflate(...);
   *** count(...);
   *** count(...);
   *** debounce(...);
   *** debounce(...);
   *** debounceDuration(...);
   *** delayEach(...);
   *** delayFlow(...);
   *** distinctUntilChanged(...);
   *** distinctUntilChanged(...);
   *** distinctUntilChangedBy(...);
   *** drop(...);
   *** dropWhile(...);
   *** emitAll(...);
   *** emptyFlow(...);
   *** ensureActive(...);
   *** filter(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapConcat(...);
   *** flatMapLatest(...);
   *** flatMapMerge(...);
   *** flatten(...);
   *** flattenConcat(...);
   *** flattenMerge(...);
   *** flow(...);
   *** flowCombine(...);
   *** flowCombineTransform(...);
   *** flowOf(...);
   *** flowOf(...);
   *** flowOn(...);
   *** fold(...);
   *** forEach(...);
   *** last(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapLatest(...);
   *** mapNotNull(...);
   *** merge(...);
   *** merge(...);
   *** merge(...);
   *** noImpl(...);
   *** observeOn(...);
   *** onCompletion(...);
   *** onEach(...);
   *** onEmpty(...);
   *** onErrorResume(...);
   *** onErrorResumeNext(...);
   *** onErrorReturn(...);
   *** onErrorReturn(...);
   *** onStart(...);
   *** onSubscription(...);
   *** publish(...);
   *** publish(...);
   *** publishOn(...);
   *** reduce(...);
   *** replay(...);
   *** replay(...);
   *** retry(...);
   *** retryWhen(...);
   *** runningFold(...);
   *** runningReduce(...);
   *** sample(...);
   *** scan(...);
   *** scanFold(...);
   *** scanReduce(...);
   *** shareIn(...);
   *** single(...);
   *** singleOrNull(...);
   *** skip(...);
   *** startWith(...);
   *** startWith(...);
   *** stateIn(...);
   *** stateIn(...);
   *** subscribe(...);
   *** subscribe(...);
   *** subscribe(...);
   *** subscribeOn(...);
   *** switchMap(...);
   *** take(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toList(...);
   *** toSet(...);
   *** transform(...);
   *** transformLatest(...);
   *** transformWhile(...);
   *** unsafeTransform(...);
   *** withIndex(...);
   *** zip(...);
}

-keep class kotlinx.coroutines.flow.Flow
-keepclassmembers class kotlinx.coroutines.flow.Flow {
}

-keep class kotlinx.coroutines.flow.FlowCollector
-keepclassmembers class kotlinx.coroutines.flow.FlowCollector {
}

-keep class kotlinx.coroutines.flow.MutableSharedFlow
-keepclassmembers class kotlinx.coroutines.flow.MutableSharedFlow {
}

-keep class kotlinx.coroutines.flow.MutableStateFlow
-keepclassmembers class kotlinx.coroutines.flow.MutableStateFlow {
}

-keep class kotlinx.coroutines.flow.SharedFlow
-keepclassmembers class kotlinx.coroutines.flow.SharedFlow {
}

-keep class kotlinx.coroutines.flow.SharingStarted$Companion
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted$Companion {
   *** getEagerly(...);
   *** getLazily(...);
   *** WhileSubscribed(...);
}

-keep class kotlinx.coroutines.flow.SharingStarted
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted {
}

-keep class kotlinx.coroutines.flow.SharingStarted
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted {
}

-keep class kotlinx.coroutines.flow.SharingStarted
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted {
}

-keep class kotlinx.coroutines.flow.StateFlow
-keepclassmembers class kotlinx.coroutines.flow.StateFlow {
}

-keep class kotlinx.coroutines.flow.LintKt
-keepclassmembers class kotlinx.coroutines.flow.LintKt {
   *** cancel(...);
   *** cancellable(...);
   *** conflate(...);
   *** distinctUntilChanged(...);
   *** flowOn(...);
   *** getCoroutineContext(...);
   *** isActive(...);
}

-keep class kotlinx.coroutines.flow.SharedFlowKt
-keepclassmembers class kotlinx.coroutines.flow.SharedFlowKt {
   *** MutableSharedFlow(...);
}

-keep class kotlinx.coroutines.flow.SharingCommand
-keepclassmembers class kotlinx.coroutines.flow.SharingCommand {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlinx.coroutines.flow.SharingStartedKt
-keepclassmembers class kotlinx.coroutines.flow.SharingStartedKt {
   *** WhileSubscribed-5qebJ5I(...);
}

-keep class kotlinx.coroutines.flow.StateFlowKt
-keepclassmembers class kotlinx.coroutines.flow.StateFlowKt {
   *** MutableStateFlow(...);
   *** getAndUpdate(...);
   *** update(...);
   *** updateAndGet(...);
}

-keep class kotlinx.coroutines.channels.AbstractChannelKt
-keepclassmembers class kotlinx.coroutines.channels.AbstractChannelKt {
}

-keep class kotlinx.coroutines.channels.ActorKt
-keepclassmembers class kotlinx.coroutines.channels.ActorKt {
}

-keep class kotlinx.coroutines.channels.BroadcastChannelKt
-keepclassmembers class kotlinx.coroutines.channels.BroadcastChannelKt {
}

-keep class kotlinx.coroutines.channels.BroadcastKt
-keepclassmembers class kotlinx.coroutines.channels.BroadcastKt {
}

-keep class kotlinx.coroutines.channels.BufferOverflow
-keepclassmembers class kotlinx.coroutines.channels.BufferOverflow {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlinx.coroutines.channels.ChannelKt
-keepclassmembers class kotlinx.coroutines.channels.ChannelKt {
   *** getOrElse-WpGqRn0(...);
   *** onClosed-WpGqRn0(...);
   *** onFailure-WpGqRn0(...);
   *** onSuccess-WpGqRn0(...);
}

-keep class kotlinx.coroutines.channels.ChannelResult$Companion
-keepclassmembers class kotlinx.coroutines.channels.ChannelResult$Companion {
   <init>(...);
   *** closed-JP2dKIU(...);
   *** failure-PtdJZtk(...);
   *** success-JP2dKIU(...);
}

-keep class kotlinx.coroutines.channels.ChannelResult
-keepclassmembers class kotlinx.coroutines.channels.ChannelResult {
}

-keep class kotlinx.coroutines.channels.ChannelsKt
-keepclassmembers class kotlinx.coroutines.channels.ChannelsKt {
}

-keep class kotlinx.coroutines.channels.ClosedReceiveChannelException
-keepclassmembers class kotlinx.coroutines.channels.ClosedReceiveChannelException {
   <init>(...);
}

-keep class kotlinx.coroutines.channels.ClosedSendChannelException
-keepclassmembers class kotlinx.coroutines.channels.ClosedSendChannelException {
   <init>(...);
}

-keep class kotlinx.coroutines.channels.ConflatedBroadcastChannel
-keepclassmembers class kotlinx.coroutines.channels.ConflatedBroadcastChannel {
   <init>(...);
   <init>(...);
   *** isClosedForSend(...);
   *** getValue(...);
   *** getValueOrNull(...);
   *** cancel(...);
   *** close(...);
   *** invokeOnClose(...);
   *** offer(...);
   *** send(...);
   *** trySend-JP2dKIU(...);
}

-keep class kotlinx.coroutines.channels.ChannelIterator$DefaultImpls
-keepclassmembers class kotlinx.coroutines.channels.ChannelIterator$DefaultImpls {
}

-keep class kotlinx.coroutines.channels.ChannelIterator
-keepclassmembers class kotlinx.coroutines.channels.ChannelIterator {
}

-keep class kotlinx.coroutines.channels.ProduceKt
-keepclassmembers class kotlinx.coroutines.channels.ProduceKt {
}

-keep class kotlinx.coroutines.channels.TickerChannelsKt
-keepclassmembers class kotlinx.coroutines.channels.TickerChannelsKt {
}

-keep class kotlinx.coroutines.channels.TickerMode
-keepclassmembers class kotlinx.coroutines.channels.TickerMode {
   *** valueOf(...);
   *** values(...);
}

